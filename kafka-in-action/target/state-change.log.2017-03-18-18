2017-03-18 18:55:44,928] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,19]2017-03-18 18:55:44,931] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,19] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,19] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:44,931] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,30]2017-03-18 18:55:44,934] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,30] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,30] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:44,934] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,47]2017-03-18 18:55:44,936] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,47] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,47] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:44,937] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,29]2017-03-18 18:55:44,939] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,29] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,29] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:44,940] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,41]2017-03-18 18:55:44,945] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,41] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,41] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:44,945] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,39]2017-03-18 18:55:44,948] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,39] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,39] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:44,948] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,17]2017-03-18 18:55:44,951] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,17] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,17] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:44,951] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,10]2017-03-18 18:55:44,953] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,10] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,10] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:44,953] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,14]2017-03-18 18:55:44,955] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,14] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,14] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:44,955] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,40]2017-03-18 18:55:44,957] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,40] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,40] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:44,957] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,18]2017-03-18 18:55:44,959] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,18] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,18] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:44,959] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,0]2017-03-18 18:55:44,961] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,0] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:44,961] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,26]2017-03-18 18:55:44,964] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,26] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,26] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:44,964] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,24]2017-03-18 18:55:44,967] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,24] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,24] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:44,967] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,33]2017-03-18 18:55:44,970] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,33] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,33] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:44,970] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,20]2017-03-18 18:55:44,974] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,20] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,20] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:44,974] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,21]2017-03-18 18:55:44,978] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,21] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,21] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:44,978] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,3]2017-03-18 18:55:44,982] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,3] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,3] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:44,982] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [avro_base_topic,0]2017-03-18 18:55:44,985] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [avro_base_topic,0] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [avro_base_topic,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:44,985] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,22]2017-03-18 18:55:44,988] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,22] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,22] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:44,988] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,5]2017-03-18 18:55:44,993] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,5] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,5] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:44,993] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,12]2017-03-18 18:55:44,996] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,12] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,12] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:44,996] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,8]2017-03-18 18:55:45,000] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,8] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,8] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,001] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,23]2017-03-18 18:55:45,005] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,23] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,23] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,006] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,15]2017-03-18 18:55:45,010] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,15] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,15] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,010] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,11]2017-03-18 18:55:45,015] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,11] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,11] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,015] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,48]2017-03-18 18:55:45,020] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,48] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,48] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,020] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,13]2017-03-18 18:55:45,023] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,13] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,13] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,023] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,6]2017-03-18 18:55:45,026] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,6] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,6] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,026] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,49]2017-03-18 18:55:45,032] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,49] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,49] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,032] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,4]2017-03-18 18:55:45,037] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,4] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,4] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,038] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,28]2017-03-18 18:55:45,042] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,28] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,28] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,042] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,37]2017-03-18 18:55:45,046] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,37] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,37] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,047] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,31]2017-03-18 18:55:45,051] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,31] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,31] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,052] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,44]2017-03-18 18:55:45,057] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,44] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,44] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,057] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,42]2017-03-18 18:55:45,062] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,42] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,42] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,062] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,34]2017-03-18 18:55:45,068] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,34] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,34] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,068] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,46]2017-03-18 18:55:45,074] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,46] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,46] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,074] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,25]2017-03-18 18:55:45,079] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,25] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,25] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,079] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,27]2017-03-18 18:55:45,084] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,27] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,27] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,084] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,45]2017-03-18 18:55:45,088] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,45] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,45] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,089] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,32]2017-03-18 18:55:45,093] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,32] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,32] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,094] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,43]2017-03-18 18:55:45,098] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,43] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,43] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,098] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,36]2017-03-18 18:55:45,103] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,36] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,36] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,103] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,35]2017-03-18 18:55:45,107] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,35] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,35] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,108] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,7]2017-03-18 18:55:45,113] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,7] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,7] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,113] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,38]2017-03-18 18:55:45,118] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,38] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,38] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,118] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,9]2017-03-18 18:55:45,122] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,9] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,9] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,122] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,1]2017-03-18 18:55:45,127] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,1] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,1] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,127] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,2]2017-03-18 18:55:45,133] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,2] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,2] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
2017-03-18 18:55:45,133] [(state.change.logger)
] TRACE Controller 0 epoch 20 started leader election for partition [__consumer_offsets,16]2017-03-18 18:55:45,138] [(state.change.logger)
] ERROR Controller 0 epoch 20 initiated state change for partition [__consumer_offsets,16] from OfflinePartition to OnlinePartition failedkafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,16] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply$mcZ$sp(KafkaController.scala:1168)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.controller.KafkaController$SessionExpirationListener$$anonfun$handleNewSession$1.apply(KafkaController.scala:1166)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$SessionExpirationListener.handleNewSession(KafkaController.scala:1166)
	at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:735)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
