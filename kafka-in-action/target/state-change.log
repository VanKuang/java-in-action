[DEBUG] [2017-04-08 13:20:05,789] [main] [state.change.logger] - preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@4cdf35a9, name=log4j:logger=state.change.logger
[TRACE] [2017-04-08 13:20:52,735] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,19]
[ERROR] [2017-04-08 13:20:52,743] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,19] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,19] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 0, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,745] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,30]
[ERROR] [2017-04-08 13:20:52,751] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,30] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,30] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 2, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,751] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,47]
[ERROR] [2017-04-08 13:20:52,758] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,47] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,47] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,759] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,29]
[ERROR] [2017-04-08 13:20:52,765] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,29] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,29] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,766] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,41]
[ERROR] [2017-04-08 13:20:52,772] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,41] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,41] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,773] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,39]
[ERROR] [2017-04-08 13:20:52,780] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,39] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,39] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 0, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,781] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,10]
[ERROR] [2017-04-08 13:20:52,793] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,10] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,10] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,794] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,17]
[ERROR] [2017-04-08 13:20:52,799] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,17] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,17] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,800] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,14]
[ERROR] [2017-04-08 13:20:52,805] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,14] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,14] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 1, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,806] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,40]
[ERROR] [2017-04-08 13:20:52,810] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,40] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,40] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,811] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,18]
[ERROR] [2017-04-08 13:20:52,816] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,18] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,18] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 2, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,817] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,26]
[ERROR] [2017-04-08 13:20:52,821] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,26] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,26] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 1, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,822] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,0]
[ERROR] [2017-04-08 13:20:52,826] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,0] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 2, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,827] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,24]
[ERROR] [2017-04-08 13:20:52,831] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,24] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,24] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 2, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,832] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,33]
[ERROR] [2017-04-08 13:20:52,838] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,33] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,33] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 0, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,838] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,20]
[ERROR] [2017-04-08 13:20:52,844] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,20] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,20] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 1, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,846] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,21]
[ERROR] [2017-04-08 13:20:52,850] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,21] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,21] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 0, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,851] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,3]
[ERROR] [2017-04-08 13:20:52,855] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,3] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,3] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 0, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,857] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [avro_base_topic,0]
[ERROR] [2017-04-08 13:20:52,863] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [avro_base_topic,0] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [avro_base_topic,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,863] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,22]
[ERROR] [2017-04-08 13:20:52,870] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,22] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,22] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,871] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,5]
[ERROR] [2017-04-08 13:20:52,877] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,5] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,5] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,878] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,12]
[ERROR] [2017-04-08 13:20:52,883] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,12] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,12] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 2, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,885] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,8]
[ERROR] [2017-04-08 13:20:52,890] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,8] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,8] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 1, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,890] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,23]
[ERROR] [2017-04-08 13:20:52,895] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,23] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,23] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,896] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,15]
[ERROR] [2017-04-08 13:20:52,901] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,15] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,15] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 0, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,902] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,48]
[ERROR] [2017-04-08 13:20:52,907] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,48] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,48] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 2, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,907] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,11]
[ERROR] [2017-04-08 13:20:52,913] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,11] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,11] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,914] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,13]
[ERROR] [2017-04-08 13:20:52,919] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,13] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,13] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 0, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,919] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,49]
[ERROR] [2017-04-08 13:20:52,923] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,49] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,49] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 0, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,924] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,6]
[ERROR] [2017-04-08 13:20:52,930] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,6] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,6] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 2, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,930] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,28]
[ERROR] [2017-04-08 13:20:52,935] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,28] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,28] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,935] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,4]
[ERROR] [2017-04-08 13:20:52,941] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,4] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,4] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,942] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,37]
[ERROR] [2017-04-08 13:20:52,947] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,37] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,37] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 0, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,948] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,31]
[ERROR] [2017-04-08 13:20:52,952] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,31] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,31] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 0, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,953] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,44]
[ERROR] [2017-04-08 13:20:52,957] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,44] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,44] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 1, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,958] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,42]
[ERROR] [2017-04-08 13:20:52,964] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,42] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,42] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 2, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,964] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,34]
[ERROR] [2017-04-08 13:20:52,969] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,34] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,34] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,969] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,46]
[ERROR] [2017-04-08 13:20:52,974] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,46] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,46] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,975] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,25]
[ERROR] [2017-04-08 13:20:52,979] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,25] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,25] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 0, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,980] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,45]
[ERROR] [2017-04-08 13:20:52,987] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,45] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,45] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 0, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,987] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,27]
[ERROR] [2017-04-08 13:20:52,994] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,27] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,27] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 0, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:52,994] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,32]
[ERROR] [2017-04-08 13:20:53,000] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,32] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,32] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 1, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:53,001] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,43]
[ERROR] [2017-04-08 13:20:53,014] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,43] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,43] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 0, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:53,015] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,36]
[ERROR] [2017-04-08 13:20:53,019] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,36] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,36] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 2, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:53,019] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,35]
[ERROR] [2017-04-08 13:20:53,024] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,35] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,35] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:53,026] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,7]
[ERROR] [2017-04-08 13:20:53,030] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,7] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,7] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 0, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:53,031] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,9]
[ERROR] [2017-04-08 13:20:53,039] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,9] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,9] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 0, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:53,039] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,38]
[ERROR] [2017-04-08 13:20:53,047] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,38] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,38] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 1, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:53,049] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,1]
[ERROR] [2017-04-08 13:20:53,059] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,1] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,1] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 0, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:53,060] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,2]
[ERROR] [2017-04-08 13:20:53,063] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,2] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,2] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 1, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:53,063] [main] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,16]
[ERROR] [2017-04-08 13:20:53,069] [main] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,16] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,16] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:20:53,448] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-49
[TRACE] [2017-04-08 13:20:53,449] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-38
[TRACE] [2017-04-08 13:20:53,449] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-16
[TRACE] [2017-04-08 13:20:53,449] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-27
[TRACE] [2017-04-08 13:20:53,449] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-8
[TRACE] [2017-04-08 13:20:53,449] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-19
[TRACE] [2017-04-08 13:20:53,449] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:28,ControllerEpoch:32) to broker 0 for partition avro_base_topic-0
[TRACE] [2017-04-08 13:20:53,449] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-2
[TRACE] [2017-04-08 13:20:53,449] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-13
[TRACE] [2017-04-08 13:20:53,449] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-24
[TRACE] [2017-04-08 13:20:53,449] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-46
[TRACE] [2017-04-08 13:20:53,449] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-35
[TRACE] [2017-04-08 13:20:53,449] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-5
[TRACE] [2017-04-08 13:20:53,449] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-43
[TRACE] [2017-04-08 13:20:53,449] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-21
[TRACE] [2017-04-08 13:20:53,449] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-32
[TRACE] [2017-04-08 13:20:53,449] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-10
[TRACE] [2017-04-08 13:20:53,449] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-37
[TRACE] [2017-04-08 13:20:53,449] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-48
[TRACE] [2017-04-08 13:20:53,449] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-29
[TRACE] [2017-04-08 13:20:53,449] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-40
[TRACE] [2017-04-08 13:20:53,449] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-18
[TRACE] [2017-04-08 13:20:53,449] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-7
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-23
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-34
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-45
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-26
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-15
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-4
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-42
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-20
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-31
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-9
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-12
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-1
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-17
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-28
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-6
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-39
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-44
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-47
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-36
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-3
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-14
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-25
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-30
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-41
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-22
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-33
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-11
[TRACE] [2017-04-08 13:20:53,450] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-0
[TRACE] [2017-04-08 13:20:53,493] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,25] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,494] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,12] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,494] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,31] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,494] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,40] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,494] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,35] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,494] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,9] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,494] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,43] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,495] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,2] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,495] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,11] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,495] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,29] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,495] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,30] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,496] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,4] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,496] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,42] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,496] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,26] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,496] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,34] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,496] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,17] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,496] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,37] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,497] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,27] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,497] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,10] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,497] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,41] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,497] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,20] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,497] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,28] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,497] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,46] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,498] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,39] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,498] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,47] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,498] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,49] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,498] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,22] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,499] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,1] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,499] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,24] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,499] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,6] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,499] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,36] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,499] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,8] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,499] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,38] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,500] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,16] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,500] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,21] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,500] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,18] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,501] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,0] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,501] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,48] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,501] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,5] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,501] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,13] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,502] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,3] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,502] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,44] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,502] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,15] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,502] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,7] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,502] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,19] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,503] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,33] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,503] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,45] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,503] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,23] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,503] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,32] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,504] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed state of replica 0 for partition [__consumer_offsets,14] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:20:53,506] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,49]
[TRACE] [2017-04-08 13:20:53,506] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,38]
[TRACE] [2017-04-08 13:20:53,506] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,27]
[TRACE] [2017-04-08 13:20:53,506] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,16]
[TRACE] [2017-04-08 13:20:53,506] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,8]
[TRACE] [2017-04-08 13:20:53,506] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,19]
[TRACE] [2017-04-08 13:20:53,506] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,2]
[TRACE] [2017-04-08 13:20:53,507] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,13]
[TRACE] [2017-04-08 13:20:53,507] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,46]
[TRACE] [2017-04-08 13:20:53,507] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,35]
[TRACE] [2017-04-08 13:20:53,507] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,24]
[TRACE] [2017-04-08 13:20:53,507] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,5]
[TRACE] [2017-04-08 13:20:53,507] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,43]
[TRACE] [2017-04-08 13:20:53,507] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,21]
[TRACE] [2017-04-08 13:20:53,507] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,32]
[TRACE] [2017-04-08 13:20:53,507] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,10]
[TRACE] [2017-04-08 13:20:53,507] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,37]
[TRACE] [2017-04-08 13:20:53,507] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,48]
[TRACE] [2017-04-08 13:20:53,507] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,40]
[TRACE] [2017-04-08 13:20:53,507] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,29]
[TRACE] [2017-04-08 13:20:53,507] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,18]
[TRACE] [2017-04-08 13:20:53,507] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,7]
[TRACE] [2017-04-08 13:20:53,507] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,34]
[TRACE] [2017-04-08 13:20:53,508] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,45]
[TRACE] [2017-04-08 13:20:53,508] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,23]
[TRACE] [2017-04-08 13:20:53,508] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,26]
[TRACE] [2017-04-08 13:20:53,508] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,4]
[TRACE] [2017-04-08 13:20:53,508] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,15]
[TRACE] [2017-04-08 13:20:53,508] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,42]
[TRACE] [2017-04-08 13:20:53,508] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,20]
[TRACE] [2017-04-08 13:20:53,508] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,31]
[TRACE] [2017-04-08 13:20:53,508] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,9]
[TRACE] [2017-04-08 13:20:53,508] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,12]
[TRACE] [2017-04-08 13:20:53,508] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,1]
[TRACE] [2017-04-08 13:20:53,508] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,28]
[TRACE] [2017-04-08 13:20:53,508] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,17]
[TRACE] [2017-04-08 13:20:53,508] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,6]
[TRACE] [2017-04-08 13:20:53,508] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,39]
[TRACE] [2017-04-08 13:20:53,508] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,44]
[TRACE] [2017-04-08 13:20:53,508] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,47]
[TRACE] [2017-04-08 13:20:53,508] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,36]
[TRACE] [2017-04-08 13:20:53,509] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,14]
[TRACE] [2017-04-08 13:20:53,509] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,25]
[TRACE] [2017-04-08 13:20:53,509] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,3]
[TRACE] [2017-04-08 13:20:53,509] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,41]
[TRACE] [2017-04-08 13:20:53,509] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,30]
[TRACE] [2017-04-08 13:20:53,509] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,11]
[TRACE] [2017-04-08 13:20:53,509] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,22]
[TRACE] [2017-04-08 13:20:53,509] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,33]
[TRACE] [2017-04-08 13:20:53,509] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition [__consumer_offsets,0]
[TRACE] [2017-04-08 13:20:53,514] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-49
[TRACE] [2017-04-08 13:20:53,514] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-38
[TRACE] [2017-04-08 13:20:53,514] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-27
[TRACE] [2017-04-08 13:20:53,514] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-16
[TRACE] [2017-04-08 13:20:53,514] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-8
[TRACE] [2017-04-08 13:20:53,514] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-19
[TRACE] [2017-04-08 13:20:53,514] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-2
[TRACE] [2017-04-08 13:20:53,514] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-13
[TRACE] [2017-04-08 13:20:53,514] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-46
[TRACE] [2017-04-08 13:20:53,514] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-35
[TRACE] [2017-04-08 13:20:53,514] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-24
[TRACE] [2017-04-08 13:20:53,514] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-5
[TRACE] [2017-04-08 13:20:53,514] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-43
[TRACE] [2017-04-08 13:20:53,514] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-21
[TRACE] [2017-04-08 13:20:53,514] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-32
[TRACE] [2017-04-08 13:20:53,515] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-10
[TRACE] [2017-04-08 13:20:53,515] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-37
[TRACE] [2017-04-08 13:20:53,515] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-48
[TRACE] [2017-04-08 13:20:53,515] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-40
[TRACE] [2017-04-08 13:20:53,515] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-29
[TRACE] [2017-04-08 13:20:53,515] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-18
[TRACE] [2017-04-08 13:20:53,515] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-7
[TRACE] [2017-04-08 13:20:53,515] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-34
[TRACE] [2017-04-08 13:20:53,515] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-45
[TRACE] [2017-04-08 13:20:53,515] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-23
[TRACE] [2017-04-08 13:20:53,515] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-26
[TRACE] [2017-04-08 13:20:53,515] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-4
[TRACE] [2017-04-08 13:20:53,515] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-15
[TRACE] [2017-04-08 13:20:53,515] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-42
[TRACE] [2017-04-08 13:20:53,515] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-20
[TRACE] [2017-04-08 13:20:53,516] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-31
[TRACE] [2017-04-08 13:20:53,516] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-9
[TRACE] [2017-04-08 13:20:53,516] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-12
[TRACE] [2017-04-08 13:20:53,516] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-1
[TRACE] [2017-04-08 13:20:53,516] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-28
[TRACE] [2017-04-08 13:20:53,516] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-17
[TRACE] [2017-04-08 13:20:53,516] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-6
[TRACE] [2017-04-08 13:20:53,516] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-39
[TRACE] [2017-04-08 13:20:53,516] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-44
[TRACE] [2017-04-08 13:20:53,516] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-47
[TRACE] [2017-04-08 13:20:53,516] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-36
[TRACE] [2017-04-08 13:20:53,516] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-14
[TRACE] [2017-04-08 13:20:53,516] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-25
[TRACE] [2017-04-08 13:20:53,516] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-3
[TRACE] [2017-04-08 13:20:53,516] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-41
[TRACE] [2017-04-08 13:20:53,516] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-30
[TRACE] [2017-04-08 13:20:53,517] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-11
[TRACE] [2017-04-08 13:20:53,517] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-22
[TRACE] [2017-04-08 13:20:53,517] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-33
[TRACE] [2017-04-08 13:20:53,517] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32) to broker 0 for partition __consumer_offsets-0
[TRACE] [2017-04-08 13:20:53,519] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,19]
[TRACE] [2017-04-08 13:20:53,528] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,19]
[TRACE] [2017-04-08 13:20:53,532] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,19] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,532] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,30]
[TRACE] [2017-04-08 13:20:53,538] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,30]
[TRACE] [2017-04-08 13:20:53,541] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,30] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,541] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,47]
[TRACE] [2017-04-08 13:20:53,544] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,47]
[TRACE] [2017-04-08 13:20:53,545] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,47] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,546] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,29]
[TRACE] [2017-04-08 13:20:53,550] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,29]
[TRACE] [2017-04-08 13:20:53,553] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,29] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,553] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,41]
[TRACE] [2017-04-08 13:20:53,558] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,41]
[TRACE] [2017-04-08 13:20:53,559] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,41] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,559] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,39]
[TRACE] [2017-04-08 13:20:53,562] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,39]
[TRACE] [2017-04-08 13:20:53,564] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,39] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,564] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,10]
[TRACE] [2017-04-08 13:20:53,571] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,10]
[TRACE] [2017-04-08 13:20:53,573] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,10] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,573] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,17]
[TRACE] [2017-04-08 13:20:53,576] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,17]
[TRACE] [2017-04-08 13:20:53,578] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,17] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,578] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,14]
[TRACE] [2017-04-08 13:20:53,582] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,14]
[TRACE] [2017-04-08 13:20:53,584] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,14] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,585] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,40]
[TRACE] [2017-04-08 13:20:53,590] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,40]
[TRACE] [2017-04-08 13:20:53,591] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,40] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,592] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,18]
[TRACE] [2017-04-08 13:20:53,600] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,18]
[TRACE] [2017-04-08 13:20:53,604] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,18] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,604] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,26]
[TRACE] [2017-04-08 13:20:53,614] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,26]
[TRACE] [2017-04-08 13:20:53,617] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,26] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,617] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,0]
[TRACE] [2017-04-08 13:20:53,623] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,0]
[TRACE] [2017-04-08 13:20:53,624] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,0] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,624] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,24]
[TRACE] [2017-04-08 13:20:53,627] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,24]
[TRACE] [2017-04-08 13:20:53,628] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,24] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,628] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,33]
[TRACE] [2017-04-08 13:20:53,633] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,33]
[TRACE] [2017-04-08 13:20:53,635] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,33] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,635] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,20]
[TRACE] [2017-04-08 13:20:53,657] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,20]
[TRACE] [2017-04-08 13:20:53,658] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,20] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,658] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,21]
[TRACE] [2017-04-08 13:20:53,661] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,21]
[TRACE] [2017-04-08 13:20:53,662] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,21] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,662] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,3]
[TRACE] [2017-04-08 13:20:53,667] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,3]
[TRACE] [2017-04-08 13:20:53,669] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,3] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,670] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [avro_base_topic,0]
[ERROR] [2017-04-08 13:20:53,675] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [avro_base_topic,0] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [avro_base_topic,0] is alive. Live brokers are: [Set(0)], Assigned replicas are: [List(1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:433)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:355)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:843)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[TRACE] [2017-04-08 13:20:53,676] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,22]
[TRACE] [2017-04-08 13:20:53,680] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,22]
[TRACE] [2017-04-08 13:20:53,681] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,22] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,681] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,5]
[TRACE] [2017-04-08 13:20:53,689] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,5]
[TRACE] [2017-04-08 13:20:53,694] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,5] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,694] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,12]
[TRACE] [2017-04-08 13:20:53,703] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,12]
[TRACE] [2017-04-08 13:20:53,705] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,12] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,705] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,8]
[TRACE] [2017-04-08 13:20:53,710] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,8]
[TRACE] [2017-04-08 13:20:53,712] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,8] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,712] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,23]
[TRACE] [2017-04-08 13:20:53,718] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,23]
[TRACE] [2017-04-08 13:20:53,720] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,23] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,720] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,15]
[TRACE] [2017-04-08 13:20:53,725] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,15]
[TRACE] [2017-04-08 13:20:53,727] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,15] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,727] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,48]
[TRACE] [2017-04-08 13:20:53,731] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,48]
[TRACE] [2017-04-08 13:20:53,733] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,48] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,733] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,11]
[TRACE] [2017-04-08 13:20:53,736] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,11]
[TRACE] [2017-04-08 13:20:53,737] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,11] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,738] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,13]
[TRACE] [2017-04-08 13:20:53,740] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,13]
[TRACE] [2017-04-08 13:20:53,742] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,13] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,742] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,49]
[TRACE] [2017-04-08 13:20:53,745] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,49]
[TRACE] [2017-04-08 13:20:53,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,49] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,6]
[TRACE] [2017-04-08 13:20:53,753] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,6]
[TRACE] [2017-04-08 13:20:53,755] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,6] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,755] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,28]
[TRACE] [2017-04-08 13:20:53,758] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,28]
[TRACE] [2017-04-08 13:20:53,759] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,28] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,759] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,4]
[TRACE] [2017-04-08 13:20:53,763] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,4]
[TRACE] [2017-04-08 13:20:53,764] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,4] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,764] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,37]
[TRACE] [2017-04-08 13:20:53,767] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,37]
[TRACE] [2017-04-08 13:20:53,768] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,37] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,768] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,31]
[TRACE] [2017-04-08 13:20:53,771] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,31]
[TRACE] [2017-04-08 13:20:53,773] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,31] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,774] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,44]
[TRACE] [2017-04-08 13:20:53,777] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,44]
[TRACE] [2017-04-08 13:20:53,778] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,44] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,778] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,42]
[TRACE] [2017-04-08 13:20:53,781] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,42]
[TRACE] [2017-04-08 13:20:53,782] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,42] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,782] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,34]
[TRACE] [2017-04-08 13:20:53,785] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,34]
[TRACE] [2017-04-08 13:20:53,787] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,34] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,787] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,46]
[TRACE] [2017-04-08 13:20:53,791] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,46]
[TRACE] [2017-04-08 13:20:53,792] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,46] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,792] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,25]
[TRACE] [2017-04-08 13:20:53,796] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,25]
[TRACE] [2017-04-08 13:20:53,797] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,25] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,797] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,45]
[TRACE] [2017-04-08 13:20:53,800] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,45]
[TRACE] [2017-04-08 13:20:53,801] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,45] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,801] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,27]
[TRACE] [2017-04-08 13:20:53,804] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,27]
[TRACE] [2017-04-08 13:20:53,805] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,27] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,805] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,32]
[TRACE] [2017-04-08 13:20:53,808] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,32]
[TRACE] [2017-04-08 13:20:53,809] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,32] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,809] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,43]
[TRACE] [2017-04-08 13:20:53,814] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,43]
[TRACE] [2017-04-08 13:20:53,816] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,43] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,816] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,36]
[TRACE] [2017-04-08 13:20:53,819] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,36]
[TRACE] [2017-04-08 13:20:53,820] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,36] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,820] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,35]
[TRACE] [2017-04-08 13:20:53,823] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,35]
[TRACE] [2017-04-08 13:20:53,826] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,35] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,826] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,7]
[TRACE] [2017-04-08 13:20:53,830] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,7]
[TRACE] [2017-04-08 13:20:53,831] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,7] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,831] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,9]
[TRACE] [2017-04-08 13:20:53,835] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,9]
[TRACE] [2017-04-08 13:20:53,836] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,9] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,836] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,38]
[TRACE] [2017-04-08 13:20:53,840] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,38]
[TRACE] [2017-04-08 13:20:53,841] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,38] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,842] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,1]
[TRACE] [2017-04-08 13:20:53,846] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,1]
[TRACE] [2017-04-08 13:20:53,847] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,1] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,847] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,2]
[TRACE] [2017-04-08 13:20:53,850] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,2]
[TRACE] [2017-04-08 13:20:53,851] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,2] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,851] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,16]
[TRACE] [2017-04-08 13:20:53,854] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 elected leader 0 for Offline partition [__consumer_offsets,16]
[TRACE] [2017-04-08 13:20:53,855] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 changed partition [__consumer_offsets,16] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:20:53,855] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,49]
[TRACE] [2017-04-08 13:20:53,855] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,38]
[TRACE] [2017-04-08 13:20:53,855] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,16]
[TRACE] [2017-04-08 13:20:53,855] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,27]
[TRACE] [2017-04-08 13:20:53,855] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,8]
[TRACE] [2017-04-08 13:20:53,855] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,19]
[TRACE] [2017-04-08 13:20:53,855] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,13]
[TRACE] [2017-04-08 13:20:53,855] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,2]
[TRACE] [2017-04-08 13:20:53,855] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,24]
[TRACE] [2017-04-08 13:20:53,855] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,46]
[TRACE] [2017-04-08 13:20:53,855] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,35]
[TRACE] [2017-04-08 13:20:53,855] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,5]
[TRACE] [2017-04-08 13:20:53,855] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,43]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,21]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,32]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,10]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,37]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,48]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,29]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,40]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,18]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,7]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,23]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,34]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,45]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,26]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,15]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,4]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,42]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,20]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,31]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,9]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,12]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,1]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,17]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,28]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,6]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,39]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,44]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,47]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,36]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,3]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,14]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,25]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,30]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,41]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,22]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,33]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,11]
[TRACE] [2017-04-08 13:20:53,856] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,0]
[TRACE] [2017-04-08 13:20:53,859] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-49
[TRACE] [2017-04-08 13:20:53,859] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-38
[TRACE] [2017-04-08 13:20:53,859] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-16
[TRACE] [2017-04-08 13:20:53,859] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-27
[TRACE] [2017-04-08 13:20:53,859] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-8
[TRACE] [2017-04-08 13:20:53,859] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-19
[TRACE] [2017-04-08 13:20:53,859] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-13
[TRACE] [2017-04-08 13:20:53,859] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-2
[TRACE] [2017-04-08 13:20:53,859] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-24
[TRACE] [2017-04-08 13:20:53,859] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-46
[TRACE] [2017-04-08 13:20:53,859] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-35
[TRACE] [2017-04-08 13:20:53,859] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-5
[TRACE] [2017-04-08 13:20:53,859] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-43
[TRACE] [2017-04-08 13:20:53,859] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-21
[TRACE] [2017-04-08 13:20:53,859] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-32
[TRACE] [2017-04-08 13:20:53,859] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-10
[TRACE] [2017-04-08 13:20:53,859] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-37
[TRACE] [2017-04-08 13:20:53,859] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-48
[TRACE] [2017-04-08 13:20:53,859] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-29
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-40
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-18
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-7
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-23
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-34
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-45
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-26
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-15
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-4
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-42
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-20
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-31
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-9
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-12
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-1
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-17
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-28
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-6
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-39
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-44
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-47
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-36
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-3
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-14
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-25
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-30
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-41
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-22
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-33
[TRACE] [2017-04-08 13:20:53,860] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-11
[TRACE] [2017-04-08 13:20:53,861] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 33 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-0
[TRACE] [2017-04-08 13:20:58,558] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,559] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,559] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,559] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,559] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,559] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,559] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,559] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,559] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,560] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,560] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,560] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,560] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,560] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,560] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,560] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,560] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,560] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,561] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,561] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,561] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,561] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,561] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,561] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,561] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,562] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,562] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,562] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,562] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,562] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,562] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,562] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,562] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,562] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,562] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,563] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,563] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,563] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,563] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,563] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,563] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,563] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,563] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,563] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,564] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,564] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,564] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:28,ControllerEpoch:32),ReplicationFactor:1),AllReplicas:1) for partition avro_base_topic-0 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,564] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,564] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,564] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,564] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 0
[TRACE] [2017-04-08 13:20:58,573] [Controller-0-to-broker-0-send-thread] [state.change.logger] - Controller 0 epoch 33 received response {error_code=0} for a request sent to broker localhost:9092 (id: 0 rack: null)
[TRACE] [2017-04-08 13:20:58,651] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=38, isr=[0], zkVersion=99, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,13]
[TRACE] [2017-04-08 13:20:58,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=38, isr=[0], zkVersion=76, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,46]
[TRACE] [2017-04-08 13:20:58,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=60, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,9]
[TRACE] [2017-04-08 13:20:58,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=64, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,42]
[TRACE] [2017-04-08 13:20:58,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=60, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,21]
[TRACE] [2017-04-08 13:20:58,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=66, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,17]
[TRACE] [2017-04-08 13:20:58,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=66, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,30]
[TRACE] [2017-04-08 13:20:58,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=73, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,26]
[TRACE] [2017-04-08 13:20:58,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=82, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,5]
[TRACE] [2017-04-08 13:20:58,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=67, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,38]
[TRACE] [2017-04-08 13:20:58,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=38, isr=[0], zkVersion=98, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,1]
[TRACE] [2017-04-08 13:20:58,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=38, isr=[0], zkVersion=92, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,34]
[TRACE] [2017-04-08 13:20:58,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=38, isr=[0], zkVersion=74, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,16]
[TRACE] [2017-04-08 13:20:58,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=78, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,45]
[TRACE] [2017-04-08 13:20:58,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=96, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,12]
[TRACE] [2017-04-08 13:20:58,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=36, isr=[0], zkVersion=63, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,41]
[TRACE] [2017-04-08 13:20:58,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=85, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,24]
[TRACE] [2017-04-08 13:20:58,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=69, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,20]
[TRACE] [2017-04-08 13:20:58,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=38, isr=[0], zkVersion=76, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,49]
[TRACE] [2017-04-08 13:20:58,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=92, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,0]
[TRACE] [2017-04-08 13:20:58,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=36, isr=[0], zkVersion=79, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,29]
[TRACE] [2017-04-08 13:20:58,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=38, isr=[0], zkVersion=71, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,25]
[TRACE] [2017-04-08 13:20:58,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=67, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,8]
[TRACE] [2017-04-08 13:20:58,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=38, isr=[0], zkVersion=110, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,37]
[TRACE] [2017-04-08 13:20:58,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=38, isr=[0], zkVersion=69, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,4]
[TRACE] [2017-04-08 13:20:58,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=96, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,33]
[TRACE] [2017-04-08 13:20:58,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=60, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,15]
[TRACE] [2017-04-08 13:20:58,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=95, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,48]
[TRACE] [2017-04-08 13:20:58,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=73, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,11]
[TRACE] [2017-04-08 13:20:58,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=71, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,44]
[TRACE] [2017-04-08 13:20:58,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=66, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,23]
[TRACE] [2017-04-08 13:20:58,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=38, isr=[0], zkVersion=71, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,19]
[TRACE] [2017-04-08 13:20:58,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=89, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,32]
[TRACE] [2017-04-08 13:20:58,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=38, isr=[0], zkVersion=69, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,28]
[TRACE] [2017-04-08 13:20:58,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=38, isr=[0], zkVersion=71, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,7]
[TRACE] [2017-04-08 13:20:58,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=38, isr=[0], zkVersion=106, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,40]
[TRACE] [2017-04-08 13:20:58,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=60, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,3]
[TRACE] [2017-04-08 13:20:58,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=64, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,36]
[TRACE] [2017-04-08 13:20:58,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=36, isr=[0], zkVersion=63, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,47]
[TRACE] [2017-04-08 13:20:58,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=92, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,14]
[TRACE] [2017-04-08 13:20:58,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=38, isr=[0], zkVersion=79, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,43]
[TRACE] [2017-04-08 13:20:58,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=38, isr=[0], zkVersion=97, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,10]
[TRACE] [2017-04-08 13:20:58,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=38, isr=[0], zkVersion=69, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,22]
[TRACE] [2017-04-08 13:20:58,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=64, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,18]
[TRACE] [2017-04-08 13:20:58,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=38, isr=[0], zkVersion=76, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,31]
[TRACE] [2017-04-08 13:20:58,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=60, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,27]
[TRACE] [2017-04-08 13:20:58,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=72, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,39]
[TRACE] [2017-04-08 13:20:58,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=68, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,6]
[TRACE] [2017-04-08 13:20:58,654] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=68, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,35]
[TRACE] [2017-04-08 13:20:58,654] [kafka-request-handler-5] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=32, leader=0, leaderEpoch=35, isr=[0], zkVersion=76, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 33 for partition [__consumer_offsets,2]
[TRACE] [2017-04-08 13:20:58,708] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,0]
[TRACE] [2017-04-08 13:20:58,708] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,29]
[TRACE] [2017-04-08 13:20:58,708] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,48]
[TRACE] [2017-04-08 13:20:58,708] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,10]
[TRACE] [2017-04-08 13:20:58,708] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,45]
[TRACE] [2017-04-08 13:20:58,708] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,26]
[TRACE] [2017-04-08 13:20:58,708] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,7]
[TRACE] [2017-04-08 13:20:58,708] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,42]
[TRACE] [2017-04-08 13:20:58,708] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,4]
[TRACE] [2017-04-08 13:20:58,708] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,23]
[TRACE] [2017-04-08 13:20:58,708] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,1]
[TRACE] [2017-04-08 13:20:58,708] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,20]
[TRACE] [2017-04-08 13:20:58,708] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,39]
[TRACE] [2017-04-08 13:20:58,708] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,17]
[TRACE] [2017-04-08 13:20:58,708] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,36]
[TRACE] [2017-04-08 13:20:58,708] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,14]
[TRACE] [2017-04-08 13:20:58,708] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,33]
[TRACE] [2017-04-08 13:20:58,708] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,49]
[TRACE] [2017-04-08 13:20:58,708] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,11]
[TRACE] [2017-04-08 13:20:58,708] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,30]
[TRACE] [2017-04-08 13:20:58,708] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,46]
[TRACE] [2017-04-08 13:20:58,708] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,27]
[TRACE] [2017-04-08 13:20:58,708] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,8]
[TRACE] [2017-04-08 13:20:58,708] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,24]
[TRACE] [2017-04-08 13:20:58,709] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,43]
[TRACE] [2017-04-08 13:20:58,709] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,5]
[TRACE] [2017-04-08 13:20:58,709] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,21]
[TRACE] [2017-04-08 13:20:58,709] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,2]
[TRACE] [2017-04-08 13:20:58,709] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,40]
[TRACE] [2017-04-08 13:20:58,709] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,37]
[TRACE] [2017-04-08 13:20:58,709] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,18]
[TRACE] [2017-04-08 13:20:58,709] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,34]
[TRACE] [2017-04-08 13:20:58,709] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,15]
[TRACE] [2017-04-08 13:20:58,709] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,12]
[TRACE] [2017-04-08 13:20:58,709] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,31]
[TRACE] [2017-04-08 13:20:58,709] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,9]
[TRACE] [2017-04-08 13:20:58,709] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,47]
[TRACE] [2017-04-08 13:20:58,709] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,19]
[TRACE] [2017-04-08 13:20:58,709] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,28]
[TRACE] [2017-04-08 13:20:58,709] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,38]
[TRACE] [2017-04-08 13:20:58,709] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,35]
[TRACE] [2017-04-08 13:20:58,709] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,44]
[TRACE] [2017-04-08 13:20:58,709] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,6]
[TRACE] [2017-04-08 13:20:58,709] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,25]
[TRACE] [2017-04-08 13:20:58,709] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,16]
[TRACE] [2017-04-08 13:20:58,709] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,22]
[TRACE] [2017-04-08 13:20:58,709] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,41]
[TRACE] [2017-04-08 13:20:58,709] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,32]
[TRACE] [2017-04-08 13:20:58,709] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,3]
[TRACE] [2017-04-08 13:20:58,709] [kafka-request-handler-5] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,13]
[TRACE] [2017-04-08 13:20:59,641] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,22]
[TRACE] [2017-04-08 13:20:59,644] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,25]
[TRACE] [2017-04-08 13:20:59,644] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,28]
[TRACE] [2017-04-08 13:20:59,644] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,31]
[TRACE] [2017-04-08 13:20:59,644] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,34]
[TRACE] [2017-04-08 13:20:59,644] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,37]
[TRACE] [2017-04-08 13:20:59,644] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,40]
[TRACE] [2017-04-08 13:20:59,644] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,43]
[TRACE] [2017-04-08 13:20:59,644] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,46]
[TRACE] [2017-04-08 13:20:59,645] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,49]
[TRACE] [2017-04-08 13:20:59,646] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,41]
[TRACE] [2017-04-08 13:20:59,646] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,44]
[TRACE] [2017-04-08 13:20:59,646] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,47]
[TRACE] [2017-04-08 13:20:59,646] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,1]
[TRACE] [2017-04-08 13:20:59,646] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,4]
[TRACE] [2017-04-08 13:20:59,646] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,7]
[TRACE] [2017-04-08 13:20:59,646] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,10]
[TRACE] [2017-04-08 13:20:59,646] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,13]
[TRACE] [2017-04-08 13:20:59,646] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,16]
[TRACE] [2017-04-08 13:20:59,646] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,19]
[TRACE] [2017-04-08 13:20:59,646] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,2]
[TRACE] [2017-04-08 13:20:59,646] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,5]
[TRACE] [2017-04-08 13:20:59,646] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,8]
[TRACE] [2017-04-08 13:20:59,646] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,11]
[TRACE] [2017-04-08 13:20:59,646] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,14]
[TRACE] [2017-04-08 13:20:59,646] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,17]
[TRACE] [2017-04-08 13:20:59,646] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,20]
[TRACE] [2017-04-08 13:20:59,647] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,23]
[TRACE] [2017-04-08 13:20:59,647] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,26]
[TRACE] [2017-04-08 13:20:59,648] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,29]
[TRACE] [2017-04-08 13:20:59,648] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,32]
[TRACE] [2017-04-08 13:20:59,649] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,35]
[TRACE] [2017-04-08 13:20:59,649] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,38]
[TRACE] [2017-04-08 13:20:59,651] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,0]
[TRACE] [2017-04-08 13:20:59,651] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,3]
[TRACE] [2017-04-08 13:20:59,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,6]
[TRACE] [2017-04-08 13:20:59,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,9]
[TRACE] [2017-04-08 13:20:59,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,12]
[TRACE] [2017-04-08 13:20:59,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,15]
[TRACE] [2017-04-08 13:20:59,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,18]
[TRACE] [2017-04-08 13:20:59,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,21]
[TRACE] [2017-04-08 13:20:59,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,24]
[TRACE] [2017-04-08 13:20:59,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,27]
[TRACE] [2017-04-08 13:20:59,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,30]
[TRACE] [2017-04-08 13:20:59,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,33]
[TRACE] [2017-04-08 13:20:59,652] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,36]
[TRACE] [2017-04-08 13:20:59,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,39]
[TRACE] [2017-04-08 13:20:59,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,42]
[TRACE] [2017-04-08 13:20:59,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,45]
[TRACE] [2017-04-08 13:20:59,653] [kafka-request-handler-5] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 33 with correlation id 1 for partition [__consumer_offsets,48]
[TRACE] [2017-04-08 13:20:59,655] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,0]
[TRACE] [2017-04-08 13:20:59,655] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,29]
[TRACE] [2017-04-08 13:20:59,655] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,48]
[TRACE] [2017-04-08 13:20:59,656] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,10]
[TRACE] [2017-04-08 13:20:59,657] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,45]
[TRACE] [2017-04-08 13:20:59,657] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,26]
[TRACE] [2017-04-08 13:20:59,657] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,7]
[TRACE] [2017-04-08 13:20:59,657] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,42]
[TRACE] [2017-04-08 13:20:59,657] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,4]
[TRACE] [2017-04-08 13:20:59,657] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,23]
[TRACE] [2017-04-08 13:20:59,657] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,1]
[TRACE] [2017-04-08 13:20:59,657] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,20]
[TRACE] [2017-04-08 13:20:59,657] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,39]
[TRACE] [2017-04-08 13:20:59,657] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,17]
[TRACE] [2017-04-08 13:20:59,657] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,36]
[TRACE] [2017-04-08 13:20:59,657] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,14]
[TRACE] [2017-04-08 13:20:59,657] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,33]
[TRACE] [2017-04-08 13:20:59,657] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,49]
[TRACE] [2017-04-08 13:20:59,657] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,11]
[TRACE] [2017-04-08 13:20:59,657] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,30]
[TRACE] [2017-04-08 13:20:59,657] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,46]
[TRACE] [2017-04-08 13:20:59,657] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,27]
[TRACE] [2017-04-08 13:20:59,657] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,8]
[TRACE] [2017-04-08 13:20:59,658] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,24]
[TRACE] [2017-04-08 13:20:59,658] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,43]
[TRACE] [2017-04-08 13:20:59,658] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,5]
[TRACE] [2017-04-08 13:20:59,658] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,21]
[TRACE] [2017-04-08 13:20:59,658] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,2]
[TRACE] [2017-04-08 13:20:59,658] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,40]
[TRACE] [2017-04-08 13:20:59,658] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,37]
[TRACE] [2017-04-08 13:20:59,658] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,18]
[TRACE] [2017-04-08 13:20:59,658] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,34]
[TRACE] [2017-04-08 13:20:59,658] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,15]
[TRACE] [2017-04-08 13:20:59,658] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,12]
[TRACE] [2017-04-08 13:20:59,658] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,31]
[TRACE] [2017-04-08 13:20:59,658] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,9]
[TRACE] [2017-04-08 13:20:59,658] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,47]
[TRACE] [2017-04-08 13:20:59,658] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,19]
[TRACE] [2017-04-08 13:20:59,658] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,28]
[TRACE] [2017-04-08 13:20:59,658] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,38]
[TRACE] [2017-04-08 13:20:59,659] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,35]
[TRACE] [2017-04-08 13:20:59,659] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,44]
[TRACE] [2017-04-08 13:20:59,659] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,6]
[TRACE] [2017-04-08 13:20:59,659] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,25]
[TRACE] [2017-04-08 13:20:59,659] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,16]
[TRACE] [2017-04-08 13:20:59,659] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,22]
[TRACE] [2017-04-08 13:20:59,659] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,41]
[TRACE] [2017-04-08 13:20:59,659] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,32]
[TRACE] [2017-04-08 13:20:59,659] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,3]
[TRACE] [2017-04-08 13:20:59,659] [kafka-request-handler-5] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,13]
[TRACE] [2017-04-08 13:20:59,704] [Controller-0-to-broker-0-send-thread] [state.change.logger] - Controller 0 epoch 33 received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=49,error_code=0},{topic=__consumer_offsets,partition=38,error_code=0},{topic=__consumer_offsets,partition=27,error_code=0},{topic=__consumer_offsets,partition=16,error_code=0},{topic=__consumer_offsets,partition=8,error_code=0},{topic=__consumer_offsets,partition=19,error_code=0},{topic=__consumer_offsets,partition=13,error_code=0},{topic=__consumer_offsets,partition=2,error_code=0},{topic=__consumer_offsets,partition=24,error_code=0},{topic=__consumer_offsets,partition=46,error_code=0},{topic=__consumer_offsets,partition=35,error_code=0},{topic=__consumer_offsets,partition=5,error_code=0},{topic=__consumer_offsets,partition=43,error_code=0},{topic=__consumer_offsets,partition=21,error_code=0},{topic=__consumer_offsets,partition=32,error_code=0},{topic=__consumer_offsets,partition=10,error_code=0},{topic=__consumer_offsets,partition=37,error_code=0},{topic=__consumer_offsets,partition=48,error_code=0},{topic=__consumer_offsets,partition=29,error_code=0},{topic=__consumer_offsets,partition=40,error_code=0},{topic=__consumer_offsets,partition=18,error_code=0},{topic=__consumer_offsets,partition=7,error_code=0},{topic=__consumer_offsets,partition=45,error_code=0},{topic=__consumer_offsets,partition=23,error_code=0},{topic=__consumer_offsets,partition=34,error_code=0},{topic=__consumer_offsets,partition=26,error_code=0},{topic=__consumer_offsets,partition=4,error_code=0},{topic=__consumer_offsets,partition=15,error_code=0},{topic=__consumer_offsets,partition=42,error_code=0},{topic=__consumer_offsets,partition=20,error_code=0},{topic=__consumer_offsets,partition=31,error_code=0},{topic=__consumer_offsets,partition=9,error_code=0},{topic=__consumer_offsets,partition=1,error_code=0},{topic=__consumer_offsets,partition=12,error_code=0},{topic=__consumer_offsets,partition=17,error_code=0},{topic=__consumer_offsets,partition=28,error_code=0},{topic=__consumer_offsets,partition=6,error_code=0},{topic=__consumer_offsets,partition=39,error_code=0},{topic=__consumer_offsets,partition=44,error_code=0},{topic=__consumer_offsets,partition=36,error_code=0},{topic=__consumer_offsets,partition=47,error_code=0},{topic=__consumer_offsets,partition=14,error_code=0},{topic=__consumer_offsets,partition=25,error_code=0},{topic=__consumer_offsets,partition=3,error_code=0},{topic=__consumer_offsets,partition=30,error_code=0},{topic=__consumer_offsets,partition=41,error_code=0},{topic=__consumer_offsets,partition=11,error_code=0},{topic=__consumer_offsets,partition=33,error_code=0},{topic=__consumer_offsets,partition=22,error_code=0},{topic=__consumer_offsets,partition=0,error_code=0}]} for a request sent to broker localhost:9092 (id: 0 rack: null)
[TRACE] [2017-04-08 13:20:59,707] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,707] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,708] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,708] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,708] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,708] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,708] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,708] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,708] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,708] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,709] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,709] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,709] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,709] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,709] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,709] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,709] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,710] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,710] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,710] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,710] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,710] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,710] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,710] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,710] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,711] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,711] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,711] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,711] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,711] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,711] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,711] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,711] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,711] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,711] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,711] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,712] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,712] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,712] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,712] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,712] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,712] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,712] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,712] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,712] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,712] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,713] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,713] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,713] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,713] [kafka-request-handler-6] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:35,ControllerEpoch:32),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 2
[TRACE] [2017-04-08 13:20:59,714] [Controller-0-to-broker-0-send-thread] [state.change.logger] - Controller 0 epoch 33 received response {error_code=0} for a request sent to broker localhost:9092 (id: 0 rack: null)
[TRACE] [2017-04-08 13:20:59,721] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=100, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,13]
[TRACE] [2017-04-08 13:20:59,721] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=77, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,46]
[TRACE] [2017-04-08 13:20:59,721] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=61, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,9]
[TRACE] [2017-04-08 13:20:59,721] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=65, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,42]
[TRACE] [2017-04-08 13:20:59,721] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=61, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,21]
[TRACE] [2017-04-08 13:20:59,722] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=67, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,17]
[TRACE] [2017-04-08 13:20:59,722] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=67, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,30]
[TRACE] [2017-04-08 13:20:59,722] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=74, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,26]
[TRACE] [2017-04-08 13:20:59,722] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=83, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,5]
[TRACE] [2017-04-08 13:20:59,722] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=68, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,38]
[TRACE] [2017-04-08 13:20:59,722] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=99, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,1]
[TRACE] [2017-04-08 13:20:59,722] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=93, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,34]
[TRACE] [2017-04-08 13:20:59,722] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=75, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,16]
[TRACE] [2017-04-08 13:20:59,722] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=79, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,45]
[TRACE] [2017-04-08 13:20:59,722] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=97, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,12]
[TRACE] [2017-04-08 13:20:59,722] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=37, isr=[0], zkVersion=64, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,41]
[TRACE] [2017-04-08 13:20:59,722] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=86, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,24]
[TRACE] [2017-04-08 13:20:59,722] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=70, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,20]
[TRACE] [2017-04-08 13:20:59,722] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=77, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,49]
[TRACE] [2017-04-08 13:20:59,722] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=93, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,0]
[TRACE] [2017-04-08 13:20:59,722] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=37, isr=[0], zkVersion=80, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,29]
[TRACE] [2017-04-08 13:20:59,722] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=72, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,25]
[TRACE] [2017-04-08 13:20:59,722] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=68, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,8]
[TRACE] [2017-04-08 13:20:59,722] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=111, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,37]
[TRACE] [2017-04-08 13:20:59,722] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=70, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,4]
[TRACE] [2017-04-08 13:20:59,722] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=97, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,33]
[TRACE] [2017-04-08 13:20:59,722] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=61, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,15]
[TRACE] [2017-04-08 13:20:59,722] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=96, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,48]
[TRACE] [2017-04-08 13:20:59,722] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=74, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,11]
[TRACE] [2017-04-08 13:20:59,722] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=72, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,44]
[TRACE] [2017-04-08 13:20:59,722] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=67, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,23]
[TRACE] [2017-04-08 13:20:59,722] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=72, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,19]
[TRACE] [2017-04-08 13:20:59,723] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=90, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,32]
[TRACE] [2017-04-08 13:20:59,723] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=70, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,28]
[TRACE] [2017-04-08 13:20:59,723] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=72, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,7]
[TRACE] [2017-04-08 13:20:59,723] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=107, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,40]
[TRACE] [2017-04-08 13:20:59,723] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=61, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,3]
[TRACE] [2017-04-08 13:20:59,723] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=65, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,36]
[TRACE] [2017-04-08 13:20:59,723] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=37, isr=[0], zkVersion=64, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,47]
[TRACE] [2017-04-08 13:20:59,723] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=93, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,14]
[TRACE] [2017-04-08 13:20:59,723] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=80, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,43]
[TRACE] [2017-04-08 13:20:59,723] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=98, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,10]
[TRACE] [2017-04-08 13:20:59,723] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=70, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,22]
[TRACE] [2017-04-08 13:20:59,723] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=65, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,18]
[TRACE] [2017-04-08 13:20:59,723] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=77, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,31]
[TRACE] [2017-04-08 13:20:59,723] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=61, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,27]
[TRACE] [2017-04-08 13:20:59,723] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=73, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,39]
[TRACE] [2017-04-08 13:20:59,723] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=69, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,6]
[TRACE] [2017-04-08 13:20:59,723] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=69, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,35]
[TRACE] [2017-04-08 13:20:59,723] [kafka-request-handler-2] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=77, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,2]
[TRACE] [2017-04-08 13:20:59,724] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,0]
[TRACE] [2017-04-08 13:20:59,724] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,29]
[TRACE] [2017-04-08 13:20:59,724] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,48]
[TRACE] [2017-04-08 13:20:59,724] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,10]
[TRACE] [2017-04-08 13:20:59,724] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,45]
[TRACE] [2017-04-08 13:20:59,724] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,26]
[TRACE] [2017-04-08 13:20:59,724] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,7]
[TRACE] [2017-04-08 13:20:59,724] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,42]
[TRACE] [2017-04-08 13:20:59,725] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,4]
[TRACE] [2017-04-08 13:20:59,725] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,23]
[TRACE] [2017-04-08 13:20:59,725] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,1]
[TRACE] [2017-04-08 13:20:59,725] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,20]
[TRACE] [2017-04-08 13:20:59,725] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,39]
[TRACE] [2017-04-08 13:20:59,725] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,17]
[TRACE] [2017-04-08 13:20:59,725] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,36]
[TRACE] [2017-04-08 13:20:59,725] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,14]
[TRACE] [2017-04-08 13:20:59,725] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,33]
[TRACE] [2017-04-08 13:20:59,725] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,49]
[TRACE] [2017-04-08 13:20:59,725] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,11]
[TRACE] [2017-04-08 13:20:59,725] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,30]
[TRACE] [2017-04-08 13:20:59,725] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,46]
[TRACE] [2017-04-08 13:20:59,725] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,27]
[TRACE] [2017-04-08 13:20:59,725] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,8]
[TRACE] [2017-04-08 13:20:59,725] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,24]
[TRACE] [2017-04-08 13:20:59,725] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,43]
[TRACE] [2017-04-08 13:20:59,725] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,5]
[TRACE] [2017-04-08 13:20:59,725] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,21]
[TRACE] [2017-04-08 13:20:59,725] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,2]
[TRACE] [2017-04-08 13:20:59,725] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,40]
[TRACE] [2017-04-08 13:20:59,725] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,37]
[TRACE] [2017-04-08 13:20:59,725] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,18]
[TRACE] [2017-04-08 13:20:59,725] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,34]
[TRACE] [2017-04-08 13:20:59,725] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,15]
[TRACE] [2017-04-08 13:20:59,726] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,12]
[TRACE] [2017-04-08 13:20:59,726] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,31]
[TRACE] [2017-04-08 13:20:59,726] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,9]
[TRACE] [2017-04-08 13:20:59,726] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,47]
[TRACE] [2017-04-08 13:20:59,726] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,19]
[TRACE] [2017-04-08 13:20:59,726] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,28]
[TRACE] [2017-04-08 13:20:59,726] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,38]
[TRACE] [2017-04-08 13:20:59,726] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,35]
[TRACE] [2017-04-08 13:20:59,726] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,44]
[TRACE] [2017-04-08 13:20:59,726] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,6]
[TRACE] [2017-04-08 13:20:59,726] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,25]
[TRACE] [2017-04-08 13:20:59,726] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,16]
[TRACE] [2017-04-08 13:20:59,726] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,22]
[TRACE] [2017-04-08 13:20:59,726] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,41]
[TRACE] [2017-04-08 13:20:59,726] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,32]
[TRACE] [2017-04-08 13:20:59,726] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,3]
[TRACE] [2017-04-08 13:20:59,726] [kafka-request-handler-2] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 33 starting the become-leader transition for partition [__consumer_offsets,13]
[INFO] [2017-04-08 13:20:59,728] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,0] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,728] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,29] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,728] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,48] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,728] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,10] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,729] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,45] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,729] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,26] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,729] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,7] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,729] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,42] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,729] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,4] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,729] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,23] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,729] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,1] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,730] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,20] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,730] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,39] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,730] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,17] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,730] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,36] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,730] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,14] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,730] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,33] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,730] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,49] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,731] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,11] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,731] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,30] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,731] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,46] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,731] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,27] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,732] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,8] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,732] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,24] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,732] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,43] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,732] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,5] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,732] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,21] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,732] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,2] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,733] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,40] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,733] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,37] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,733] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,18] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,733] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,34] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,733] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,15] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,734] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,12] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,734] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,31] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,734] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,9] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,734] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,47] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,734] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,19] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,734] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,28] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,735] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,38] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,735] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,35] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,735] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,44] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,735] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,6] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,735] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,25] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,735] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,16] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,736] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,22] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,736] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,41] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,736] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,32] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,736] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,3] since it is already the leader for the partition.
[INFO] [2017-04-08 13:20:59,736] [kafka-request-handler-2] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 33 for partition [__consumer_offsets,13] since it is already the leader for the partition.
[TRACE] [2017-04-08 13:20:59,736] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,0]
[TRACE] [2017-04-08 13:20:59,736] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,29]
[TRACE] [2017-04-08 13:20:59,736] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,48]
[TRACE] [2017-04-08 13:20:59,736] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,10]
[TRACE] [2017-04-08 13:20:59,736] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,45]
[TRACE] [2017-04-08 13:20:59,736] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,26]
[TRACE] [2017-04-08 13:20:59,736] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,7]
[TRACE] [2017-04-08 13:20:59,737] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,42]
[TRACE] [2017-04-08 13:20:59,737] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,4]
[TRACE] [2017-04-08 13:20:59,737] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,23]
[TRACE] [2017-04-08 13:20:59,737] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,1]
[TRACE] [2017-04-08 13:20:59,737] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,20]
[TRACE] [2017-04-08 13:20:59,737] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,39]
[TRACE] [2017-04-08 13:20:59,737] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,17]
[TRACE] [2017-04-08 13:20:59,737] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,36]
[TRACE] [2017-04-08 13:20:59,737] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,14]
[TRACE] [2017-04-08 13:20:59,737] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,33]
[TRACE] [2017-04-08 13:20:59,737] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,49]
[TRACE] [2017-04-08 13:20:59,737] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,11]
[TRACE] [2017-04-08 13:20:59,737] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,30]
[TRACE] [2017-04-08 13:20:59,737] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,46]
[TRACE] [2017-04-08 13:20:59,737] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,27]
[TRACE] [2017-04-08 13:20:59,737] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,8]
[TRACE] [2017-04-08 13:20:59,737] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,24]
[TRACE] [2017-04-08 13:20:59,737] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,43]
[TRACE] [2017-04-08 13:20:59,737] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,5]
[TRACE] [2017-04-08 13:20:59,737] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,21]
[TRACE] [2017-04-08 13:20:59,737] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,2]
[TRACE] [2017-04-08 13:20:59,737] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,40]
[TRACE] [2017-04-08 13:20:59,737] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,37]
[TRACE] [2017-04-08 13:20:59,738] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,18]
[TRACE] [2017-04-08 13:20:59,738] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,34]
[TRACE] [2017-04-08 13:20:59,738] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,15]
[TRACE] [2017-04-08 13:20:59,738] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,12]
[TRACE] [2017-04-08 13:20:59,738] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,31]
[TRACE] [2017-04-08 13:20:59,738] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,9]
[TRACE] [2017-04-08 13:20:59,738] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,47]
[TRACE] [2017-04-08 13:20:59,738] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,19]
[TRACE] [2017-04-08 13:20:59,738] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,28]
[TRACE] [2017-04-08 13:20:59,738] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,38]
[TRACE] [2017-04-08 13:20:59,738] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,35]
[TRACE] [2017-04-08 13:20:59,739] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,44]
[TRACE] [2017-04-08 13:20:59,739] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,6]
[TRACE] [2017-04-08 13:20:59,739] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,25]
[TRACE] [2017-04-08 13:20:59,739] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,16]
[TRACE] [2017-04-08 13:20:59,739] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,22]
[TRACE] [2017-04-08 13:20:59,739] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,41]
[TRACE] [2017-04-08 13:20:59,739] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,32]
[TRACE] [2017-04-08 13:20:59,739] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,3]
[TRACE] [2017-04-08 13:20:59,739] [kafka-request-handler-2] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 33 for the become-leader transition for partition [__consumer_offsets,13]
[TRACE] [2017-04-08 13:20:59,740] [Controller-0-to-broker-0-send-thread] [state.change.logger] - Controller 0 epoch 33 received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=49,error_code=0},{topic=__consumer_offsets,partition=38,error_code=0},{topic=__consumer_offsets,partition=27,error_code=0},{topic=__consumer_offsets,partition=16,error_code=0},{topic=__consumer_offsets,partition=8,error_code=0},{topic=__consumer_offsets,partition=19,error_code=0},{topic=__consumer_offsets,partition=13,error_code=0},{topic=__consumer_offsets,partition=2,error_code=0},{topic=__consumer_offsets,partition=24,error_code=0},{topic=__consumer_offsets,partition=46,error_code=0},{topic=__consumer_offsets,partition=35,error_code=0},{topic=__consumer_offsets,partition=5,error_code=0},{topic=__consumer_offsets,partition=43,error_code=0},{topic=__consumer_offsets,partition=21,error_code=0},{topic=__consumer_offsets,partition=32,error_code=0},{topic=__consumer_offsets,partition=10,error_code=0},{topic=__consumer_offsets,partition=37,error_code=0},{topic=__consumer_offsets,partition=48,error_code=0},{topic=__consumer_offsets,partition=29,error_code=0},{topic=__consumer_offsets,partition=40,error_code=0},{topic=__consumer_offsets,partition=18,error_code=0},{topic=__consumer_offsets,partition=7,error_code=0},{topic=__consumer_offsets,partition=45,error_code=0},{topic=__consumer_offsets,partition=23,error_code=0},{topic=__consumer_offsets,partition=34,error_code=0},{topic=__consumer_offsets,partition=26,error_code=0},{topic=__consumer_offsets,partition=4,error_code=0},{topic=__consumer_offsets,partition=15,error_code=0},{topic=__consumer_offsets,partition=42,error_code=0},{topic=__consumer_offsets,partition=20,error_code=0},{topic=__consumer_offsets,partition=31,error_code=0},{topic=__consumer_offsets,partition=9,error_code=0},{topic=__consumer_offsets,partition=1,error_code=0},{topic=__consumer_offsets,partition=12,error_code=0},{topic=__consumer_offsets,partition=17,error_code=0},{topic=__consumer_offsets,partition=28,error_code=0},{topic=__consumer_offsets,partition=6,error_code=0},{topic=__consumer_offsets,partition=39,error_code=0},{topic=__consumer_offsets,partition=44,error_code=0},{topic=__consumer_offsets,partition=36,error_code=0},{topic=__consumer_offsets,partition=47,error_code=0},{topic=__consumer_offsets,partition=14,error_code=0},{topic=__consumer_offsets,partition=25,error_code=0},{topic=__consumer_offsets,partition=3,error_code=0},{topic=__consumer_offsets,partition=30,error_code=0},{topic=__consumer_offsets,partition=41,error_code=0},{topic=__consumer_offsets,partition=11,error_code=0},{topic=__consumer_offsets,partition=33,error_code=0},{topic=__consumer_offsets,partition=22,error_code=0},{topic=__consumer_offsets,partition=0,error_code=0}]} for a request sent to broker localhost:9092 (id: 0 rack: null)
[TRACE] [2017-04-08 13:20:59,742] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,742] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,742] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,742] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,742] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,742] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,742] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,742] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,742] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,742] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,743] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,743] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,743] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,743] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,743] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,743] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,743] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,743] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,743] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,743] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,743] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,743] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,743] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,743] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,743] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,745] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,745] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,745] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,745] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,745] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,745] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,745] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,746] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,746] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,746] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,746] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,746] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,746] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,746] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,746] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,746] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,746] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,746] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,746] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,746] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,747] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,747] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,747] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,747] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,747] [kafka-request-handler-7] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 0 epoch 33 with correlation id 4
[TRACE] [2017-04-08 13:20:59,748] [Controller-0-to-broker-0-send-thread] [state.change.logger] - Controller 0 epoch 33 received response {error_code=0} for a request sent to broker localhost:9092 (id: 0 rack: null)
[TRACE] [2017-04-08 13:23:29,649] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,43]
[ERROR] [2017-04-08 13:23:29,651] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,43] due to: No other replicas in ISR 0 for [__consumer_offsets,43] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,651] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,43] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,43] due to: No other replicas in ISR 0 for [__consumer_offsets,43] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,43] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,652] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,14]
[ERROR] [2017-04-08 13:23:29,653] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,14] due to: No other replicas in ISR 0 for [__consumer_offsets,14] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,653] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,14] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,14] due to: No other replicas in ISR 0 for [__consumer_offsets,14] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,14] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,654] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,28]
[ERROR] [2017-04-08 13:23:29,656] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,28] due to: No other replicas in ISR 0 for [__consumer_offsets,28] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,656] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,28] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,28] due to: No other replicas in ISR 0 for [__consumer_offsets,28] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,28] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,656] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,4]
[ERROR] [2017-04-08 13:23:29,658] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,4] due to: No other replicas in ISR 0 for [__consumer_offsets,4] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,658] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,4] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,4] due to: No other replicas in ISR 0 for [__consumer_offsets,4] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,4] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,659] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,36]
[ERROR] [2017-04-08 13:23:29,662] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,36] due to: No other replicas in ISR 0 for [__consumer_offsets,36] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,662] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,36] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,36] due to: No other replicas in ISR 0 for [__consumer_offsets,36] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,36] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,662] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,6]
[ERROR] [2017-04-08 13:23:29,666] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,6] due to: No other replicas in ISR 0 for [__consumer_offsets,6] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,666] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,6] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,6] due to: No other replicas in ISR 0 for [__consumer_offsets,6] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,6] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,667] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,39]
[ERROR] [2017-04-08 13:23:29,671] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,39] due to: No other replicas in ISR 0 for [__consumer_offsets,39] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,671] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,39] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,39] due to: No other replicas in ISR 0 for [__consumer_offsets,39] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,39] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:29,671] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,23]
[ERROR] [2017-04-08 13:23:29,673] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,23] due to: No other replicas in ISR 0 for [__consumer_offsets,23] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,673] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,23] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,23] due to: No other replicas in ISR 0 for [__consumer_offsets,23] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,23] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:29,674] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,24]
[ERROR] [2017-04-08 13:23:29,676] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,24] due to: No other replicas in ISR 0 for [__consumer_offsets,24] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,676] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,24] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,24] due to: No other replicas in ISR 0 for [__consumer_offsets,24] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,24] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,677] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,38]
[ERROR] [2017-04-08 13:23:29,679] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,38] due to: No other replicas in ISR 0 for [__consumer_offsets,38] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,679] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,38] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,38] due to: No other replicas in ISR 0 for [__consumer_offsets,38] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,38] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,681] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,16]
[ERROR] [2017-04-08 13:23:29,684] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,16] due to: No other replicas in ISR 0 for [__consumer_offsets,16] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,684] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,16] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,16] due to: No other replicas in ISR 0 for [__consumer_offsets,16] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,16] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 24 more
[TRACE] [2017-04-08 13:23:29,684] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,3]
[ERROR] [2017-04-08 13:23:29,687] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,3] due to: No other replicas in ISR 0 for [__consumer_offsets,3] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,687] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,3] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,3] due to: No other replicas in ISR 0 for [__consumer_offsets,3] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,3] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 24 more
[TRACE] [2017-04-08 13:23:29,687] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,21]
[ERROR] [2017-04-08 13:23:29,692] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,21] due to: No other replicas in ISR 0 for [__consumer_offsets,21] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,692] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,21] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,21] due to: No other replicas in ISR 0 for [__consumer_offsets,21] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,21] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,693] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,10]
[ERROR] [2017-04-08 13:23:29,695] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,10] due to: No other replicas in ISR 0 for [__consumer_offsets,10] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,696] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,10] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,10] due to: No other replicas in ISR 0 for [__consumer_offsets,10] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,10] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,696] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,40]
[ERROR] [2017-04-08 13:23:29,699] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,40] due to: No other replicas in ISR 0 for [__consumer_offsets,40] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,699] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,40] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,40] due to: No other replicas in ISR 0 for [__consumer_offsets,40] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,40] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,700] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,34]
[ERROR] [2017-04-08 13:23:29,703] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,34] due to: No other replicas in ISR 0 for [__consumer_offsets,34] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,706] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,34] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,34] due to: No other replicas in ISR 0 for [__consumer_offsets,34] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,34] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:29,708] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,25]
[ERROR] [2017-04-08 13:23:29,712] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,25] due to: No other replicas in ISR 0 for [__consumer_offsets,25] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,712] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,25] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,25] due to: No other replicas in ISR 0 for [__consumer_offsets,25] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,25] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,713] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,27]
[ERROR] [2017-04-08 13:23:29,716] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,27] due to: No other replicas in ISR 0 for [__consumer_offsets,27] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,716] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,27] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,27] due to: No other replicas in ISR 0 for [__consumer_offsets,27] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,27] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,717] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,42]
[ERROR] [2017-04-08 13:23:29,718] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,42] due to: No other replicas in ISR 0 for [__consumer_offsets,42] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,718] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,42] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,42] due to: No other replicas in ISR 0 for [__consumer_offsets,42] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,42] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,719] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,11]
[ERROR] [2017-04-08 13:23:29,721] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,11] due to: No other replicas in ISR 0 for [__consumer_offsets,11] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,721] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,11] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,11] due to: No other replicas in ISR 0 for [__consumer_offsets,11] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,11] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,724] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,7]
[ERROR] [2017-04-08 13:23:29,726] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,7] due to: No other replicas in ISR 0 for [__consumer_offsets,7] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,726] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,7] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,7] due to: No other replicas in ISR 0 for [__consumer_offsets,7] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,7] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,727] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,47]
[ERROR] [2017-04-08 13:23:29,729] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,47] due to: No other replicas in ISR 0 for [__consumer_offsets,47] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,729] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,47] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,47] due to: No other replicas in ISR 0 for [__consumer_offsets,47] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,47] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,730] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,9]
[ERROR] [2017-04-08 13:23:29,733] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,9] due to: No other replicas in ISR 0 for [__consumer_offsets,9] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,733] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,9] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,9] due to: No other replicas in ISR 0 for [__consumer_offsets,9] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,9] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,734] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,13]
[ERROR] [2017-04-08 13:23:29,736] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,13] due to: No other replicas in ISR 0 for [__consumer_offsets,13] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,737] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,13] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,13] due to: No other replicas in ISR 0 for [__consumer_offsets,13] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,13] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:29,737] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,29]
[ERROR] [2017-04-08 13:23:29,739] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,29] due to: No other replicas in ISR 0 for [__consumer_offsets,29] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,739] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,29] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,29] due to: No other replicas in ISR 0 for [__consumer_offsets,29] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,29] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,740] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,8]
[ERROR] [2017-04-08 13:23:29,741] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,8] due to: No other replicas in ISR 0 for [__consumer_offsets,8] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,741] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,8] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,8] due to: No other replicas in ISR 0 for [__consumer_offsets,8] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,8] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,743] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,22]
[ERROR] [2017-04-08 13:23:29,746] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,22] due to: No other replicas in ISR 0 for [__consumer_offsets,22] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,746] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,22] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,22] due to: No other replicas in ISR 0 for [__consumer_offsets,22] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,22] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,747] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,31]
[ERROR] [2017-04-08 13:23:29,749] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,31] due to: No other replicas in ISR 0 for [__consumer_offsets,31] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,749] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,31] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,31] due to: No other replicas in ISR 0 for [__consumer_offsets,31] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,31] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:29,750] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,18]
[ERROR] [2017-04-08 13:23:29,752] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,18] due to: No other replicas in ISR 0 for [__consumer_offsets,18] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,752] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,18] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,18] due to: No other replicas in ISR 0 for [__consumer_offsets,18] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,18] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,753] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,20]
[ERROR] [2017-04-08 13:23:29,757] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,20] due to: No other replicas in ISR 0 for [__consumer_offsets,20] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,757] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,20] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,20] due to: No other replicas in ISR 0 for [__consumer_offsets,20] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,20] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,757] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,37]
[ERROR] [2017-04-08 13:23:29,765] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,37] due to: No other replicas in ISR 0 for [__consumer_offsets,37] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,765] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,37] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,37] due to: No other replicas in ISR 0 for [__consumer_offsets,37] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,37] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:29,766] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,49]
[ERROR] [2017-04-08 13:23:29,768] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,49] due to: No other replicas in ISR 0 for [__consumer_offsets,49] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,768] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,49] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,49] due to: No other replicas in ISR 0 for [__consumer_offsets,49] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,49] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,769] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,12]
[ERROR] [2017-04-08 13:23:29,771] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,12] due to: No other replicas in ISR 0 for [__consumer_offsets,12] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,771] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,12] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,12] due to: No other replicas in ISR 0 for [__consumer_offsets,12] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,12] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,771] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,5]
[ERROR] [2017-04-08 13:23:29,775] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,5] due to: No other replicas in ISR 0 for [__consumer_offsets,5] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,776] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,5] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,5] due to: No other replicas in ISR 0 for [__consumer_offsets,5] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,5] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,777] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,32]
[ERROR] [2017-04-08 13:23:29,783] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,32] due to: No other replicas in ISR 0 for [__consumer_offsets,32] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,783] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,32] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,32] due to: No other replicas in ISR 0 for [__consumer_offsets,32] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,32] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,783] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,2]
[ERROR] [2017-04-08 13:23:29,786] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,2] due to: No other replicas in ISR 0 for [__consumer_offsets,2] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,787] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,2] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,2] due to: No other replicas in ISR 0 for [__consumer_offsets,2] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,2] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,787] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,1]
[ERROR] [2017-04-08 13:23:29,795] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,1] due to: No other replicas in ISR 0 for [__consumer_offsets,1] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,795] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,1] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,1] due to: No other replicas in ISR 0 for [__consumer_offsets,1] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,1] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,798] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,0]
[ERROR] [2017-04-08 13:23:29,801] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,0] due to: No other replicas in ISR 0 for [__consumer_offsets,0] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,801] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,0] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,0] due to: No other replicas in ISR 0 for [__consumer_offsets,0] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,0] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,802] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,15]
[ERROR] [2017-04-08 13:23:29,810] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,15] due to: No other replicas in ISR 0 for [__consumer_offsets,15] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,810] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,15] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,15] due to: No other replicas in ISR 0 for [__consumer_offsets,15] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,15] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,812] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,44]
[ERROR] [2017-04-08 13:23:29,815] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,44] due to: No other replicas in ISR 0 for [__consumer_offsets,44] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,815] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,44] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,44] due to: No other replicas in ISR 0 for [__consumer_offsets,44] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,44] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 23 more
[TRACE] [2017-04-08 13:23:29,816] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,17]
[ERROR] [2017-04-08 13:23:29,817] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,17] due to: No other replicas in ISR 0 for [__consumer_offsets,17] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,817] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,17] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,17] due to: No other replicas in ISR 0 for [__consumer_offsets,17] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,17] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 23 more
[TRACE] [2017-04-08 13:23:29,818] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,48]
[ERROR] [2017-04-08 13:23:29,820] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,48] due to: No other replicas in ISR 0 for [__consumer_offsets,48] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,820] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,48] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,48] due to: No other replicas in ISR 0 for [__consumer_offsets,48] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,48] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:29,821] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,26]
[ERROR] [2017-04-08 13:23:29,823] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,26] due to: No other replicas in ISR 0 for [__consumer_offsets,26] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,823] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,26] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,26] due to: No other replicas in ISR 0 for [__consumer_offsets,26] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,26] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,823] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,33]
[ERROR] [2017-04-08 13:23:29,828] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,33] due to: No other replicas in ISR 0 for [__consumer_offsets,33] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,828] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,33] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,33] due to: No other replicas in ISR 0 for [__consumer_offsets,33] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,33] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,829] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,41]
[ERROR] [2017-04-08 13:23:29,832] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,41] due to: No other replicas in ISR 0 for [__consumer_offsets,41] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,833] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,41] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,41] due to: No other replicas in ISR 0 for [__consumer_offsets,41] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,41] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:29,833] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,45]
[ERROR] [2017-04-08 13:23:29,835] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,45] due to: No other replicas in ISR 0 for [__consumer_offsets,45] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,835] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,45] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,45] due to: No other replicas in ISR 0 for [__consumer_offsets,45] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,45] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:29,837] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,35]
[ERROR] [2017-04-08 13:23:29,845] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,35] due to: No other replicas in ISR 0 for [__consumer_offsets,35] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,845] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,35] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,35] due to: No other replicas in ISR 0 for [__consumer_offsets,35] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,35] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,848] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,46]
[ERROR] [2017-04-08 13:23:29,854] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,46] due to: No other replicas in ISR 0 for [__consumer_offsets,46] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,854] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,46] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,46] due to: No other replicas in ISR 0 for [__consumer_offsets,46] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,46] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,854] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,19]
[ERROR] [2017-04-08 13:23:29,857] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,19] due to: No other replicas in ISR 0 for [__consumer_offsets,19] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,858] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,19] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,19] due to: No other replicas in ISR 0 for [__consumer_offsets,19] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,19] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:29,858] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,30]
[ERROR] [2017-04-08 13:23:29,862] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,30] due to: No other replicas in ISR 0 for [__consumer_offsets,30] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:29,862] [kafka-request-handler-4] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,30] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,30] due to: No other replicas in ISR 0 for [__consumer_offsets,30] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,30] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:34,883] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,43]
[ERROR] [2017-04-08 13:23:34,885] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,43] due to: No other replicas in ISR 0 for [__consumer_offsets,43] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,886] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,43] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,43] due to: No other replicas in ISR 0 for [__consumer_offsets,43] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,43] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,886] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,14]
[ERROR] [2017-04-08 13:23:34,888] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,14] due to: No other replicas in ISR 0 for [__consumer_offsets,14] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,888] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,14] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,14] due to: No other replicas in ISR 0 for [__consumer_offsets,14] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,14] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,888] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,28]
[ERROR] [2017-04-08 13:23:34,890] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,28] due to: No other replicas in ISR 0 for [__consumer_offsets,28] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,890] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,28] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,28] due to: No other replicas in ISR 0 for [__consumer_offsets,28] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,28] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,890] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,4]
[ERROR] [2017-04-08 13:23:34,893] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,4] due to: No other replicas in ISR 0 for [__consumer_offsets,4] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,893] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,4] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,4] due to: No other replicas in ISR 0 for [__consumer_offsets,4] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,4] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,893] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,36]
[ERROR] [2017-04-08 13:23:34,895] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,36] due to: No other replicas in ISR 0 for [__consumer_offsets,36] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,896] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,36] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,36] due to: No other replicas in ISR 0 for [__consumer_offsets,36] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,36] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,896] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,6]
[ERROR] [2017-04-08 13:23:34,897] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,6] due to: No other replicas in ISR 0 for [__consumer_offsets,6] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,897] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,6] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,6] due to: No other replicas in ISR 0 for [__consumer_offsets,6] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,6] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,898] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,39]
[ERROR] [2017-04-08 13:23:34,899] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,39] due to: No other replicas in ISR 0 for [__consumer_offsets,39] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,900] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,39] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,39] due to: No other replicas in ISR 0 for [__consumer_offsets,39] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,39] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:34,900] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,23]
[ERROR] [2017-04-08 13:23:34,902] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,23] due to: No other replicas in ISR 0 for [__consumer_offsets,23] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,902] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,23] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,23] due to: No other replicas in ISR 0 for [__consumer_offsets,23] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,23] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:34,902] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,24]
[ERROR] [2017-04-08 13:23:34,903] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,24] due to: No other replicas in ISR 0 for [__consumer_offsets,24] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,903] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,24] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,24] due to: No other replicas in ISR 0 for [__consumer_offsets,24] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,24] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,904] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,38]
[ERROR] [2017-04-08 13:23:34,906] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,38] due to: No other replicas in ISR 0 for [__consumer_offsets,38] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,906] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,38] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,38] due to: No other replicas in ISR 0 for [__consumer_offsets,38] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,38] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,906] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,16]
[ERROR] [2017-04-08 13:23:34,908] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,16] due to: No other replicas in ISR 0 for [__consumer_offsets,16] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,908] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,16] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,16] due to: No other replicas in ISR 0 for [__consumer_offsets,16] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,16] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 24 more
[TRACE] [2017-04-08 13:23:34,908] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,3]
[ERROR] [2017-04-08 13:23:34,910] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,3] due to: No other replicas in ISR 0 for [__consumer_offsets,3] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,910] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,3] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,3] due to: No other replicas in ISR 0 for [__consumer_offsets,3] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,3] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 24 more
[TRACE] [2017-04-08 13:23:34,911] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,21]
[ERROR] [2017-04-08 13:23:34,913] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,21] due to: No other replicas in ISR 0 for [__consumer_offsets,21] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,914] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,21] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,21] due to: No other replicas in ISR 0 for [__consumer_offsets,21] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,21] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,914] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,10]
[ERROR] [2017-04-08 13:23:34,916] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,10] due to: No other replicas in ISR 0 for [__consumer_offsets,10] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,916] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,10] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,10] due to: No other replicas in ISR 0 for [__consumer_offsets,10] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,10] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,917] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,40]
[ERROR] [2017-04-08 13:23:34,919] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,40] due to: No other replicas in ISR 0 for [__consumer_offsets,40] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,919] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,40] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,40] due to: No other replicas in ISR 0 for [__consumer_offsets,40] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,40] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,919] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,34]
[ERROR] [2017-04-08 13:23:34,921] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,34] due to: No other replicas in ISR 0 for [__consumer_offsets,34] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,921] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,34] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,34] due to: No other replicas in ISR 0 for [__consumer_offsets,34] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,34] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:34,921] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,25]
[ERROR] [2017-04-08 13:23:34,923] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,25] due to: No other replicas in ISR 0 for [__consumer_offsets,25] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,923] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,25] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,25] due to: No other replicas in ISR 0 for [__consumer_offsets,25] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,25] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,924] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,27]
[ERROR] [2017-04-08 13:23:34,925] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,27] due to: No other replicas in ISR 0 for [__consumer_offsets,27] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,925] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,27] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,27] due to: No other replicas in ISR 0 for [__consumer_offsets,27] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,27] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,926] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,42]
[ERROR] [2017-04-08 13:23:34,928] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,42] due to: No other replicas in ISR 0 for [__consumer_offsets,42] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,928] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,42] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,42] due to: No other replicas in ISR 0 for [__consumer_offsets,42] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,42] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,928] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,11]
[ERROR] [2017-04-08 13:23:34,930] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,11] due to: No other replicas in ISR 0 for [__consumer_offsets,11] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,930] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,11] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,11] due to: No other replicas in ISR 0 for [__consumer_offsets,11] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,11] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,930] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,7]
[ERROR] [2017-04-08 13:23:34,932] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,7] due to: No other replicas in ISR 0 for [__consumer_offsets,7] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,932] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,7] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,7] due to: No other replicas in ISR 0 for [__consumer_offsets,7] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,7] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,932] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,47]
[ERROR] [2017-04-08 13:23:34,934] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,47] due to: No other replicas in ISR 0 for [__consumer_offsets,47] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,934] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,47] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,47] due to: No other replicas in ISR 0 for [__consumer_offsets,47] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,47] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,935] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,9]
[ERROR] [2017-04-08 13:23:34,936] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,9] due to: No other replicas in ISR 0 for [__consumer_offsets,9] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,937] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,9] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,9] due to: No other replicas in ISR 0 for [__consumer_offsets,9] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,9] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,937] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,13]
[ERROR] [2017-04-08 13:23:34,939] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,13] due to: No other replicas in ISR 0 for [__consumer_offsets,13] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,939] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,13] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,13] due to: No other replicas in ISR 0 for [__consumer_offsets,13] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,13] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:34,939] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,29]
[ERROR] [2017-04-08 13:23:34,941] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,29] due to: No other replicas in ISR 0 for [__consumer_offsets,29] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,941] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,29] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,29] due to: No other replicas in ISR 0 for [__consumer_offsets,29] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,29] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,942] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,8]
[ERROR] [2017-04-08 13:23:34,945] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,8] due to: No other replicas in ISR 0 for [__consumer_offsets,8] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,945] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,8] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,8] due to: No other replicas in ISR 0 for [__consumer_offsets,8] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,8] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,948] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,22]
[ERROR] [2017-04-08 13:23:34,950] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,22] due to: No other replicas in ISR 0 for [__consumer_offsets,22] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,950] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,22] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,22] due to: No other replicas in ISR 0 for [__consumer_offsets,22] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,22] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,951] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,31]
[ERROR] [2017-04-08 13:23:34,952] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,31] due to: No other replicas in ISR 0 for [__consumer_offsets,31] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,953] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,31] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,31] due to: No other replicas in ISR 0 for [__consumer_offsets,31] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,31] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:34,953] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,18]
[ERROR] [2017-04-08 13:23:34,954] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,18] due to: No other replicas in ISR 0 for [__consumer_offsets,18] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,954] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,18] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,18] due to: No other replicas in ISR 0 for [__consumer_offsets,18] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,18] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,955] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,20]
[ERROR] [2017-04-08 13:23:34,956] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,20] due to: No other replicas in ISR 0 for [__consumer_offsets,20] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,956] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,20] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,20] due to: No other replicas in ISR 0 for [__consumer_offsets,20] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,20] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,957] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,37]
[ERROR] [2017-04-08 13:23:34,960] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,37] due to: No other replicas in ISR 0 for [__consumer_offsets,37] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,961] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,37] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,37] due to: No other replicas in ISR 0 for [__consumer_offsets,37] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,37] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:34,961] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,49]
[ERROR] [2017-04-08 13:23:34,965] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,49] due to: No other replicas in ISR 0 for [__consumer_offsets,49] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,965] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,49] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,49] due to: No other replicas in ISR 0 for [__consumer_offsets,49] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,49] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,966] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,12]
[ERROR] [2017-04-08 13:23:34,968] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,12] due to: No other replicas in ISR 0 for [__consumer_offsets,12] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,968] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,12] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,12] due to: No other replicas in ISR 0 for [__consumer_offsets,12] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,12] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,968] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,5]
[ERROR] [2017-04-08 13:23:34,970] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,5] due to: No other replicas in ISR 0 for [__consumer_offsets,5] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,970] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,5] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,5] due to: No other replicas in ISR 0 for [__consumer_offsets,5] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,5] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,970] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,32]
[ERROR] [2017-04-08 13:23:34,972] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,32] due to: No other replicas in ISR 0 for [__consumer_offsets,32] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,972] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,32] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,32] due to: No other replicas in ISR 0 for [__consumer_offsets,32] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,32] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,973] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,2]
[ERROR] [2017-04-08 13:23:34,975] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,2] due to: No other replicas in ISR 0 for [__consumer_offsets,2] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,975] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,2] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,2] due to: No other replicas in ISR 0 for [__consumer_offsets,2] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,2] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,975] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,1]
[ERROR] [2017-04-08 13:23:34,977] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,1] due to: No other replicas in ISR 0 for [__consumer_offsets,1] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,977] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,1] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,1] due to: No other replicas in ISR 0 for [__consumer_offsets,1] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,1] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,977] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,0]
[ERROR] [2017-04-08 13:23:34,979] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,0] due to: No other replicas in ISR 0 for [__consumer_offsets,0] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,979] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,0] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,0] due to: No other replicas in ISR 0 for [__consumer_offsets,0] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,0] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,979] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,15]
[ERROR] [2017-04-08 13:23:34,980] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,15] due to: No other replicas in ISR 0 for [__consumer_offsets,15] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,981] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,15] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,15] due to: No other replicas in ISR 0 for [__consumer_offsets,15] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,15] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,981] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,44]
[ERROR] [2017-04-08 13:23:34,983] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,44] due to: No other replicas in ISR 0 for [__consumer_offsets,44] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,983] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,44] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,44] due to: No other replicas in ISR 0 for [__consumer_offsets,44] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,44] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 23 more
[TRACE] [2017-04-08 13:23:34,983] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,17]
[ERROR] [2017-04-08 13:23:34,985] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,17] due to: No other replicas in ISR 0 for [__consumer_offsets,17] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,985] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,17] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,17] due to: No other replicas in ISR 0 for [__consumer_offsets,17] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,17] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 23 more
[TRACE] [2017-04-08 13:23:34,986] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,48]
[ERROR] [2017-04-08 13:23:34,987] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,48] due to: No other replicas in ISR 0 for [__consumer_offsets,48] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,987] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,48] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,48] due to: No other replicas in ISR 0 for [__consumer_offsets,48] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,48] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:34,988] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,26]
[ERROR] [2017-04-08 13:23:34,990] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,26] due to: No other replicas in ISR 0 for [__consumer_offsets,26] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,990] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,26] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,26] due to: No other replicas in ISR 0 for [__consumer_offsets,26] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,26] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,990] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,33]
[ERROR] [2017-04-08 13:23:34,991] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,33] due to: No other replicas in ISR 0 for [__consumer_offsets,33] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,992] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,33] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,33] due to: No other replicas in ISR 0 for [__consumer_offsets,33] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,33] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,992] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,41]
[ERROR] [2017-04-08 13:23:34,993] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,41] due to: No other replicas in ISR 0 for [__consumer_offsets,41] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,993] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,41] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,41] due to: No other replicas in ISR 0 for [__consumer_offsets,41] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,41] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:34,993] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,45]
[ERROR] [2017-04-08 13:23:34,995] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,45] due to: No other replicas in ISR 0 for [__consumer_offsets,45] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,996] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,45] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,45] due to: No other replicas in ISR 0 for [__consumer_offsets,45] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,45] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:34,996] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,35]
[ERROR] [2017-04-08 13:23:34,997] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,35] due to: No other replicas in ISR 0 for [__consumer_offsets,35] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,997] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,35] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,35] due to: No other replicas in ISR 0 for [__consumer_offsets,35] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,35] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:34,997] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,46]
[ERROR] [2017-04-08 13:23:34,999] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,46] due to: No other replicas in ISR 0 for [__consumer_offsets,46] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:34,999] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,46] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,46] due to: No other replicas in ISR 0 for [__consumer_offsets,46] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,46] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:35,000] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,19]
[ERROR] [2017-04-08 13:23:35,001] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,19] due to: No other replicas in ISR 0 for [__consumer_offsets,19] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:35,001] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,19] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,19] due to: No other replicas in ISR 0 for [__consumer_offsets,19] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,19] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:35,002] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,30]
[ERROR] [2017-04-08 13:23:35,003] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,30] due to: No other replicas in ISR 0 for [__consumer_offsets,30] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:35,003] [kafka-request-handler-6] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,30] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,30] due to: No other replicas in ISR 0 for [__consumer_offsets,30] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,30] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:40,013] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,43]
[ERROR] [2017-04-08 13:23:40,014] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,43] due to: No other replicas in ISR 0 for [__consumer_offsets,43] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,014] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,43] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,43] due to: No other replicas in ISR 0 for [__consumer_offsets,43] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,43] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,014] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,14]
[ERROR] [2017-04-08 13:23:40,016] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,14] due to: No other replicas in ISR 0 for [__consumer_offsets,14] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,016] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,14] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,14] due to: No other replicas in ISR 0 for [__consumer_offsets,14] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,14] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,016] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,28]
[ERROR] [2017-04-08 13:23:40,017] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,28] due to: No other replicas in ISR 0 for [__consumer_offsets,28] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,017] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,28] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,28] due to: No other replicas in ISR 0 for [__consumer_offsets,28] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,28] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,018] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,4]
[ERROR] [2017-04-08 13:23:40,019] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,4] due to: No other replicas in ISR 0 for [__consumer_offsets,4] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,019] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,4] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,4] due to: No other replicas in ISR 0 for [__consumer_offsets,4] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,4] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,019] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,36]
[ERROR] [2017-04-08 13:23:40,020] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,36] due to: No other replicas in ISR 0 for [__consumer_offsets,36] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,020] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,36] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,36] due to: No other replicas in ISR 0 for [__consumer_offsets,36] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,36] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,021] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,6]
[ERROR] [2017-04-08 13:23:40,022] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,6] due to: No other replicas in ISR 0 for [__consumer_offsets,6] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,022] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,6] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,6] due to: No other replicas in ISR 0 for [__consumer_offsets,6] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,6] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,023] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,39]
[ERROR] [2017-04-08 13:23:40,025] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,39] due to: No other replicas in ISR 0 for [__consumer_offsets,39] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,025] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,39] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,39] due to: No other replicas in ISR 0 for [__consumer_offsets,39] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,39] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:40,025] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,23]
[ERROR] [2017-04-08 13:23:40,026] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,23] due to: No other replicas in ISR 0 for [__consumer_offsets,23] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,026] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,23] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,23] due to: No other replicas in ISR 0 for [__consumer_offsets,23] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,23] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:40,027] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,24]
[ERROR] [2017-04-08 13:23:40,028] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,24] due to: No other replicas in ISR 0 for [__consumer_offsets,24] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,028] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,24] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,24] due to: No other replicas in ISR 0 for [__consumer_offsets,24] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,24] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,029] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,38]
[ERROR] [2017-04-08 13:23:40,030] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,38] due to: No other replicas in ISR 0 for [__consumer_offsets,38] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,030] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,38] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,38] due to: No other replicas in ISR 0 for [__consumer_offsets,38] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,38] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,030] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,16]
[ERROR] [2017-04-08 13:23:40,032] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,16] due to: No other replicas in ISR 0 for [__consumer_offsets,16] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,032] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,16] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,16] due to: No other replicas in ISR 0 for [__consumer_offsets,16] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,16] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 24 more
[TRACE] [2017-04-08 13:23:40,032] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,3]
[ERROR] [2017-04-08 13:23:40,034] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,3] due to: No other replicas in ISR 0 for [__consumer_offsets,3] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,034] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,3] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,3] due to: No other replicas in ISR 0 for [__consumer_offsets,3] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,3] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 24 more
[TRACE] [2017-04-08 13:23:40,034] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,21]
[ERROR] [2017-04-08 13:23:40,036] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,21] due to: No other replicas in ISR 0 for [__consumer_offsets,21] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,036] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,21] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,21] due to: No other replicas in ISR 0 for [__consumer_offsets,21] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,21] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,036] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,10]
[ERROR] [2017-04-08 13:23:40,038] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,10] due to: No other replicas in ISR 0 for [__consumer_offsets,10] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,038] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,10] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,10] due to: No other replicas in ISR 0 for [__consumer_offsets,10] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,10] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,039] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,40]
[ERROR] [2017-04-08 13:23:40,040] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,40] due to: No other replicas in ISR 0 for [__consumer_offsets,40] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,040] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,40] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,40] due to: No other replicas in ISR 0 for [__consumer_offsets,40] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,40] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,041] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,34]
[ERROR] [2017-04-08 13:23:40,042] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,34] due to: No other replicas in ISR 0 for [__consumer_offsets,34] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,042] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,34] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,34] due to: No other replicas in ISR 0 for [__consumer_offsets,34] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,34] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:40,042] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,25]
[ERROR] [2017-04-08 13:23:40,044] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,25] due to: No other replicas in ISR 0 for [__consumer_offsets,25] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,044] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,25] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,25] due to: No other replicas in ISR 0 for [__consumer_offsets,25] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,25] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,044] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,27]
[ERROR] [2017-04-08 13:23:40,046] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,27] due to: No other replicas in ISR 0 for [__consumer_offsets,27] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,046] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,27] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,27] due to: No other replicas in ISR 0 for [__consumer_offsets,27] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,27] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,046] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,42]
[ERROR] [2017-04-08 13:23:40,047] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,42] due to: No other replicas in ISR 0 for [__consumer_offsets,42] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,047] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,42] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,42] due to: No other replicas in ISR 0 for [__consumer_offsets,42] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,42] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,048] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,11]
[ERROR] [2017-04-08 13:23:40,049] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,11] due to: No other replicas in ISR 0 for [__consumer_offsets,11] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,049] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,11] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,11] due to: No other replicas in ISR 0 for [__consumer_offsets,11] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,11] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,050] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,7]
[ERROR] [2017-04-08 13:23:40,051] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,7] due to: No other replicas in ISR 0 for [__consumer_offsets,7] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,051] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,7] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,7] due to: No other replicas in ISR 0 for [__consumer_offsets,7] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,7] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,052] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,47]
[ERROR] [2017-04-08 13:23:40,053] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,47] due to: No other replicas in ISR 0 for [__consumer_offsets,47] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,053] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,47] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,47] due to: No other replicas in ISR 0 for [__consumer_offsets,47] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,47] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,054] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,9]
[ERROR] [2017-04-08 13:23:40,055] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,9] due to: No other replicas in ISR 0 for [__consumer_offsets,9] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,055] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,9] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,9] due to: No other replicas in ISR 0 for [__consumer_offsets,9] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,9] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,056] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,13]
[ERROR] [2017-04-08 13:23:40,057] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,13] due to: No other replicas in ISR 0 for [__consumer_offsets,13] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,057] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,13] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,13] due to: No other replicas in ISR 0 for [__consumer_offsets,13] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,13] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:40,058] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,29]
[ERROR] [2017-04-08 13:23:40,059] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,29] due to: No other replicas in ISR 0 for [__consumer_offsets,29] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,059] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,29] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,29] due to: No other replicas in ISR 0 for [__consumer_offsets,29] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,29] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,060] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,8]
[ERROR] [2017-04-08 13:23:40,061] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,8] due to: No other replicas in ISR 0 for [__consumer_offsets,8] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,061] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,8] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,8] due to: No other replicas in ISR 0 for [__consumer_offsets,8] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,8] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,062] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,22]
[ERROR] [2017-04-08 13:23:40,063] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,22] due to: No other replicas in ISR 0 for [__consumer_offsets,22] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,063] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,22] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,22] due to: No other replicas in ISR 0 for [__consumer_offsets,22] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,22] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,064] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,31]
[ERROR] [2017-04-08 13:23:40,065] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,31] due to: No other replicas in ISR 0 for [__consumer_offsets,31] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,065] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,31] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,31] due to: No other replicas in ISR 0 for [__consumer_offsets,31] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,31] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:40,066] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,18]
[ERROR] [2017-04-08 13:23:40,067] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,18] due to: No other replicas in ISR 0 for [__consumer_offsets,18] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,067] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,18] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,18] due to: No other replicas in ISR 0 for [__consumer_offsets,18] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,18] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,068] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,20]
[ERROR] [2017-04-08 13:23:40,069] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,20] due to: No other replicas in ISR 0 for [__consumer_offsets,20] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,069] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,20] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,20] due to: No other replicas in ISR 0 for [__consumer_offsets,20] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,20] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,070] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,37]
[ERROR] [2017-04-08 13:23:40,071] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,37] due to: No other replicas in ISR 0 for [__consumer_offsets,37] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,071] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,37] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,37] due to: No other replicas in ISR 0 for [__consumer_offsets,37] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,37] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:40,072] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,49]
[ERROR] [2017-04-08 13:23:40,073] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,49] due to: No other replicas in ISR 0 for [__consumer_offsets,49] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,073] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,49] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,49] due to: No other replicas in ISR 0 for [__consumer_offsets,49] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,49] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,074] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,12]
[ERROR] [2017-04-08 13:23:40,075] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,12] due to: No other replicas in ISR 0 for [__consumer_offsets,12] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,075] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,12] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,12] due to: No other replicas in ISR 0 for [__consumer_offsets,12] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,12] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,076] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,5]
[ERROR] [2017-04-08 13:23:40,077] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,5] due to: No other replicas in ISR 0 for [__consumer_offsets,5] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,077] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,5] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,5] due to: No other replicas in ISR 0 for [__consumer_offsets,5] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,5] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,078] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,32]
[ERROR] [2017-04-08 13:23:40,079] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,32] due to: No other replicas in ISR 0 for [__consumer_offsets,32] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,079] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,32] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,32] due to: No other replicas in ISR 0 for [__consumer_offsets,32] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,32] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,080] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,2]
[ERROR] [2017-04-08 13:23:40,081] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,2] due to: No other replicas in ISR 0 for [__consumer_offsets,2] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,081] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,2] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,2] due to: No other replicas in ISR 0 for [__consumer_offsets,2] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,2] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,082] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,1]
[ERROR] [2017-04-08 13:23:40,083] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,1] due to: No other replicas in ISR 0 for [__consumer_offsets,1] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,083] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,1] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,1] due to: No other replicas in ISR 0 for [__consumer_offsets,1] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,1] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,083] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,0]
[ERROR] [2017-04-08 13:23:40,085] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,0] due to: No other replicas in ISR 0 for [__consumer_offsets,0] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,085] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,0] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,0] due to: No other replicas in ISR 0 for [__consumer_offsets,0] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,0] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,085] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,15]
[ERROR] [2017-04-08 13:23:40,087] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,15] due to: No other replicas in ISR 0 for [__consumer_offsets,15] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,087] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,15] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,15] due to: No other replicas in ISR 0 for [__consumer_offsets,15] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,15] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,087] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,44]
[ERROR] [2017-04-08 13:23:40,089] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,44] due to: No other replicas in ISR 0 for [__consumer_offsets,44] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,089] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,44] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,44] due to: No other replicas in ISR 0 for [__consumer_offsets,44] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,44] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 23 more
[TRACE] [2017-04-08 13:23:40,089] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,17]
[ERROR] [2017-04-08 13:23:40,090] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,17] due to: No other replicas in ISR 0 for [__consumer_offsets,17] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,091] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,17] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,17] due to: No other replicas in ISR 0 for [__consumer_offsets,17] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,17] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 23 more
[TRACE] [2017-04-08 13:23:40,091] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,48]
[ERROR] [2017-04-08 13:23:40,092] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,48] due to: No other replicas in ISR 0 for [__consumer_offsets,48] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,092] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,48] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,48] due to: No other replicas in ISR 0 for [__consumer_offsets,48] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,48] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:40,092] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,26]
[ERROR] [2017-04-08 13:23:40,093] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,26] due to: No other replicas in ISR 0 for [__consumer_offsets,26] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,094] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,26] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,26] due to: No other replicas in ISR 0 for [__consumer_offsets,26] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,26] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,094] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,33]
[ERROR] [2017-04-08 13:23:40,095] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,33] due to: No other replicas in ISR 0 for [__consumer_offsets,33] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,095] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,33] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,33] due to: No other replicas in ISR 0 for [__consumer_offsets,33] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,33] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,095] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,41]
[ERROR] [2017-04-08 13:23:40,096] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,41] due to: No other replicas in ISR 0 for [__consumer_offsets,41] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,096] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,41] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,41] due to: No other replicas in ISR 0 for [__consumer_offsets,41] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,41] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:40,097] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,45]
[ERROR] [2017-04-08 13:23:40,098] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,45] due to: No other replicas in ISR 0 for [__consumer_offsets,45] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,098] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,45] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,45] due to: No other replicas in ISR 0 for [__consumer_offsets,45] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,45] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:40,098] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,35]
[ERROR] [2017-04-08 13:23:40,099] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,35] due to: No other replicas in ISR 0 for [__consumer_offsets,35] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,099] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,35] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,35] due to: No other replicas in ISR 0 for [__consumer_offsets,35] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,35] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,100] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,46]
[ERROR] [2017-04-08 13:23:40,101] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,46] due to: No other replicas in ISR 0 for [__consumer_offsets,46] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,101] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,46] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,46] due to: No other replicas in ISR 0 for [__consumer_offsets,46] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,46] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,101] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,19]
[ERROR] [2017-04-08 13:23:40,102] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,19] due to: No other replicas in ISR 0 for [__consumer_offsets,19] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,102] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,19] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,19] due to: No other replicas in ISR 0 for [__consumer_offsets,19] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,19] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:23:40,103] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 started leader election for partition [__consumer_offsets,30]
[ERROR] [2017-04-08 13:23:40,104] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 encountered error while electing leader for partition [__consumer_offsets,30] due to: No other replicas in ISR 0 for [__consumer_offsets,30] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:23:40,104] [kafka-request-handler-3] [state.change.logger] - Controller 0 epoch 33 initiated state change for partition [__consumer_offsets,30] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,30] due to: No other replicas in ISR 0 for [__consumer_offsets,30] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,30] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:23:56,802] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,19]
[ERROR] [2017-04-08 13:23:56,819] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,19] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,19] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 0, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:56,823] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,30]
[ERROR] [2017-04-08 13:23:56,831] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,30] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,30] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 2, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:56,832] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,47]
[ERROR] [2017-04-08 13:23:56,839] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,47] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,47] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:56,840] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,29]
[ERROR] [2017-04-08 13:23:56,847] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,29] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,29] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:56,848] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,41]
[ERROR] [2017-04-08 13:23:56,854] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,41] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,41] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:56,855] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,39]
[ERROR] [2017-04-08 13:23:56,861] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,39] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,39] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 0, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:56,862] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,10]
[ERROR] [2017-04-08 13:23:56,868] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,10] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,10] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:56,868] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,17]
[ERROR] [2017-04-08 13:23:56,874] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,17] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,17] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:56,875] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,14]
[ERROR] [2017-04-08 13:23:56,881] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,14] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,14] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 1, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:56,881] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,40]
[ERROR] [2017-04-08 13:23:56,889] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,40] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,40] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:56,890] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,18]
[ERROR] [2017-04-08 13:23:56,898] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,18] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,18] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 2, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:56,901] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,26]
[ERROR] [2017-04-08 13:23:56,909] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,26] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,26] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 1, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:56,909] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,0]
[ERROR] [2017-04-08 13:23:56,914] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,0] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 2, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:56,914] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,24]
[ERROR] [2017-04-08 13:23:56,926] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,24] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,24] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 2, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:56,927] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,33]
[ERROR] [2017-04-08 13:23:56,940] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,33] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,33] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 0, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:56,942] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,20]
[ERROR] [2017-04-08 13:23:56,956] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,20] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,20] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 1, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:56,959] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,21]
[ERROR] [2017-04-08 13:23:56,965] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,21] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,21] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 0, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:56,966] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,3]
[ERROR] [2017-04-08 13:23:56,971] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,3] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,3] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 0, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:56,972] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [avro_base_topic,0]
[ERROR] [2017-04-08 13:23:56,977] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [avro_base_topic,0] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [avro_base_topic,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:56,978] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,22]
[ERROR] [2017-04-08 13:23:56,999] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,22] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,22] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,000] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,5]
[ERROR] [2017-04-08 13:23:57,008] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,5] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,5] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,009] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,12]
[ERROR] [2017-04-08 13:23:57,014] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,12] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,12] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 2, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,015] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,8]
[ERROR] [2017-04-08 13:23:57,020] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,8] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,8] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 1, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,021] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,23]
[ERROR] [2017-04-08 13:23:57,026] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,23] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,23] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,027] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,15]
[ERROR] [2017-04-08 13:23:57,031] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,15] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,15] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 0, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,032] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,48]
[ERROR] [2017-04-08 13:23:57,037] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,48] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,48] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 2, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,038] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,11]
[ERROR] [2017-04-08 13:23:57,045] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,11] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,11] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,046] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,13]
[ERROR] [2017-04-08 13:23:57,053] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,13] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,13] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 0, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,055] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,49]
[ERROR] [2017-04-08 13:23:57,062] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,49] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,49] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 0, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,062] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,6]
[ERROR] [2017-04-08 13:23:57,067] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,6] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,6] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 2, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,068] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,28]
[ERROR] [2017-04-08 13:23:57,073] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,28] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,28] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,074] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,4]
[ERROR] [2017-04-08 13:23:57,079] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,4] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,4] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,081] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,37]
[ERROR] [2017-04-08 13:23:57,086] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,37] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,37] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 0, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,087] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,31]
[ERROR] [2017-04-08 13:23:57,093] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,31] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,31] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 0, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,093] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,44]
[ERROR] [2017-04-08 13:23:57,098] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,44] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,44] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 1, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,099] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,42]
[ERROR] [2017-04-08 13:23:57,103] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,42] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,42] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 2, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,104] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,34]
[ERROR] [2017-04-08 13:23:57,111] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,34] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,34] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,112] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,46]
[ERROR] [2017-04-08 13:23:57,120] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,46] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,46] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,120] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,25]
[ERROR] [2017-04-08 13:23:57,127] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,25] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,25] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 0, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,127] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,45]
[ERROR] [2017-04-08 13:23:57,140] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,45] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,45] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 0, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,141] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,27]
[ERROR] [2017-04-08 13:23:57,146] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,27] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,27] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 0, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,147] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,32]
[ERROR] [2017-04-08 13:23:57,152] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,32] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,32] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 1, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,152] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,43]
[ERROR] [2017-04-08 13:23:57,157] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,43] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,43] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 0, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,158] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,36]
[ERROR] [2017-04-08 13:23:57,162] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,36] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,36] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 2, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,163] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,35]
[ERROR] [2017-04-08 13:23:57,167] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,35] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,35] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 2, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,168] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,7]
[ERROR] [2017-04-08 13:23:57,172] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,7] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,7] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 0, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,173] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,9]
[ERROR] [2017-04-08 13:23:57,178] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,9] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,9] is alive. Live brokers are: [Set()], Assigned replicas are: [List(1, 0, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,178] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,38]
[ERROR] [2017-04-08 13:23:57,183] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,38] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,38] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 1, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,183] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,1]
[ERROR] [2017-04-08 13:23:57,187] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,1] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,1] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 0, 1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,187] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,2]
[ERROR] [2017-04-08 13:23:57,192] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,2] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,2] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0, 1, 2)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,193] [main] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,16]
[ERROR] [2017-04-08 13:23:57,198] [main] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,16] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [__consumer_offsets,16] is alive. Live brokers are: [Set()], Assigned replicas are: [List(2, 1, 0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:336)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:167)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:676)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:672)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController.startup(KafkaController.scala:672)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:228)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:39)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
	at cn.van.kuang.kafka.KafkaBrokerBootstrap.main(KafkaBrokerBootstrap.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)
[TRACE] [2017-04-08 13:23:57,380] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-49
[TRACE] [2017-04-08 13:23:57,380] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-38
[TRACE] [2017-04-08 13:23:57,380] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-16
[TRACE] [2017-04-08 13:23:57,380] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-27
[TRACE] [2017-04-08 13:23:57,380] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-8
[TRACE] [2017-04-08 13:23:57,380] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-19
[TRACE] [2017-04-08 13:23:57,380] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:28,ControllerEpoch:32) to broker 0 for partition avro_base_topic-0
[TRACE] [2017-04-08 13:23:57,380] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-2
[TRACE] [2017-04-08 13:23:57,380] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-13
[TRACE] [2017-04-08 13:23:57,381] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-24
[TRACE] [2017-04-08 13:23:57,381] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-46
[TRACE] [2017-04-08 13:23:57,381] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-35
[TRACE] [2017-04-08 13:23:57,381] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-5
[TRACE] [2017-04-08 13:23:57,381] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-43
[TRACE] [2017-04-08 13:23:57,381] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-21
[TRACE] [2017-04-08 13:23:57,381] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-32
[TRACE] [2017-04-08 13:23:57,381] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-10
[TRACE] [2017-04-08 13:23:57,381] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-37
[TRACE] [2017-04-08 13:23:57,381] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-48
[TRACE] [2017-04-08 13:23:57,381] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-29
[TRACE] [2017-04-08 13:23:57,381] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-40
[TRACE] [2017-04-08 13:23:57,381] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-18
[TRACE] [2017-04-08 13:23:57,381] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-7
[TRACE] [2017-04-08 13:23:57,381] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-23
[TRACE] [2017-04-08 13:23:57,381] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-34
[TRACE] [2017-04-08 13:23:57,382] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-45
[TRACE] [2017-04-08 13:23:57,382] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-26
[TRACE] [2017-04-08 13:23:57,382] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-15
[TRACE] [2017-04-08 13:23:57,382] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-4
[TRACE] [2017-04-08 13:23:57,382] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-42
[TRACE] [2017-04-08 13:23:57,382] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-20
[TRACE] [2017-04-08 13:23:57,382] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-31
[TRACE] [2017-04-08 13:23:57,382] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-9
[TRACE] [2017-04-08 13:23:57,382] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-12
[TRACE] [2017-04-08 13:23:57,382] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-1
[TRACE] [2017-04-08 13:23:57,382] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-17
[TRACE] [2017-04-08 13:23:57,382] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-28
[TRACE] [2017-04-08 13:23:57,382] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-6
[TRACE] [2017-04-08 13:23:57,382] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-39
[TRACE] [2017-04-08 13:23:57,382] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-44
[TRACE] [2017-04-08 13:23:57,382] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-47
[TRACE] [2017-04-08 13:23:57,382] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-36
[TRACE] [2017-04-08 13:23:57,383] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-3
[TRACE] [2017-04-08 13:23:57,383] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-14
[TRACE] [2017-04-08 13:23:57,383] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-25
[TRACE] [2017-04-08 13:23:57,383] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-30
[TRACE] [2017-04-08 13:23:57,383] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-41
[TRACE] [2017-04-08 13:23:57,383] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-22
[TRACE] [2017-04-08 13:23:57,383] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-33
[TRACE] [2017-04-08 13:23:57,383] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-11
[TRACE] [2017-04-08 13:23:57,383] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-0
[TRACE] [2017-04-08 13:23:57,405] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,25] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,405] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,12] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,405] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,31] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,405] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,40] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,405] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,35] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,406] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,9] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,406] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,43] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,406] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,2] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,406] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,11] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,406] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,29] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,406] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,30] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,407] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,4] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,407] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,42] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,407] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,26] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,407] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,34] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,407] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,17] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,408] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,37] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,408] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,27] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,408] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,10] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,408] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,41] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,408] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,20] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,408] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,28] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,409] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,46] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,409] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,39] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,409] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,47] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,409] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,49] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,409] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,22] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,409] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,1] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,410] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,24] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,410] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,6] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,410] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,36] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,410] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,8] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,410] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,38] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,410] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,16] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,411] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,21] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,411] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,18] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,411] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,0] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,411] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,48] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,411] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,5] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,411] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,13] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,412] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,3] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,412] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,44] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,412] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,15] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,412] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,7] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,412] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,19] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,412] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,33] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,413] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,45] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,413] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,23] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,413] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,32] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,414] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed state of replica 0 for partition [__consumer_offsets,14] from ReplicaDeletionIneligible to OnlineReplica
[TRACE] [2017-04-08 13:23:57,415] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,49]
[TRACE] [2017-04-08 13:23:57,415] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,38]
[TRACE] [2017-04-08 13:23:57,415] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,27]
[TRACE] [2017-04-08 13:23:57,415] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,16]
[TRACE] [2017-04-08 13:23:57,416] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,8]
[TRACE] [2017-04-08 13:23:57,416] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,19]
[TRACE] [2017-04-08 13:23:57,416] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,2]
[TRACE] [2017-04-08 13:23:57,416] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,13]
[TRACE] [2017-04-08 13:23:57,416] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,46]
[TRACE] [2017-04-08 13:23:57,416] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,35]
[TRACE] [2017-04-08 13:23:57,416] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,24]
[TRACE] [2017-04-08 13:23:57,416] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,5]
[TRACE] [2017-04-08 13:23:57,416] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,43]
[TRACE] [2017-04-08 13:23:57,416] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,21]
[TRACE] [2017-04-08 13:23:57,416] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,32]
[TRACE] [2017-04-08 13:23:57,416] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,10]
[TRACE] [2017-04-08 13:23:57,416] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,37]
[TRACE] [2017-04-08 13:23:57,416] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,48]
[TRACE] [2017-04-08 13:23:57,416] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,40]
[TRACE] [2017-04-08 13:23:57,417] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,29]
[TRACE] [2017-04-08 13:23:57,417] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,18]
[TRACE] [2017-04-08 13:23:57,417] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,7]
[TRACE] [2017-04-08 13:23:57,417] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,34]
[TRACE] [2017-04-08 13:23:57,417] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,45]
[TRACE] [2017-04-08 13:23:57,417] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,23]
[TRACE] [2017-04-08 13:23:57,417] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,26]
[TRACE] [2017-04-08 13:23:57,417] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,4]
[TRACE] [2017-04-08 13:23:57,417] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,15]
[TRACE] [2017-04-08 13:23:57,417] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,42]
[TRACE] [2017-04-08 13:23:57,417] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,20]
[TRACE] [2017-04-08 13:23:57,417] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,31]
[TRACE] [2017-04-08 13:23:57,417] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,9]
[TRACE] [2017-04-08 13:23:57,417] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,12]
[TRACE] [2017-04-08 13:23:57,417] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,1]
[TRACE] [2017-04-08 13:23:57,417] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,28]
[TRACE] [2017-04-08 13:23:57,417] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,17]
[TRACE] [2017-04-08 13:23:57,418] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,6]
[TRACE] [2017-04-08 13:23:57,418] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,39]
[TRACE] [2017-04-08 13:23:57,418] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,44]
[TRACE] [2017-04-08 13:23:57,418] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,47]
[TRACE] [2017-04-08 13:23:57,418] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,36]
[TRACE] [2017-04-08 13:23:57,418] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,14]
[TRACE] [2017-04-08 13:23:57,418] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,25]
[TRACE] [2017-04-08 13:23:57,418] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,3]
[TRACE] [2017-04-08 13:23:57,418] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,41]
[TRACE] [2017-04-08 13:23:57,419] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,30]
[TRACE] [2017-04-08 13:23:57,419] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,11]
[TRACE] [2017-04-08 13:23:57,419] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,22]
[TRACE] [2017-04-08 13:23:57,419] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,33]
[TRACE] [2017-04-08 13:23:57,419] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition [__consumer_offsets,0]
[TRACE] [2017-04-08 13:23:57,430] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-49
[TRACE] [2017-04-08 13:23:57,431] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-38
[TRACE] [2017-04-08 13:23:57,431] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-27
[TRACE] [2017-04-08 13:23:57,431] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-16
[TRACE] [2017-04-08 13:23:57,431] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-8
[TRACE] [2017-04-08 13:23:57,431] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-19
[TRACE] [2017-04-08 13:23:57,431] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-2
[TRACE] [2017-04-08 13:23:57,431] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-13
[TRACE] [2017-04-08 13:23:57,431] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-46
[TRACE] [2017-04-08 13:23:57,431] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-35
[TRACE] [2017-04-08 13:23:57,432] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-24
[TRACE] [2017-04-08 13:23:57,432] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-5
[TRACE] [2017-04-08 13:23:57,432] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-43
[TRACE] [2017-04-08 13:23:57,432] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-21
[TRACE] [2017-04-08 13:23:57,432] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-32
[TRACE] [2017-04-08 13:23:57,432] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-10
[TRACE] [2017-04-08 13:23:57,432] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-37
[TRACE] [2017-04-08 13:23:57,432] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-48
[TRACE] [2017-04-08 13:23:57,432] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-40
[TRACE] [2017-04-08 13:23:57,432] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-29
[TRACE] [2017-04-08 13:23:57,432] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-18
[TRACE] [2017-04-08 13:23:57,433] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-7
[TRACE] [2017-04-08 13:23:57,433] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-34
[TRACE] [2017-04-08 13:23:57,433] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-45
[TRACE] [2017-04-08 13:23:57,433] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-23
[TRACE] [2017-04-08 13:23:57,433] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-26
[TRACE] [2017-04-08 13:23:57,433] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-4
[TRACE] [2017-04-08 13:23:57,433] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-15
[TRACE] [2017-04-08 13:23:57,433] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-42
[TRACE] [2017-04-08 13:23:57,433] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-20
[TRACE] [2017-04-08 13:23:57,433] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-31
[TRACE] [2017-04-08 13:23:57,433] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-9
[TRACE] [2017-04-08 13:23:57,433] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-12
[TRACE] [2017-04-08 13:23:57,434] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-1
[TRACE] [2017-04-08 13:23:57,434] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-28
[TRACE] [2017-04-08 13:23:57,434] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-17
[TRACE] [2017-04-08 13:23:57,434] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-6
[TRACE] [2017-04-08 13:23:57,434] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-39
[TRACE] [2017-04-08 13:23:57,434] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-44
[TRACE] [2017-04-08 13:23:57,434] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-47
[TRACE] [2017-04-08 13:23:57,434] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-36
[TRACE] [2017-04-08 13:23:57,434] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-14
[TRACE] [2017-04-08 13:23:57,434] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-25
[TRACE] [2017-04-08 13:23:57,434] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-3
[TRACE] [2017-04-08 13:23:57,434] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-41
[TRACE] [2017-04-08 13:23:57,434] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-30
[TRACE] [2017-04-08 13:23:57,434] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-11
[TRACE] [2017-04-08 13:23:57,434] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-22
[TRACE] [2017-04-08 13:23:57,434] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-33
[TRACE] [2017-04-08 13:23:57,434] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33) to broker 0 for partition __consumer_offsets-0
[TRACE] [2017-04-08 13:23:57,437] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,19]
[TRACE] [2017-04-08 13:23:57,452] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,19]
[TRACE] [2017-04-08 13:23:57,459] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,19] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,459] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,30]
[TRACE] [2017-04-08 13:23:57,464] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,30]
[TRACE] [2017-04-08 13:23:57,466] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,30] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,467] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,47]
[TRACE] [2017-04-08 13:23:57,471] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,47]
[TRACE] [2017-04-08 13:23:57,473] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,47] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,473] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,29]
[TRACE] [2017-04-08 13:23:57,477] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,29]
[TRACE] [2017-04-08 13:23:57,479] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,29] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,479] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,41]
[TRACE] [2017-04-08 13:23:57,483] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,41]
[TRACE] [2017-04-08 13:23:57,485] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,41] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,485] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,39]
[TRACE] [2017-04-08 13:23:57,490] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,39]
[TRACE] [2017-04-08 13:23:57,491] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,39] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,492] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,10]
[TRACE] [2017-04-08 13:23:57,496] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,10]
[TRACE] [2017-04-08 13:23:57,498] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,10] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,498] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,17]
[TRACE] [2017-04-08 13:23:57,502] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,17]
[TRACE] [2017-04-08 13:23:57,504] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,17] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,504] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,14]
[TRACE] [2017-04-08 13:23:57,508] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,14]
[TRACE] [2017-04-08 13:23:57,510] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,14] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,510] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,40]
[TRACE] [2017-04-08 13:23:57,514] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,40]
[TRACE] [2017-04-08 13:23:57,516] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,40] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,516] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,18]
[TRACE] [2017-04-08 13:23:57,522] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,18]
[TRACE] [2017-04-08 13:23:57,524] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,18] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,525] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,26]
[TRACE] [2017-04-08 13:23:57,529] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,26]
[TRACE] [2017-04-08 13:23:57,530] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,26] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,530] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,0]
[TRACE] [2017-04-08 13:23:57,535] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,0]
[TRACE] [2017-04-08 13:23:57,537] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,0] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,537] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,24]
[TRACE] [2017-04-08 13:23:57,541] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,24]
[TRACE] [2017-04-08 13:23:57,542] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,24] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,543] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,33]
[TRACE] [2017-04-08 13:23:57,547] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,33]
[TRACE] [2017-04-08 13:23:57,548] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,33] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,548] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,20]
[TRACE] [2017-04-08 13:23:57,563] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,20]
[TRACE] [2017-04-08 13:23:57,564] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,20] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,565] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,21]
[TRACE] [2017-04-08 13:23:57,570] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,21]
[TRACE] [2017-04-08 13:23:57,571] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,21] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,572] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,3]
[TRACE] [2017-04-08 13:23:57,575] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,3]
[TRACE] [2017-04-08 13:23:57,577] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,3] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,577] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [avro_base_topic,0]
[ERROR] [2017-04-08 13:23:57,580] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [avro_base_topic,0] from OfflinePartition to OnlinePartition failed
kafka.common.NoReplicaOnlineException: No replica for partition [avro_base_topic,0] is alive. Live brokers are: [Set(0)], Assigned replicas are: [List(1)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:73)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:433)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:374)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:358)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:356)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:355)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:843)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[TRACE] [2017-04-08 13:23:57,581] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,22]
[TRACE] [2017-04-08 13:23:57,586] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,22]
[TRACE] [2017-04-08 13:23:57,588] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,22] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,588] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,5]
[TRACE] [2017-04-08 13:23:57,591] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,5]
[TRACE] [2017-04-08 13:23:57,592] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,5] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,593] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,12]
[TRACE] [2017-04-08 13:23:57,596] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,12]
[TRACE] [2017-04-08 13:23:57,598] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,12] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,598] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,8]
[TRACE] [2017-04-08 13:23:57,603] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,8]
[TRACE] [2017-04-08 13:23:57,604] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,8] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,605] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,23]
[TRACE] [2017-04-08 13:23:57,608] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,23]
[TRACE] [2017-04-08 13:23:57,610] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,23] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,610] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,15]
[TRACE] [2017-04-08 13:23:57,613] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,15]
[TRACE] [2017-04-08 13:23:57,615] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,15] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,615] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,48]
[TRACE] [2017-04-08 13:23:57,618] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,48]
[TRACE] [2017-04-08 13:23:57,620] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,48] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,620] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,11]
[TRACE] [2017-04-08 13:23:57,623] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,11]
[TRACE] [2017-04-08 13:23:57,624] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,11] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,624] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,13]
[TRACE] [2017-04-08 13:23:57,628] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,13]
[TRACE] [2017-04-08 13:23:57,629] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,13] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,629] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,49]
[TRACE] [2017-04-08 13:23:57,632] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,49]
[TRACE] [2017-04-08 13:23:57,634] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,49] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,634] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,6]
[TRACE] [2017-04-08 13:23:57,637] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,6]
[TRACE] [2017-04-08 13:23:57,638] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,6] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,638] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,28]
[TRACE] [2017-04-08 13:23:57,642] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,28]
[TRACE] [2017-04-08 13:23:57,643] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,28] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,643] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,4]
[TRACE] [2017-04-08 13:23:57,647] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,4]
[TRACE] [2017-04-08 13:23:57,648] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,4] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,648] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,37]
[TRACE] [2017-04-08 13:23:57,653] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,37]
[TRACE] [2017-04-08 13:23:57,654] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,37] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,654] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,31]
[TRACE] [2017-04-08 13:23:57,658] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,31]
[TRACE] [2017-04-08 13:23:57,659] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,31] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,659] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,44]
[TRACE] [2017-04-08 13:23:57,663] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,44]
[TRACE] [2017-04-08 13:23:57,664] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,44] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,664] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,42]
[TRACE] [2017-04-08 13:23:57,668] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,42]
[TRACE] [2017-04-08 13:23:57,670] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,42] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,670] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,34]
[TRACE] [2017-04-08 13:23:57,673] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,34]
[TRACE] [2017-04-08 13:23:57,674] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,34] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,674] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,46]
[TRACE] [2017-04-08 13:23:57,678] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,46]
[TRACE] [2017-04-08 13:23:57,679] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,46] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,680] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,25]
[TRACE] [2017-04-08 13:23:57,684] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,25]
[TRACE] [2017-04-08 13:23:57,685] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,25] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,685] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,45]
[TRACE] [2017-04-08 13:23:57,688] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,45]
[TRACE] [2017-04-08 13:23:57,689] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,45] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,689] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,27]
[TRACE] [2017-04-08 13:23:57,693] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,27]
[TRACE] [2017-04-08 13:23:57,694] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,27] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,694] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,32]
[TRACE] [2017-04-08 13:23:57,697] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,32]
[TRACE] [2017-04-08 13:23:57,698] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,32] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,698] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,43]
[TRACE] [2017-04-08 13:23:57,702] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,43]
[TRACE] [2017-04-08 13:23:57,703] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,43] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,703] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,36]
[TRACE] [2017-04-08 13:23:57,706] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,36]
[TRACE] [2017-04-08 13:23:57,707] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,36] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,708] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,35]
[TRACE] [2017-04-08 13:23:57,711] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,35]
[TRACE] [2017-04-08 13:23:57,713] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,35] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,713] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,7]
[TRACE] [2017-04-08 13:23:57,717] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,7]
[TRACE] [2017-04-08 13:23:57,718] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,7] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,718] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,9]
[TRACE] [2017-04-08 13:23:57,722] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,9]
[TRACE] [2017-04-08 13:23:57,723] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,9] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,723] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,38]
[TRACE] [2017-04-08 13:23:57,728] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,38]
[TRACE] [2017-04-08 13:23:57,729] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,38] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,729] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,1]
[TRACE] [2017-04-08 13:23:57,733] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,1]
[TRACE] [2017-04-08 13:23:57,734] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,1] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,735] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,2]
[TRACE] [2017-04-08 13:23:57,737] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,2]
[TRACE] [2017-04-08 13:23:57,738] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,2] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,739] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,16]
[TRACE] [2017-04-08 13:23:57,742] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 elected leader 0 for Offline partition [__consumer_offsets,16]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 changed partition [__consumer_offsets,16] from OfflinePartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,49]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,38]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,16]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,27]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,8]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,19]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,13]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,2]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,24]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,46]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,35]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,5]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,43]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,21]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,32]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,10]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,37]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,48]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,29]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,40]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,18]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,7]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,23]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,34]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,45]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,26]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,15]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,4]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,42]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,20]
[TRACE] [2017-04-08 13:23:57,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,31]
[TRACE] [2017-04-08 13:23:57,744] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,9]
[TRACE] [2017-04-08 13:23:57,744] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,12]
[TRACE] [2017-04-08 13:23:57,744] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,1]
[TRACE] [2017-04-08 13:23:57,744] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,17]
[TRACE] [2017-04-08 13:23:57,744] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,28]
[TRACE] [2017-04-08 13:23:57,744] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,6]
[TRACE] [2017-04-08 13:23:57,744] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,39]
[TRACE] [2017-04-08 13:23:57,744] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,44]
[TRACE] [2017-04-08 13:23:57,744] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,47]
[TRACE] [2017-04-08 13:23:57,744] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,36]
[TRACE] [2017-04-08 13:23:57,744] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,3]
[TRACE] [2017-04-08 13:23:57,744] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,14]
[TRACE] [2017-04-08 13:23:57,744] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,25]
[TRACE] [2017-04-08 13:23:57,744] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,30]
[TRACE] [2017-04-08 13:23:57,744] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,41]
[TRACE] [2017-04-08 13:23:57,744] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,22]
[TRACE] [2017-04-08 13:23:57,745] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,33]
[TRACE] [2017-04-08 13:23:57,745] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,11]
[TRACE] [2017-04-08 13:23:57,745] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition [__consumer_offsets,0]
[TRACE] [2017-04-08 13:23:57,746] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-49
[TRACE] [2017-04-08 13:23:57,746] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-38
[TRACE] [2017-04-08 13:23:57,746] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-16
[TRACE] [2017-04-08 13:23:57,746] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-27
[TRACE] [2017-04-08 13:23:57,746] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-8
[TRACE] [2017-04-08 13:23:57,746] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-19
[TRACE] [2017-04-08 13:23:57,746] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-13
[TRACE] [2017-04-08 13:23:57,746] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-2
[TRACE] [2017-04-08 13:23:57,746] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-24
[TRACE] [2017-04-08 13:23:57,746] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-46
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-35
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-5
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-43
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-21
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-32
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-10
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-37
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-48
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-29
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-40
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-18
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-7
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-23
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-34
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-45
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-26
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-15
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-4
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-42
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-20
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-31
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-9
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-12
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-1
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-17
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-28
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-6
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-39
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-44
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-47
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-36
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-3
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-14
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-25
[TRACE] [2017-04-08 13:23:57,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-30
[TRACE] [2017-04-08 13:23:57,748] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-41
[TRACE] [2017-04-08 13:23:57,748] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-22
[TRACE] [2017-04-08 13:23:57,748] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-33
[TRACE] [2017-04-08 13:23:57,748] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-11
[TRACE] [2017-04-08 13:23:57,748] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 34 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34) to broker 0 for partition __consumer_offsets-0
[TRACE] [2017-04-08 13:24:01,523] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,524] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,524] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,524] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,524] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,524] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,524] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,525] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,525] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,526] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,526] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,526] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,526] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,526] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,526] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,527] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,527] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,527] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,527] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,527] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,527] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,527] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,528] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,528] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,528] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,528] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,528] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,529] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,529] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,529] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,529] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,529] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,530] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,530] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,530] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,531] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,531] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,531] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,532] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,532] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,532] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,532] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,533] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,533] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,533] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,534] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,534] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:28,ControllerEpoch:32),ReplicationFactor:1),AllReplicas:1) for partition avro_base_topic-0 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,534] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,534] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,534] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,534] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 0
[TRACE] [2017-04-08 13:24:01,552] [Controller-0-to-broker-0-send-thread] [state.change.logger] - Controller 0 epoch 34 received response {error_code=0} for a request sent to broker localhost:9092 (id: 0 rack: null)
[TRACE] [2017-04-08 13:24:01,667] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=100, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,13]
[TRACE] [2017-04-08 13:24:01,667] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=77, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,46]
[TRACE] [2017-04-08 13:24:01,667] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=61, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,9]
[TRACE] [2017-04-08 13:24:01,667] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=65, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,42]
[TRACE] [2017-04-08 13:24:01,667] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=61, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,21]
[TRACE] [2017-04-08 13:24:01,667] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=67, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,17]
[TRACE] [2017-04-08 13:24:01,667] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=67, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,30]
[TRACE] [2017-04-08 13:24:01,667] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=74, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,26]
[TRACE] [2017-04-08 13:24:01,667] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=83, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,5]
[TRACE] [2017-04-08 13:24:01,667] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=68, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,38]
[TRACE] [2017-04-08 13:24:01,667] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=99, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,1]
[TRACE] [2017-04-08 13:24:01,667] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=93, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,34]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=75, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,16]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=79, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,45]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=97, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,12]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=37, isr=[0], zkVersion=64, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,41]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=86, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,24]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=70, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,20]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=77, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,49]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=93, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,0]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=37, isr=[0], zkVersion=80, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,29]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=72, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,25]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=68, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,8]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=111, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,37]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=70, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,4]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=97, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,33]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=61, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,15]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=96, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,48]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=74, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,11]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=72, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,44]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=67, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,23]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=72, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,19]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=90, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,32]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=70, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,28]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=72, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,7]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=107, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,40]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=61, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,3]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=65, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,36]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=37, isr=[0], zkVersion=64, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,47]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=93, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,14]
[TRACE] [2017-04-08 13:24:01,668] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=80, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,43]
[TRACE] [2017-04-08 13:24:01,669] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=98, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,10]
[TRACE] [2017-04-08 13:24:01,669] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=70, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,22]
[TRACE] [2017-04-08 13:24:01,669] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=65, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,18]
[TRACE] [2017-04-08 13:24:01,669] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=39, isr=[0], zkVersion=77, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,31]
[TRACE] [2017-04-08 13:24:01,669] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=61, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,27]
[TRACE] [2017-04-08 13:24:01,669] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=73, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,39]
[TRACE] [2017-04-08 13:24:01,669] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=69, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,6]
[TRACE] [2017-04-08 13:24:01,669] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=69, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,35]
[TRACE] [2017-04-08 13:24:01,669] [kafka-request-handler-3] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=33, leader=0, leaderEpoch=36, isr=[0], zkVersion=77, replicas=[0, 1, 2]) correlation id 1 from controller 0 epoch 34 for partition [__consumer_offsets,2]
[TRACE] [2017-04-08 13:24:01,688] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,0]
[TRACE] [2017-04-08 13:24:01,688] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,29]
[TRACE] [2017-04-08 13:24:01,688] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,48]
[TRACE] [2017-04-08 13:24:01,688] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,10]
[TRACE] [2017-04-08 13:24:01,688] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,45]
[TRACE] [2017-04-08 13:24:01,688] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,26]
[TRACE] [2017-04-08 13:24:01,688] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,7]
[TRACE] [2017-04-08 13:24:01,688] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,42]
[TRACE] [2017-04-08 13:24:01,688] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,4]
[TRACE] [2017-04-08 13:24:01,688] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,23]
[TRACE] [2017-04-08 13:24:01,688] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,1]
[TRACE] [2017-04-08 13:24:01,688] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,20]
[TRACE] [2017-04-08 13:24:01,688] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,39]
[TRACE] [2017-04-08 13:24:01,688] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,17]
[TRACE] [2017-04-08 13:24:01,688] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,36]
[TRACE] [2017-04-08 13:24:01,688] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,14]
[TRACE] [2017-04-08 13:24:01,688] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,33]
[TRACE] [2017-04-08 13:24:01,689] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,49]
[TRACE] [2017-04-08 13:24:01,689] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,11]
[TRACE] [2017-04-08 13:24:01,689] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,30]
[TRACE] [2017-04-08 13:24:01,689] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,46]
[TRACE] [2017-04-08 13:24:01,689] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,27]
[TRACE] [2017-04-08 13:24:01,689] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,8]
[TRACE] [2017-04-08 13:24:01,689] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,24]
[TRACE] [2017-04-08 13:24:01,689] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,43]
[TRACE] [2017-04-08 13:24:01,689] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,5]
[TRACE] [2017-04-08 13:24:01,689] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,21]
[TRACE] [2017-04-08 13:24:01,689] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,2]
[TRACE] [2017-04-08 13:24:01,689] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,40]
[TRACE] [2017-04-08 13:24:01,689] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,37]
[TRACE] [2017-04-08 13:24:01,689] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,18]
[TRACE] [2017-04-08 13:24:01,689] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,34]
[TRACE] [2017-04-08 13:24:01,689] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,15]
[TRACE] [2017-04-08 13:24:01,689] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,12]
[TRACE] [2017-04-08 13:24:01,689] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,31]
[TRACE] [2017-04-08 13:24:01,689] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,9]
[TRACE] [2017-04-08 13:24:01,689] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,47]
[TRACE] [2017-04-08 13:24:01,689] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,19]
[TRACE] [2017-04-08 13:24:01,689] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,28]
[TRACE] [2017-04-08 13:24:01,689] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,38]
[TRACE] [2017-04-08 13:24:01,691] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,35]
[TRACE] [2017-04-08 13:24:01,691] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,44]
[TRACE] [2017-04-08 13:24:01,691] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,6]
[TRACE] [2017-04-08 13:24:01,691] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,25]
[TRACE] [2017-04-08 13:24:01,691] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,16]
[TRACE] [2017-04-08 13:24:01,691] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,22]
[TRACE] [2017-04-08 13:24:01,691] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,41]
[TRACE] [2017-04-08 13:24:01,691] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,32]
[TRACE] [2017-04-08 13:24:01,691] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,3]
[TRACE] [2017-04-08 13:24:01,691] [kafka-request-handler-3] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,13]
[TRACE] [2017-04-08 13:24:01,852] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,22]
[TRACE] [2017-04-08 13:24:01,852] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,25]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,28]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,31]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,34]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,37]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,40]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,43]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,46]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,49]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,41]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,44]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,47]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,1]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,4]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,7]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,10]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,13]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,16]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,19]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,2]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,5]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,8]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,11]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,14]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,17]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,20]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,23]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,26]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,29]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,32]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,35]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,38]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,0]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,3]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,6]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,9]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,12]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,15]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,18]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,21]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,24]
[TRACE] [2017-04-08 13:24:01,853] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,27]
[TRACE] [2017-04-08 13:24:01,854] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,30]
[TRACE] [2017-04-08 13:24:01,854] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,33]
[TRACE] [2017-04-08 13:24:01,854] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,36]
[TRACE] [2017-04-08 13:24:01,854] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,39]
[TRACE] [2017-04-08 13:24:01,854] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,42]
[TRACE] [2017-04-08 13:24:01,854] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,45]
[TRACE] [2017-04-08 13:24:01,854] [kafka-request-handler-3] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 34 with correlation id 1 for partition [__consumer_offsets,48]
[TRACE] [2017-04-08 13:24:01,855] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,0]
[TRACE] [2017-04-08 13:24:01,855] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,29]
[TRACE] [2017-04-08 13:24:01,855] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,48]
[TRACE] [2017-04-08 13:24:01,855] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,10]
[TRACE] [2017-04-08 13:24:01,855] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,45]
[TRACE] [2017-04-08 13:24:01,855] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,26]
[TRACE] [2017-04-08 13:24:01,855] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,7]
[TRACE] [2017-04-08 13:24:01,855] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,42]
[TRACE] [2017-04-08 13:24:01,855] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,4]
[TRACE] [2017-04-08 13:24:01,855] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,23]
[TRACE] [2017-04-08 13:24:01,855] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,1]
[TRACE] [2017-04-08 13:24:01,855] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,20]
[TRACE] [2017-04-08 13:24:01,855] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,39]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,17]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,36]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,14]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,33]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,49]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,11]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,30]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,46]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,27]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,8]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,24]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,43]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,5]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,21]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,2]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,40]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,37]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,18]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,34]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,15]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,12]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,31]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,9]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,47]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,19]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,28]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,38]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,35]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,44]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,6]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,25]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,16]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,22]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,41]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,32]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,3]
[TRACE] [2017-04-08 13:24:01,856] [kafka-request-handler-3] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,13]
[TRACE] [2017-04-08 13:24:01,865] [Controller-0-to-broker-0-send-thread] [state.change.logger] - Controller 0 epoch 34 received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=49,error_code=0},{topic=__consumer_offsets,partition=38,error_code=0},{topic=__consumer_offsets,partition=27,error_code=0},{topic=__consumer_offsets,partition=16,error_code=0},{topic=__consumer_offsets,partition=8,error_code=0},{topic=__consumer_offsets,partition=19,error_code=0},{topic=__consumer_offsets,partition=13,error_code=0},{topic=__consumer_offsets,partition=2,error_code=0},{topic=__consumer_offsets,partition=24,error_code=0},{topic=__consumer_offsets,partition=46,error_code=0},{topic=__consumer_offsets,partition=35,error_code=0},{topic=__consumer_offsets,partition=5,error_code=0},{topic=__consumer_offsets,partition=43,error_code=0},{topic=__consumer_offsets,partition=21,error_code=0},{topic=__consumer_offsets,partition=32,error_code=0},{topic=__consumer_offsets,partition=10,error_code=0},{topic=__consumer_offsets,partition=37,error_code=0},{topic=__consumer_offsets,partition=48,error_code=0},{topic=__consumer_offsets,partition=29,error_code=0},{topic=__consumer_offsets,partition=40,error_code=0},{topic=__consumer_offsets,partition=18,error_code=0},{topic=__consumer_offsets,partition=7,error_code=0},{topic=__consumer_offsets,partition=45,error_code=0},{topic=__consumer_offsets,partition=23,error_code=0},{topic=__consumer_offsets,partition=34,error_code=0},{topic=__consumer_offsets,partition=26,error_code=0},{topic=__consumer_offsets,partition=4,error_code=0},{topic=__consumer_offsets,partition=15,error_code=0},{topic=__consumer_offsets,partition=42,error_code=0},{topic=__consumer_offsets,partition=20,error_code=0},{topic=__consumer_offsets,partition=31,error_code=0},{topic=__consumer_offsets,partition=9,error_code=0},{topic=__consumer_offsets,partition=1,error_code=0},{topic=__consumer_offsets,partition=12,error_code=0},{topic=__consumer_offsets,partition=17,error_code=0},{topic=__consumer_offsets,partition=28,error_code=0},{topic=__consumer_offsets,partition=6,error_code=0},{topic=__consumer_offsets,partition=39,error_code=0},{topic=__consumer_offsets,partition=44,error_code=0},{topic=__consumer_offsets,partition=36,error_code=0},{topic=__consumer_offsets,partition=47,error_code=0},{topic=__consumer_offsets,partition=14,error_code=0},{topic=__consumer_offsets,partition=25,error_code=0},{topic=__consumer_offsets,partition=3,error_code=0},{topic=__consumer_offsets,partition=30,error_code=0},{topic=__consumer_offsets,partition=41,error_code=0},{topic=__consumer_offsets,partition=11,error_code=0},{topic=__consumer_offsets,partition=33,error_code=0},{topic=__consumer_offsets,partition=22,error_code=0},{topic=__consumer_offsets,partition=0,error_code=0}]} for a request sent to broker localhost:9092 (id: 0 rack: null)
[TRACE] [2017-04-08 13:24:01,867] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,867] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,867] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,867] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,867] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,867] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,867] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,867] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,867] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,867] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,867] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,868] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,868] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,868] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,868] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,868] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,868] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,868] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,868] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,868] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,868] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,868] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,868] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,868] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,868] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,869] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,869] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,869] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,869] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,869] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,869] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,869] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,869] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,869] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,869] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,869] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,869] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,869] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,869] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,870] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,870] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,870] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,870] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,870] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,870] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:39,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,870] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,870] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,870] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,870] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,870] [kafka-request-handler-1] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:36,ControllerEpoch:33),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 2
[TRACE] [2017-04-08 13:24:01,872] [Controller-0-to-broker-0-send-thread] [state.change.logger] - Controller 0 epoch 34 received response {error_code=0} for a request sent to broker localhost:9092 (id: 0 rack: null)
[TRACE] [2017-04-08 13:24:01,874] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=40, isr=[0], zkVersion=101, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,13]
[TRACE] [2017-04-08 13:24:01,874] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=40, isr=[0], zkVersion=78, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,46]
[TRACE] [2017-04-08 13:24:01,874] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=62, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,9]
[TRACE] [2017-04-08 13:24:01,874] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=66, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,42]
[TRACE] [2017-04-08 13:24:01,874] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=62, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,21]
[TRACE] [2017-04-08 13:24:01,874] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=68, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,17]
[TRACE] [2017-04-08 13:24:01,874] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=68, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,30]
[TRACE] [2017-04-08 13:24:01,874] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=75, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,26]
[TRACE] [2017-04-08 13:24:01,874] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=84, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,5]
[TRACE] [2017-04-08 13:24:01,874] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=69, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,38]
[TRACE] [2017-04-08 13:24:01,874] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=40, isr=[0], zkVersion=100, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,1]
[TRACE] [2017-04-08 13:24:01,874] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=40, isr=[0], zkVersion=94, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,34]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=40, isr=[0], zkVersion=76, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,16]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=80, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,45]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=98, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,12]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=38, isr=[0], zkVersion=65, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,41]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=87, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,24]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=71, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,20]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=40, isr=[0], zkVersion=78, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,49]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=94, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,0]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=38, isr=[0], zkVersion=81, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,29]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=40, isr=[0], zkVersion=73, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,25]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=69, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,8]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=40, isr=[0], zkVersion=112, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,37]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=40, isr=[0], zkVersion=71, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,4]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=98, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,33]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=62, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,15]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=97, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,48]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=75, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,11]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=73, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,44]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=68, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,23]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=40, isr=[0], zkVersion=73, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,19]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=91, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,32]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=40, isr=[0], zkVersion=71, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,28]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=40, isr=[0], zkVersion=73, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,7]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=40, isr=[0], zkVersion=108, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,40]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=62, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,3]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=66, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,36]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=38, isr=[0], zkVersion=65, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,47]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=94, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,14]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=40, isr=[0], zkVersion=81, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,43]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=40, isr=[0], zkVersion=99, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,10]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=40, isr=[0], zkVersion=71, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,22]
[TRACE] [2017-04-08 13:24:01,875] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=66, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,18]
[TRACE] [2017-04-08 13:24:01,876] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=40, isr=[0], zkVersion=78, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,31]
[TRACE] [2017-04-08 13:24:01,876] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=62, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,27]
[TRACE] [2017-04-08 13:24:01,876] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=74, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,39]
[TRACE] [2017-04-08 13:24:01,876] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=70, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,6]
[TRACE] [2017-04-08 13:24:01,876] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=70, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,35]
[TRACE] [2017-04-08 13:24:01,876] [kafka-request-handler-7] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=34, leader=0, leaderEpoch=37, isr=[0], zkVersion=78, replicas=[0, 1, 2]) correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,2]
[TRACE] [2017-04-08 13:24:01,877] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,0]
[TRACE] [2017-04-08 13:24:01,877] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,29]
[TRACE] [2017-04-08 13:24:01,877] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,48]
[TRACE] [2017-04-08 13:24:01,877] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,10]
[TRACE] [2017-04-08 13:24:01,877] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,45]
[TRACE] [2017-04-08 13:24:01,877] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,26]
[TRACE] [2017-04-08 13:24:01,877] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,7]
[TRACE] [2017-04-08 13:24:01,877] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,42]
[TRACE] [2017-04-08 13:24:01,877] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,4]
[TRACE] [2017-04-08 13:24:01,877] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,23]
[TRACE] [2017-04-08 13:24:01,877] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,1]
[TRACE] [2017-04-08 13:24:01,877] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,20]
[TRACE] [2017-04-08 13:24:01,877] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,39]
[TRACE] [2017-04-08 13:24:01,877] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,17]
[TRACE] [2017-04-08 13:24:01,877] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,36]
[TRACE] [2017-04-08 13:24:01,877] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,14]
[TRACE] [2017-04-08 13:24:01,877] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,33]
[TRACE] [2017-04-08 13:24:01,877] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,49]
[TRACE] [2017-04-08 13:24:01,877] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,11]
[TRACE] [2017-04-08 13:24:01,877] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,30]
[TRACE] [2017-04-08 13:24:01,877] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,46]
[TRACE] [2017-04-08 13:24:01,877] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,27]
[TRACE] [2017-04-08 13:24:01,878] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,8]
[TRACE] [2017-04-08 13:24:01,878] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,24]
[TRACE] [2017-04-08 13:24:01,878] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,43]
[TRACE] [2017-04-08 13:24:01,878] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,5]
[TRACE] [2017-04-08 13:24:01,878] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,21]
[TRACE] [2017-04-08 13:24:01,878] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,2]
[TRACE] [2017-04-08 13:24:01,878] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,40]
[TRACE] [2017-04-08 13:24:01,878] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,37]
[TRACE] [2017-04-08 13:24:01,878] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,18]
[TRACE] [2017-04-08 13:24:01,878] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,34]
[TRACE] [2017-04-08 13:24:01,878] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,15]
[TRACE] [2017-04-08 13:24:01,878] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,12]
[TRACE] [2017-04-08 13:24:01,878] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,31]
[TRACE] [2017-04-08 13:24:01,878] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,9]
[TRACE] [2017-04-08 13:24:01,878] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,47]
[TRACE] [2017-04-08 13:24:01,878] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,19]
[TRACE] [2017-04-08 13:24:01,878] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,28]
[TRACE] [2017-04-08 13:24:01,878] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,38]
[TRACE] [2017-04-08 13:24:01,878] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,35]
[TRACE] [2017-04-08 13:24:01,878] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,44]
[TRACE] [2017-04-08 13:24:01,878] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,6]
[TRACE] [2017-04-08 13:24:01,878] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,25]
[TRACE] [2017-04-08 13:24:01,878] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,16]
[TRACE] [2017-04-08 13:24:01,878] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,22]
[TRACE] [2017-04-08 13:24:01,878] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,41]
[TRACE] [2017-04-08 13:24:01,878] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,32]
[TRACE] [2017-04-08 13:24:01,879] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,3]
[TRACE] [2017-04-08 13:24:01,879] [kafka-request-handler-7] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 34 starting the become-leader transition for partition [__consumer_offsets,13]
[INFO] [2017-04-08 13:24:01,881] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,0] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,881] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,29] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,881] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,48] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,882] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,10] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,882] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,45] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,882] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,26] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,882] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,7] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,882] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,42] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,882] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,4] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,882] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,23] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,882] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,1] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,882] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,20] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,883] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,39] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,883] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,17] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,883] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,36] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,883] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,14] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,883] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,33] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,883] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,49] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,884] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,11] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,884] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,30] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,884] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,46] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,884] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,27] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,884] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,8] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,884] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,24] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,884] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,43] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,885] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,5] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,885] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,21] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,885] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,2] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,885] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,40] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,885] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,37] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,886] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,18] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,886] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,34] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,886] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,15] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,886] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,12] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,886] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,31] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,886] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,9] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,887] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,47] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,887] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,19] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,888] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,28] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,889] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,38] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,890] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,35] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,891] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,44] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,891] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,6] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,892] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,25] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,892] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,16] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,893] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,22] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,893] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,41] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,894] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,32] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,894] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,3] since it is already the leader for the partition.
[INFO] [2017-04-08 13:24:01,894] [kafka-request-handler-7] [state.change.logger] - Broker 0 skipped the become-leader state change after marking its partition as leader with correlation id 3 from controller 0 epoch 34 for partition [__consumer_offsets,13] since it is already the leader for the partition.
[TRACE] [2017-04-08 13:24:01,894] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,0]
[TRACE] [2017-04-08 13:24:01,894] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,29]
[TRACE] [2017-04-08 13:24:01,894] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,48]
[TRACE] [2017-04-08 13:24:01,895] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,10]
[TRACE] [2017-04-08 13:24:01,895] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,45]
[TRACE] [2017-04-08 13:24:01,895] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,26]
[TRACE] [2017-04-08 13:24:01,895] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,7]
[TRACE] [2017-04-08 13:24:01,895] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,42]
[TRACE] [2017-04-08 13:24:01,895] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,4]
[TRACE] [2017-04-08 13:24:01,895] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,23]
[TRACE] [2017-04-08 13:24:01,895] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,1]
[TRACE] [2017-04-08 13:24:01,895] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,20]
[TRACE] [2017-04-08 13:24:01,895] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,39]
[TRACE] [2017-04-08 13:24:01,895] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,17]
[TRACE] [2017-04-08 13:24:01,895] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,36]
[TRACE] [2017-04-08 13:24:01,895] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,14]
[TRACE] [2017-04-08 13:24:01,895] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,33]
[TRACE] [2017-04-08 13:24:01,895] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,49]
[TRACE] [2017-04-08 13:24:01,895] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,11]
[TRACE] [2017-04-08 13:24:01,895] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,30]
[TRACE] [2017-04-08 13:24:01,895] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,46]
[TRACE] [2017-04-08 13:24:01,895] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,27]
[TRACE] [2017-04-08 13:24:01,895] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,8]
[TRACE] [2017-04-08 13:24:01,896] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,24]
[TRACE] [2017-04-08 13:24:01,896] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,43]
[TRACE] [2017-04-08 13:24:01,896] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,5]
[TRACE] [2017-04-08 13:24:01,896] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,21]
[TRACE] [2017-04-08 13:24:01,896] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,2]
[TRACE] [2017-04-08 13:24:01,897] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,40]
[TRACE] [2017-04-08 13:24:01,897] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,37]
[TRACE] [2017-04-08 13:24:01,897] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,18]
[TRACE] [2017-04-08 13:24:01,897] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,34]
[TRACE] [2017-04-08 13:24:01,897] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,15]
[TRACE] [2017-04-08 13:24:01,897] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,12]
[TRACE] [2017-04-08 13:24:01,897] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,31]
[TRACE] [2017-04-08 13:24:01,897] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,9]
[TRACE] [2017-04-08 13:24:01,897] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,47]
[TRACE] [2017-04-08 13:24:01,897] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,19]
[TRACE] [2017-04-08 13:24:01,897] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,28]
[TRACE] [2017-04-08 13:24:01,897] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,38]
[TRACE] [2017-04-08 13:24:01,897] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,35]
[TRACE] [2017-04-08 13:24:01,897] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,44]
[TRACE] [2017-04-08 13:24:01,898] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,6]
[TRACE] [2017-04-08 13:24:01,898] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,25]
[TRACE] [2017-04-08 13:24:01,898] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,16]
[TRACE] [2017-04-08 13:24:01,898] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,22]
[TRACE] [2017-04-08 13:24:01,898] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,41]
[TRACE] [2017-04-08 13:24:01,898] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,32]
[TRACE] [2017-04-08 13:24:01,898] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,3]
[TRACE] [2017-04-08 13:24:01,898] [kafka-request-handler-7] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 34 for the become-leader transition for partition [__consumer_offsets,13]
[TRACE] [2017-04-08 13:24:01,902] [Controller-0-to-broker-0-send-thread] [state.change.logger] - Controller 0 epoch 34 received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=49,error_code=0},{topic=__consumer_offsets,partition=38,error_code=0},{topic=__consumer_offsets,partition=27,error_code=0},{topic=__consumer_offsets,partition=16,error_code=0},{topic=__consumer_offsets,partition=8,error_code=0},{topic=__consumer_offsets,partition=19,error_code=0},{topic=__consumer_offsets,partition=13,error_code=0},{topic=__consumer_offsets,partition=2,error_code=0},{topic=__consumer_offsets,partition=24,error_code=0},{topic=__consumer_offsets,partition=46,error_code=0},{topic=__consumer_offsets,partition=35,error_code=0},{topic=__consumer_offsets,partition=5,error_code=0},{topic=__consumer_offsets,partition=43,error_code=0},{topic=__consumer_offsets,partition=21,error_code=0},{topic=__consumer_offsets,partition=32,error_code=0},{topic=__consumer_offsets,partition=10,error_code=0},{topic=__consumer_offsets,partition=37,error_code=0},{topic=__consumer_offsets,partition=48,error_code=0},{topic=__consumer_offsets,partition=29,error_code=0},{topic=__consumer_offsets,partition=40,error_code=0},{topic=__consumer_offsets,partition=18,error_code=0},{topic=__consumer_offsets,partition=7,error_code=0},{topic=__consumer_offsets,partition=45,error_code=0},{topic=__consumer_offsets,partition=23,error_code=0},{topic=__consumer_offsets,partition=34,error_code=0},{topic=__consumer_offsets,partition=26,error_code=0},{topic=__consumer_offsets,partition=4,error_code=0},{topic=__consumer_offsets,partition=15,error_code=0},{topic=__consumer_offsets,partition=42,error_code=0},{topic=__consumer_offsets,partition=20,error_code=0},{topic=__consumer_offsets,partition=31,error_code=0},{topic=__consumer_offsets,partition=9,error_code=0},{topic=__consumer_offsets,partition=1,error_code=0},{topic=__consumer_offsets,partition=12,error_code=0},{topic=__consumer_offsets,partition=17,error_code=0},{topic=__consumer_offsets,partition=28,error_code=0},{topic=__consumer_offsets,partition=6,error_code=0},{topic=__consumer_offsets,partition=39,error_code=0},{topic=__consumer_offsets,partition=44,error_code=0},{topic=__consumer_offsets,partition=36,error_code=0},{topic=__consumer_offsets,partition=47,error_code=0},{topic=__consumer_offsets,partition=14,error_code=0},{topic=__consumer_offsets,partition=25,error_code=0},{topic=__consumer_offsets,partition=3,error_code=0},{topic=__consumer_offsets,partition=30,error_code=0},{topic=__consumer_offsets,partition=41,error_code=0},{topic=__consumer_offsets,partition=11,error_code=0},{topic=__consumer_offsets,partition=33,error_code=0},{topic=__consumer_offsets,partition=22,error_code=0},{topic=__consumer_offsets,partition=0,error_code=0}]} for a request sent to broker localhost:9092 (id: 0 rack: null)
[TRACE] [2017-04-08 13:24:01,905] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,905] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,905] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,905] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,905] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,905] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,905] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,905] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,905] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,905] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,906] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,906] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,906] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,906] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,906] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,906] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,906] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,906] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,906] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,906] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,906] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,907] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,907] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,908] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,908] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,908] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,909] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,910] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,910] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,910] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,911] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,911] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,911] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,911] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,911] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,912] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,912] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,912] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,912] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,912] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,913] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,913] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,913] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,913] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,913] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:40,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,913] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,913] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,913] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,913] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,913] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:34),ReplicationFactor:3),AllReplicas:0,1,2) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 0 epoch 34 with correlation id 4
[TRACE] [2017-04-08 13:24:01,915] [Controller-0-to-broker-0-send-thread] [state.change.logger] - Controller 0 epoch 34 received response {error_code=0} for a request sent to broker localhost:9092 (id: 0 rack: null)
[TRACE] [2017-04-08 13:24:41,389] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,43]
[ERROR] [2017-04-08 13:24:41,393] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,43] due to: No other replicas in ISR 0 for [__consumer_offsets,43] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,394] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,43] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,43] due to: No other replicas in ISR 0 for [__consumer_offsets,43] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,43] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,394] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,14]
[ERROR] [2017-04-08 13:24:41,398] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,14] due to: No other replicas in ISR 0 for [__consumer_offsets,14] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,399] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,14] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,14] due to: No other replicas in ISR 0 for [__consumer_offsets,14] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,14] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,399] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,28]
[ERROR] [2017-04-08 13:24:41,401] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,28] due to: No other replicas in ISR 0 for [__consumer_offsets,28] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,401] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,28] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,28] due to: No other replicas in ISR 0 for [__consumer_offsets,28] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,28] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,401] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,4]
[ERROR] [2017-04-08 13:24:41,403] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,4] due to: No other replicas in ISR 0 for [__consumer_offsets,4] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,403] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,4] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,4] due to: No other replicas in ISR 0 for [__consumer_offsets,4] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,4] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,403] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,36]
[ERROR] [2017-04-08 13:24:41,404] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,36] due to: No other replicas in ISR 0 for [__consumer_offsets,36] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,404] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,36] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,36] due to: No other replicas in ISR 0 for [__consumer_offsets,36] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,36] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,405] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,6]
[ERROR] [2017-04-08 13:24:41,406] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,6] due to: No other replicas in ISR 0 for [__consumer_offsets,6] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,406] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,6] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,6] due to: No other replicas in ISR 0 for [__consumer_offsets,6] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,6] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,407] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,39]
[ERROR] [2017-04-08 13:24:41,408] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,39] due to: No other replicas in ISR 0 for [__consumer_offsets,39] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,408] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,39] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,39] due to: No other replicas in ISR 0 for [__consumer_offsets,39] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,39] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:24:41,409] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,23]
[ERROR] [2017-04-08 13:24:41,410] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,23] due to: No other replicas in ISR 0 for [__consumer_offsets,23] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,410] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,23] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,23] due to: No other replicas in ISR 0 for [__consumer_offsets,23] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,23] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:24:41,412] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,24]
[ERROR] [2017-04-08 13:24:41,414] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,24] due to: No other replicas in ISR 0 for [__consumer_offsets,24] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,414] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,24] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,24] due to: No other replicas in ISR 0 for [__consumer_offsets,24] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,24] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,415] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,38]
[ERROR] [2017-04-08 13:24:41,417] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,38] due to: No other replicas in ISR 0 for [__consumer_offsets,38] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,417] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,38] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,38] due to: No other replicas in ISR 0 for [__consumer_offsets,38] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,38] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,418] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,16]
[ERROR] [2017-04-08 13:24:41,421] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,16] due to: No other replicas in ISR 0 for [__consumer_offsets,16] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,421] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,16] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,16] due to: No other replicas in ISR 0 for [__consumer_offsets,16] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,16] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 24 more
[TRACE] [2017-04-08 13:24:41,422] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,3]
[ERROR] [2017-04-08 13:24:41,423] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,3] due to: No other replicas in ISR 0 for [__consumer_offsets,3] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,423] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,3] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,3] due to: No other replicas in ISR 0 for [__consumer_offsets,3] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,3] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 24 more
[TRACE] [2017-04-08 13:24:41,424] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,21]
[ERROR] [2017-04-08 13:24:41,429] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,21] due to: No other replicas in ISR 0 for [__consumer_offsets,21] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,430] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,21] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,21] due to: No other replicas in ISR 0 for [__consumer_offsets,21] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,21] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,431] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,10]
[ERROR] [2017-04-08 13:24:41,435] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,10] due to: No other replicas in ISR 0 for [__consumer_offsets,10] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,435] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,10] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,10] due to: No other replicas in ISR 0 for [__consumer_offsets,10] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,10] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,436] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,40]
[ERROR] [2017-04-08 13:24:41,442] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,40] due to: No other replicas in ISR 0 for [__consumer_offsets,40] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,442] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,40] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,40] due to: No other replicas in ISR 0 for [__consumer_offsets,40] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,40] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,443] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,34]
[ERROR] [2017-04-08 13:24:41,446] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,34] due to: No other replicas in ISR 0 for [__consumer_offsets,34] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,446] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,34] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,34] due to: No other replicas in ISR 0 for [__consumer_offsets,34] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,34] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:24:41,446] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,25]
[ERROR] [2017-04-08 13:24:41,448] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,25] due to: No other replicas in ISR 0 for [__consumer_offsets,25] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,448] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,25] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,25] due to: No other replicas in ISR 0 for [__consumer_offsets,25] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,25] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,448] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,27]
[ERROR] [2017-04-08 13:24:41,454] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,27] due to: No other replicas in ISR 0 for [__consumer_offsets,27] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,456] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,27] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,27] due to: No other replicas in ISR 0 for [__consumer_offsets,27] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,27] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,458] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,42]
[ERROR] [2017-04-08 13:24:41,464] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,42] due to: No other replicas in ISR 0 for [__consumer_offsets,42] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,464] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,42] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,42] due to: No other replicas in ISR 0 for [__consumer_offsets,42] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,42] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,465] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,11]
[ERROR] [2017-04-08 13:24:41,472] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,11] due to: No other replicas in ISR 0 for [__consumer_offsets,11] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,472] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,11] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,11] due to: No other replicas in ISR 0 for [__consumer_offsets,11] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,11] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,473] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,7]
[ERROR] [2017-04-08 13:24:41,476] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,7] due to: No other replicas in ISR 0 for [__consumer_offsets,7] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,476] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,7] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,7] due to: No other replicas in ISR 0 for [__consumer_offsets,7] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,7] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,476] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,47]
[ERROR] [2017-04-08 13:24:41,485] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,47] due to: No other replicas in ISR 0 for [__consumer_offsets,47] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,486] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,47] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,47] due to: No other replicas in ISR 0 for [__consumer_offsets,47] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,47] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,487] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,9]
[ERROR] [2017-04-08 13:24:41,491] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,9] due to: No other replicas in ISR 0 for [__consumer_offsets,9] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,491] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,9] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,9] due to: No other replicas in ISR 0 for [__consumer_offsets,9] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,9] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,492] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,13]
[ERROR] [2017-04-08 13:24:41,494] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,13] due to: No other replicas in ISR 0 for [__consumer_offsets,13] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,494] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,13] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,13] due to: No other replicas in ISR 0 for [__consumer_offsets,13] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,13] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:24:41,494] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,29]
[ERROR] [2017-04-08 13:24:41,495] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,29] due to: No other replicas in ISR 0 for [__consumer_offsets,29] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,495] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,29] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,29] due to: No other replicas in ISR 0 for [__consumer_offsets,29] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,29] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,497] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,8]
[ERROR] [2017-04-08 13:24:41,499] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,8] due to: No other replicas in ISR 0 for [__consumer_offsets,8] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,499] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,8] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,8] due to: No other replicas in ISR 0 for [__consumer_offsets,8] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,8] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,499] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,22]
[ERROR] [2017-04-08 13:24:41,501] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,22] due to: No other replicas in ISR 0 for [__consumer_offsets,22] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,501] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,22] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,22] due to: No other replicas in ISR 0 for [__consumer_offsets,22] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,22] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,502] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,31]
[ERROR] [2017-04-08 13:24:41,503] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,31] due to: No other replicas in ISR 0 for [__consumer_offsets,31] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,503] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,31] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,31] due to: No other replicas in ISR 0 for [__consumer_offsets,31] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,31] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:24:41,504] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,18]
[ERROR] [2017-04-08 13:24:41,505] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,18] due to: No other replicas in ISR 0 for [__consumer_offsets,18] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,505] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,18] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,18] due to: No other replicas in ISR 0 for [__consumer_offsets,18] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,18] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,506] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,20]
[ERROR] [2017-04-08 13:24:41,507] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,20] due to: No other replicas in ISR 0 for [__consumer_offsets,20] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,507] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,20] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,20] due to: No other replicas in ISR 0 for [__consumer_offsets,20] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,20] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,508] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,37]
[ERROR] [2017-04-08 13:24:41,509] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,37] due to: No other replicas in ISR 0 for [__consumer_offsets,37] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,509] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,37] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,37] due to: No other replicas in ISR 0 for [__consumer_offsets,37] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,37] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:24:41,510] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,49]
[ERROR] [2017-04-08 13:24:41,512] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,49] due to: No other replicas in ISR 0 for [__consumer_offsets,49] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,512] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,49] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,49] due to: No other replicas in ISR 0 for [__consumer_offsets,49] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,49] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,513] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,12]
[ERROR] [2017-04-08 13:24:41,514] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,12] due to: No other replicas in ISR 0 for [__consumer_offsets,12] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,514] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,12] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,12] due to: No other replicas in ISR 0 for [__consumer_offsets,12] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,12] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,515] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,5]
[ERROR] [2017-04-08 13:24:41,516] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,5] due to: No other replicas in ISR 0 for [__consumer_offsets,5] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,516] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,5] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,5] due to: No other replicas in ISR 0 for [__consumer_offsets,5] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,5] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,516] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,32]
[ERROR] [2017-04-08 13:24:41,518] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,32] due to: No other replicas in ISR 0 for [__consumer_offsets,32] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,518] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,32] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,32] due to: No other replicas in ISR 0 for [__consumer_offsets,32] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,32] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,518] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,2]
[ERROR] [2017-04-08 13:24:41,520] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,2] due to: No other replicas in ISR 0 for [__consumer_offsets,2] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,520] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,2] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,2] due to: No other replicas in ISR 0 for [__consumer_offsets,2] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,2] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,521] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,1]
[ERROR] [2017-04-08 13:24:41,522] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,1] due to: No other replicas in ISR 0 for [__consumer_offsets,1] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,522] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,1] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,1] due to: No other replicas in ISR 0 for [__consumer_offsets,1] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,1] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,522] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,0]
[ERROR] [2017-04-08 13:24:41,524] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,0] due to: No other replicas in ISR 0 for [__consumer_offsets,0] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,524] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,0] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,0] due to: No other replicas in ISR 0 for [__consumer_offsets,0] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,0] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,524] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,15]
[ERROR] [2017-04-08 13:24:41,525] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,15] due to: No other replicas in ISR 0 for [__consumer_offsets,15] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,525] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,15] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,15] due to: No other replicas in ISR 0 for [__consumer_offsets,15] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,15] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,526] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,44]
[ERROR] [2017-04-08 13:24:41,527] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,44] due to: No other replicas in ISR 0 for [__consumer_offsets,44] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,527] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,44] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,44] due to: No other replicas in ISR 0 for [__consumer_offsets,44] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,44] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 23 more
[TRACE] [2017-04-08 13:24:41,527] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,17]
[ERROR] [2017-04-08 13:24:41,530] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,17] due to: No other replicas in ISR 0 for [__consumer_offsets,17] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,530] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,17] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,17] due to: No other replicas in ISR 0 for [__consumer_offsets,17] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,17] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 23 more
[TRACE] [2017-04-08 13:24:41,530] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,48]
[ERROR] [2017-04-08 13:24:41,532] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,48] due to: No other replicas in ISR 0 for [__consumer_offsets,48] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,532] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,48] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,48] due to: No other replicas in ISR 0 for [__consumer_offsets,48] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,48] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:24:41,532] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,26]
[ERROR] [2017-04-08 13:24:41,534] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,26] due to: No other replicas in ISR 0 for [__consumer_offsets,26] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,534] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,26] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,26] due to: No other replicas in ISR 0 for [__consumer_offsets,26] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,26] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,534] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,33]
[ERROR] [2017-04-08 13:24:41,536] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,33] due to: No other replicas in ISR 0 for [__consumer_offsets,33] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,536] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,33] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,33] due to: No other replicas in ISR 0 for [__consumer_offsets,33] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,33] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,536] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,41]
[ERROR] [2017-04-08 13:24:41,538] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,41] due to: No other replicas in ISR 0 for [__consumer_offsets,41] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,538] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,41] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,41] due to: No other replicas in ISR 0 for [__consumer_offsets,41] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,41] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:24:41,538] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,45]
[ERROR] [2017-04-08 13:24:41,540] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,45] due to: No other replicas in ISR 0 for [__consumer_offsets,45] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,540] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,45] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,45] due to: No other replicas in ISR 0 for [__consumer_offsets,45] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,45] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[TRACE] [2017-04-08 13:24:41,540] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,35]
[ERROR] [2017-04-08 13:24:41,541] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,35] due to: No other replicas in ISR 0 for [__consumer_offsets,35] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,541] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,35] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,35] due to: No other replicas in ISR 0 for [__consumer_offsets,35] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,35] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,542] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,46]
[ERROR] [2017-04-08 13:24:41,544] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,46] due to: No other replicas in ISR 0 for [__consumer_offsets,46] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,544] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,46] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,46] due to: No other replicas in ISR 0 for [__consumer_offsets,46] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,46] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,545] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,19]
[ERROR] [2017-04-08 13:24:41,548] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,19] due to: No other replicas in ISR 0 for [__consumer_offsets,19] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,548] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,19] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,19] due to: No other replicas in ISR 0 for [__consumer_offsets,19] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,19] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 22 more
[TRACE] [2017-04-08 13:24:41,548] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 started leader election for partition [__consumer_offsets,30]
[ERROR] [2017-04-08 13:24:41,551] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 encountered error while electing leader for partition [__consumer_offsets,30] due to: No other replicas in ISR 0 for [__consumer_offsets,30] besides shutting down brokers 0.
[ERROR] [2017-04-08 13:24:41,551] [kafka-request-handler-1] [state.change.logger] - Controller 0 epoch 34 initiated state change for partition [__consumer_offsets,30] from OnlinePartition to OnlinePartition failed
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [__consumer_offsets,30] due to: No other replicas in ISR 0 for [__consumer_offsets,30] besides shutting down brokers 0.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:367)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:269)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:264)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:264)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:234)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:260)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:316)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:972)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:260)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:223)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:85)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 0 for [__consumer_offsets,30] besides shutting down brokers 0
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:191)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:344)
	... 21 more
[DEBUG] [2017-04-08 13:24:59,337] [main] [state.change.logger] - preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@4cdf35a9, name=log4j:logger=state.change.logger
[TRACE] [2017-04-08 13:25:26,069] [Controller-0-to-broker-0-send-thread] [state.change.logger] - Controller 0 epoch 1 received response {error_code=0} for a request sent to broker localhost:9092 (id: 0 rack: null)
[TRACE] [2017-04-08 13:25:45,083] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [avro_base_topic,3] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:25:45,083] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [avro_base_topic,2] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:25:45,083] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [avro_base_topic,0] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:25:45,084] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [avro_base_topic,1] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:25:45,085] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [avro_base_topic,4] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:25:45,096] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [avro_base_topic,2] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:25:45,097] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [avro_base_topic,0] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:25:45,098] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [avro_base_topic,4] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:25:45,100] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [avro_base_topic,3] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:25:45,101] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [avro_base_topic,1] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:25:45,129] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [avro_base_topic,3] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:25:45,136] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [avro_base_topic,2] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:25:45,144] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [avro_base_topic,0] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:25:45,150] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [avro_base_topic,1] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:25:45,156] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [avro_base_topic,4] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:25:45,157] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [avro_base_topic,0]
[TRACE] [2017-04-08 13:25:45,157] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [avro_base_topic,3]
[TRACE] [2017-04-08 13:25:45,158] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [avro_base_topic,2]
[TRACE] [2017-04-08 13:25:45,158] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [avro_base_topic,4]
[TRACE] [2017-04-08 13:25:45,158] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [avro_base_topic,1]
[TRACE] [2017-04-08 13:25:45,165] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition avro_base_topic-0
[TRACE] [2017-04-08 13:25:45,166] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition avro_base_topic-3
[TRACE] [2017-04-08 13:25:45,167] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition avro_base_topic-2
[TRACE] [2017-04-08 13:25:45,168] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition avro_base_topic-4
[TRACE] [2017-04-08 13:25:45,168] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition avro_base_topic-1
[TRACE] [2017-04-08 13:25:45,168] [kafka-request-handler-1] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 1 from controller 0 epoch 1 for partition [avro_base_topic,0]
[TRACE] [2017-04-08 13:25:45,169] [kafka-request-handler-1] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 1 from controller 0 epoch 1 for partition [avro_base_topic,1]
[TRACE] [2017-04-08 13:25:45,169] [kafka-request-handler-1] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 1 from controller 0 epoch 1 for partition [avro_base_topic,2]
[TRACE] [2017-04-08 13:25:45,169] [kafka-request-handler-1] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 1 from controller 0 epoch 1 for partition [avro_base_topic,3]
[TRACE] [2017-04-08 13:25:45,169] [kafka-request-handler-1] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 1 from controller 0 epoch 1 for partition [avro_base_topic,4]
[TRACE] [2017-04-08 13:25:45,175] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [avro_base_topic,2] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:25:45,176] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [avro_base_topic,0] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:25:45,176] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [avro_base_topic,4] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:25:45,177] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [avro_base_topic,3] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:25:45,177] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [avro_base_topic,1] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:25:45,199] [kafka-request-handler-1] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 1 starting the become-leader transition for partition [avro_base_topic,3]
[TRACE] [2017-04-08 13:25:45,199] [kafka-request-handler-1] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 1 starting the become-leader transition for partition [avro_base_topic,0]
[TRACE] [2017-04-08 13:25:45,199] [kafka-request-handler-1] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 1 starting the become-leader transition for partition [avro_base_topic,4]
[TRACE] [2017-04-08 13:25:45,200] [kafka-request-handler-1] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 1 starting the become-leader transition for partition [avro_base_topic,1]
[TRACE] [2017-04-08 13:25:45,200] [kafka-request-handler-1] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 1 starting the become-leader transition for partition [avro_base_topic,2]
[TRACE] [2017-04-08 13:25:45,472] [kafka-request-handler-1] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 1 for partition [avro_base_topic,1]
[TRACE] [2017-04-08 13:25:45,473] [kafka-request-handler-1] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 1 for partition [avro_base_topic,4]
[TRACE] [2017-04-08 13:25:45,473] [kafka-request-handler-1] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 1 for partition [avro_base_topic,0]
[TRACE] [2017-04-08 13:25:45,473] [kafka-request-handler-1] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 1 for partition [avro_base_topic,3]
[TRACE] [2017-04-08 13:25:45,473] [kafka-request-handler-1] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 1 for partition [avro_base_topic,2]
[TRACE] [2017-04-08 13:25:45,476] [kafka-request-handler-1] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 1 for the become-leader transition for partition [avro_base_topic,3]
[TRACE] [2017-04-08 13:25:45,476] [kafka-request-handler-1] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 1 for the become-leader transition for partition [avro_base_topic,0]
[TRACE] [2017-04-08 13:25:45,476] [kafka-request-handler-1] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 1 for the become-leader transition for partition [avro_base_topic,4]
[TRACE] [2017-04-08 13:25:45,476] [kafka-request-handler-1] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 1 for the become-leader transition for partition [avro_base_topic,1]
[TRACE] [2017-04-08 13:25:45,476] [kafka-request-handler-1] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 1 for the become-leader transition for partition [avro_base_topic,2]
[TRACE] [2017-04-08 13:25:45,505] [Controller-0-to-broker-0-send-thread] [state.change.logger] - Controller 0 epoch 1 received response {error_code=0,partitions=[{topic=avro_base_topic,partition=0,error_code=0},{topic=avro_base_topic,partition=3,error_code=0},{topic=avro_base_topic,partition=2,error_code=0},{topic=avro_base_topic,partition=4,error_code=0},{topic=avro_base_topic,partition=1,error_code=0}]} for a request sent to broker localhost:9092 (id: 0 rack: null)
[TRACE] [2017-04-08 13:25:45,510] [kafka-request-handler-5] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition avro_base_topic-0 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 2
[TRACE] [2017-04-08 13:25:45,510] [kafka-request-handler-5] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition avro_base_topic-1 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 2
[TRACE] [2017-04-08 13:25:45,511] [kafka-request-handler-5] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition avro_base_topic-2 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 2
[TRACE] [2017-04-08 13:25:45,511] [kafka-request-handler-5] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition avro_base_topic-3 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 2
[TRACE] [2017-04-08 13:25:45,511] [kafka-request-handler-5] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition avro_base_topic-4 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 2
[TRACE] [2017-04-08 13:25:45,512] [Controller-0-to-broker-0-send-thread] [state.change.logger] - Controller 0 epoch 1 received response {error_code=0} for a request sent to broker localhost:9092 (id: 0 rack: null)
[TRACE] [2017-04-08 13:26:00,331] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,32] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,331] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,16] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,332] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,49] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,332] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,44] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,332] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,28] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,333] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,17] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,334] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,23] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,334] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,7] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,334] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,4] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,334] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,29] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,334] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,35] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,335] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,3] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,335] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,24] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,335] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,41] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,336] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,0] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,337] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,38] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,338] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,13] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,338] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,8] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,339] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,5] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,339] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,39] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,339] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,36] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,339] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,40] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,339] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,45] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,340] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,15] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,340] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,33] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,340] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,37] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,340] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,21] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,340] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,6] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,340] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,11] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,341] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,20] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,341] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,47] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,341] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,2] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,341] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,27] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,341] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,34] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,341] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,9] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,341] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,22] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,341] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,42] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,342] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,14] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,342] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,25] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,342] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,10] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,342] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,48] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,342] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,31] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,342] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,18] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,342] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,19] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,342] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,12] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,343] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,46] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,343] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,43] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,343] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,1] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,344] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,26] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,344] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,30] state from NonExistentPartition to NewPartition with assigned replicas 0
[TRACE] [2017-04-08 13:26:00,348] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,25] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,349] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,12] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,350] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,31] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,351] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,40] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,352] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,35] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,353] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,9] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,354] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,43] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,355] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,2] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,356] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,11] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,357] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,29] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,359] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,30] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,360] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,4] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,361] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,42] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,362] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,26] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,363] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,34] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,364] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,17] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,365] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,37] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,366] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,27] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,367] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,10] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,368] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,41] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,369] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,20] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,371] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,28] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,371] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,46] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,373] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,39] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,374] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,47] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,375] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,49] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,376] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,22] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,377] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,1] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,378] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,24] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,379] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,6] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,380] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,36] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,381] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,8] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,382] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,38] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,383] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,16] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,384] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,21] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,386] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,18] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,387] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,0] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,388] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,48] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,389] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,5] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,390] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,13] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,391] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,3] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,392] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,44] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,393] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,15] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,394] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,7] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,396] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,19] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,397] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,33] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,398] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,45] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,399] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,23] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,400] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,32] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,401] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,14] from NonExistentReplica to NewReplica
[TRACE] [2017-04-08 13:26:00,412] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,32] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,418] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,16] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,422] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,49] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,427] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,44] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,432] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,28] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,437] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,17] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,442] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,23] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,448] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,7] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,452] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,4] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,456] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,29] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,462] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,35] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,467] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,3] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,472] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,24] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,477] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,41] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,483] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,0] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,488] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,38] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,495] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,13] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,500] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,8] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,503] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,5] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,508] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,39] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,513] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,36] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,517] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,40] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,523] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,45] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,528] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,15] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,533] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,33] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,537] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,37] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,541] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,21] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,545] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,6] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,551] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,11] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,555] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,20] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,561] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,47] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,568] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,2] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,574] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,27] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,581] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,34] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,589] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,9] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,596] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,22] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,601] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,42] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,608] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,14] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,614] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,25] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,621] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,10] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,628] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,48] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,635] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,31] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,650] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,18] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,678] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,19] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,693] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,12] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,703] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,46] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,710] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,43] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,716] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,1] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,726] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,26] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,730] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed partition [__consumer_offsets,30] from NewPartition to OnlinePartition with leader 0
[TRACE] [2017-04-08 13:26:00,730] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,49]
[TRACE] [2017-04-08 13:26:00,730] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,38]
[TRACE] [2017-04-08 13:26:00,731] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,16]
[TRACE] [2017-04-08 13:26:00,731] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,27]
[TRACE] [2017-04-08 13:26:00,731] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,8]
[TRACE] [2017-04-08 13:26:00,731] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,19]
[TRACE] [2017-04-08 13:26:00,731] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,13]
[TRACE] [2017-04-08 13:26:00,731] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,2]
[TRACE] [2017-04-08 13:26:00,731] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,35]
[TRACE] [2017-04-08 13:26:00,731] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,24]
[TRACE] [2017-04-08 13:26:00,731] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,46]
[TRACE] [2017-04-08 13:26:00,732] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,5]
[TRACE] [2017-04-08 13:26:00,732] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,43]
[TRACE] [2017-04-08 13:26:00,732] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,32]
[TRACE] [2017-04-08 13:26:00,732] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,21]
[TRACE] [2017-04-08 13:26:00,732] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,10]
[TRACE] [2017-04-08 13:26:00,732] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,37]
[TRACE] [2017-04-08 13:26:00,732] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,48]
[TRACE] [2017-04-08 13:26:00,732] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,40]
[TRACE] [2017-04-08 13:26:00,732] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,29]
[TRACE] [2017-04-08 13:26:00,732] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,18]
[TRACE] [2017-04-08 13:26:00,732] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,7]
[TRACE] [2017-04-08 13:26:00,732] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,45]
[TRACE] [2017-04-08 13:26:00,732] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,23]
[TRACE] [2017-04-08 13:26:00,733] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,34]
[TRACE] [2017-04-08 13:26:00,733] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,26]
[TRACE] [2017-04-08 13:26:00,733] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,15]
[TRACE] [2017-04-08 13:26:00,733] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,4]
[TRACE] [2017-04-08 13:26:00,733] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,42]
[TRACE] [2017-04-08 13:26:00,733] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,20]
[TRACE] [2017-04-08 13:26:00,733] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,9]
[TRACE] [2017-04-08 13:26:00,733] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,31]
[TRACE] [2017-04-08 13:26:00,734] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,12]
[TRACE] [2017-04-08 13:26:00,734] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,1]
[TRACE] [2017-04-08 13:26:00,734] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,28]
[TRACE] [2017-04-08 13:26:00,734] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,17]
[TRACE] [2017-04-08 13:26:00,734] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,6]
[TRACE] [2017-04-08 13:26:00,734] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,39]
[TRACE] [2017-04-08 13:26:00,735] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,44]
[TRACE] [2017-04-08 13:26:00,737] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,36]
[TRACE] [2017-04-08 13:26:00,737] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,47]
[TRACE] [2017-04-08 13:26:00,738] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,3]
[TRACE] [2017-04-08 13:26:00,738] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,14]
[TRACE] [2017-04-08 13:26:00,738] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,25]
[TRACE] [2017-04-08 13:26:00,739] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,30]
[TRACE] [2017-04-08 13:26:00,739] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,41]
[TRACE] [2017-04-08 13:26:00,739] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,33]
[TRACE] [2017-04-08 13:26:00,739] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,11]
[TRACE] [2017-04-08 13:26:00,739] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,22]
[TRACE] [2017-04-08 13:26:00,739] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [__consumer_offsets,0]
[TRACE] [2017-04-08 13:26:00,741] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-49
[TRACE] [2017-04-08 13:26:00,742] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-38
[TRACE] [2017-04-08 13:26:00,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-16
[TRACE] [2017-04-08 13:26:00,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-27
[TRACE] [2017-04-08 13:26:00,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-8
[TRACE] [2017-04-08 13:26:00,743] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-19
[TRACE] [2017-04-08 13:26:00,744] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-13
[TRACE] [2017-04-08 13:26:00,744] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-2
[TRACE] [2017-04-08 13:26:00,744] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-35
[TRACE] [2017-04-08 13:26:00,744] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-24
[TRACE] [2017-04-08 13:26:00,744] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-46
[TRACE] [2017-04-08 13:26:00,744] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-5
[TRACE] [2017-04-08 13:26:00,744] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-43
[TRACE] [2017-04-08 13:26:00,744] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-32
[TRACE] [2017-04-08 13:26:00,744] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-21
[TRACE] [2017-04-08 13:26:00,744] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-10
[TRACE] [2017-04-08 13:26:00,745] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,13]
[TRACE] [2017-04-08 13:26:00,745] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-37
[TRACE] [2017-04-08 13:26:00,745] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,46]
[TRACE] [2017-04-08 13:26:00,745] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-48
[TRACE] [2017-04-08 13:26:00,745] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,9]
[TRACE] [2017-04-08 13:26:00,745] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-40
[TRACE] [2017-04-08 13:26:00,745] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,42]
[TRACE] [2017-04-08 13:26:00,745] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,21]
[TRACE] [2017-04-08 13:26:00,745] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,17]
[TRACE] [2017-04-08 13:26:00,745] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-29
[TRACE] [2017-04-08 13:26:00,745] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,30]
[TRACE] [2017-04-08 13:26:00,745] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-18
[TRACE] [2017-04-08 13:26:00,745] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,26]
[TRACE] [2017-04-08 13:26:00,745] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-7
[TRACE] [2017-04-08 13:26:00,745] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,5]
[TRACE] [2017-04-08 13:26:00,746] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-45
[TRACE] [2017-04-08 13:26:00,746] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,38]
[TRACE] [2017-04-08 13:26:00,746] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-23
[TRACE] [2017-04-08 13:26:00,746] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,1]
[TRACE] [2017-04-08 13:26:00,746] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-34
[TRACE] [2017-04-08 13:26:00,746] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,34]
[TRACE] [2017-04-08 13:26:00,746] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-26
[TRACE] [2017-04-08 13:26:00,746] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,16]
[TRACE] [2017-04-08 13:26:00,746] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-15
[TRACE] [2017-04-08 13:26:00,746] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-4
[TRACE] [2017-04-08 13:26:00,746] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,45]
[TRACE] [2017-04-08 13:26:00,746] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-42
[TRACE] [2017-04-08 13:26:00,746] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,12]
[TRACE] [2017-04-08 13:26:00,746] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-20
[TRACE] [2017-04-08 13:26:00,746] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,41]
[TRACE] [2017-04-08 13:26:00,746] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,24]
[TRACE] [2017-04-08 13:26:00,746] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,20]
[TRACE] [2017-04-08 13:26:00,746] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,49]
[TRACE] [2017-04-08 13:26:00,746] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,0]
[TRACE] [2017-04-08 13:26:00,746] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,29]
[TRACE] [2017-04-08 13:26:00,746] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-9
[TRACE] [2017-04-08 13:26:00,746] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,25]
[TRACE] [2017-04-08 13:26:00,746] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-31
[TRACE] [2017-04-08 13:26:00,746] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,8]
[TRACE] [2017-04-08 13:26:00,746] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-12
[TRACE] [2017-04-08 13:26:00,746] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,37]
[TRACE] [2017-04-08 13:26:00,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-1
[TRACE] [2017-04-08 13:26:00,747] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,4]
[TRACE] [2017-04-08 13:26:00,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-28
[TRACE] [2017-04-08 13:26:00,747] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,33]
[TRACE] [2017-04-08 13:26:00,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-17
[TRACE] [2017-04-08 13:26:00,747] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,15]
[TRACE] [2017-04-08 13:26:00,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-6
[TRACE] [2017-04-08 13:26:00,747] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,48]
[TRACE] [2017-04-08 13:26:00,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-39
[TRACE] [2017-04-08 13:26:00,747] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,11]
[TRACE] [2017-04-08 13:26:00,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-44
[TRACE] [2017-04-08 13:26:00,747] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,44]
[TRACE] [2017-04-08 13:26:00,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-36
[TRACE] [2017-04-08 13:26:00,747] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,23]
[TRACE] [2017-04-08 13:26:00,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-47
[TRACE] [2017-04-08 13:26:00,747] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,19]
[TRACE] [2017-04-08 13:26:00,747] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,32]
[TRACE] [2017-04-08 13:26:00,747] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,28]
[TRACE] [2017-04-08 13:26:00,747] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,7]
[TRACE] [2017-04-08 13:26:00,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-3
[TRACE] [2017-04-08 13:26:00,747] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,40]
[TRACE] [2017-04-08 13:26:00,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-14
[TRACE] [2017-04-08 13:26:00,747] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,3]
[TRACE] [2017-04-08 13:26:00,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-25
[TRACE] [2017-04-08 13:26:00,747] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,36]
[TRACE] [2017-04-08 13:26:00,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-30
[TRACE] [2017-04-08 13:26:00,747] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,47]
[TRACE] [2017-04-08 13:26:00,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-41
[TRACE] [2017-04-08 13:26:00,747] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,14]
[TRACE] [2017-04-08 13:26:00,747] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-33
[TRACE] [2017-04-08 13:26:00,748] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,43]
[TRACE] [2017-04-08 13:26:00,748] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-11
[TRACE] [2017-04-08 13:26:00,748] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,10]
[TRACE] [2017-04-08 13:26:00,748] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,22]
[TRACE] [2017-04-08 13:26:00,748] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,18]
[TRACE] [2017-04-08 13:26:00,748] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,31]
[TRACE] [2017-04-08 13:26:00,748] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,27]
[TRACE] [2017-04-08 13:26:00,748] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,39]
[TRACE] [2017-04-08 13:26:00,748] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,6]
[TRACE] [2017-04-08 13:26:00,748] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-22
[TRACE] [2017-04-08 13:26:00,748] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,35]
[TRACE] [2017-04-08 13:26:00,748] [kafka-request-handler-0] [state.change.logger] - Broker 0 received LeaderAndIsr request PartitionState(controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0]) correlation id 3 from controller 0 epoch 1 for partition [__consumer_offsets,2]
[TRACE] [2017-04-08 13:26:00,748] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition __consumer_offsets-0
[TRACE] [2017-04-08 13:26:00,755] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,25] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,758] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,12] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,758] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,31] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,758] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,40] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,758] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,35] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,758] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,9] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,759] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,43] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,759] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,2] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,759] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,11] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,759] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,29] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,759] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,30] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,760] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,4] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,760] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,42] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,760] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,26] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,760] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,34] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,760] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,17] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,760] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,37] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,760] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,27] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,761] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,10] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,762] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,41] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,762] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,20] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,762] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,28] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,762] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,46] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,763] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,39] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,763] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,47] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,763] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,49] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,763] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,22] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,763] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,1] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,763] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,24] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,763] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,6] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,763] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,36] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,763] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,8] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,763] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,38] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,763] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,16] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,766] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,21] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,766] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,18] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,769] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,0] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,769] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,48] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,770] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,5] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,770] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,13] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,771] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,3] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,771] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,44] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,771] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,15] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,771] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,7] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,771] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,19] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,772] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,33] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,772] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,45] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,774] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,23] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,775] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,32] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,777] [ZkClient-EventThread-16-localhost:2181] [state.change.logger] - Controller 0 epoch 1 changed state of replica 0 for partition [__consumer_offsets,14] from NewReplica to OnlineReplica
[TRACE] [2017-04-08 13:26:00,780] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,0]
[TRACE] [2017-04-08 13:26:00,781] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,29]
[TRACE] [2017-04-08 13:26:00,781] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,48]
[TRACE] [2017-04-08 13:26:00,781] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,10]
[TRACE] [2017-04-08 13:26:00,781] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,45]
[TRACE] [2017-04-08 13:26:00,781] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,26]
[TRACE] [2017-04-08 13:26:00,781] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,7]
[TRACE] [2017-04-08 13:26:00,781] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,42]
[TRACE] [2017-04-08 13:26:00,781] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,4]
[TRACE] [2017-04-08 13:26:00,782] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,23]
[TRACE] [2017-04-08 13:26:00,782] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,1]
[TRACE] [2017-04-08 13:26:00,782] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,20]
[TRACE] [2017-04-08 13:26:00,782] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,39]
[TRACE] [2017-04-08 13:26:00,782] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,17]
[TRACE] [2017-04-08 13:26:00,782] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,36]
[TRACE] [2017-04-08 13:26:00,782] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,14]
[TRACE] [2017-04-08 13:26:00,782] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,33]
[TRACE] [2017-04-08 13:26:00,782] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,49]
[TRACE] [2017-04-08 13:26:00,783] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,11]
[TRACE] [2017-04-08 13:26:00,783] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,30]
[TRACE] [2017-04-08 13:26:00,783] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,46]
[TRACE] [2017-04-08 13:26:00,783] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,27]
[TRACE] [2017-04-08 13:26:00,783] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,8]
[TRACE] [2017-04-08 13:26:00,783] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,24]
[TRACE] [2017-04-08 13:26:00,783] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,43]
[TRACE] [2017-04-08 13:26:00,783] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,5]
[TRACE] [2017-04-08 13:26:00,783] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,21]
[TRACE] [2017-04-08 13:26:00,783] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,2]
[TRACE] [2017-04-08 13:26:00,783] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,40]
[TRACE] [2017-04-08 13:26:00,783] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,37]
[TRACE] [2017-04-08 13:26:00,784] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,18]
[TRACE] [2017-04-08 13:26:00,784] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,34]
[TRACE] [2017-04-08 13:26:00,784] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,15]
[TRACE] [2017-04-08 13:26:00,784] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,12]
[TRACE] [2017-04-08 13:26:00,784] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,31]
[TRACE] [2017-04-08 13:26:00,784] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,9]
[TRACE] [2017-04-08 13:26:00,784] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,47]
[TRACE] [2017-04-08 13:26:00,784] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,19]
[TRACE] [2017-04-08 13:26:00,784] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,28]
[TRACE] [2017-04-08 13:26:00,784] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,38]
[TRACE] [2017-04-08 13:26:00,785] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,35]
[TRACE] [2017-04-08 13:26:00,785] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,44]
[TRACE] [2017-04-08 13:26:00,785] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,6]
[TRACE] [2017-04-08 13:26:00,785] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,25]
[TRACE] [2017-04-08 13:26:00,785] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,16]
[TRACE] [2017-04-08 13:26:00,785] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,22]
[TRACE] [2017-04-08 13:26:00,786] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,41]
[TRACE] [2017-04-08 13:26:00,786] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,32]
[TRACE] [2017-04-08 13:26:00,786] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,3]
[TRACE] [2017-04-08 13:26:00,786] [kafka-request-handler-0] [state.change.logger] - Broker 0 handling LeaderAndIsr request correlationId 3 from controller 0 epoch 1 starting the become-leader transition for partition [__consumer_offsets,13]
[TRACE] [2017-04-08 13:26:01,623] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,22]
[TRACE] [2017-04-08 13:26:01,623] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,25]
[TRACE] [2017-04-08 13:26:01,623] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,28]
[TRACE] [2017-04-08 13:26:01,623] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,31]
[TRACE] [2017-04-08 13:26:01,623] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,34]
[TRACE] [2017-04-08 13:26:01,623] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,37]
[TRACE] [2017-04-08 13:26:01,623] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,40]
[TRACE] [2017-04-08 13:26:01,623] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,43]
[TRACE] [2017-04-08 13:26:01,623] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,46]
[TRACE] [2017-04-08 13:26:01,623] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,49]
[TRACE] [2017-04-08 13:26:01,623] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,41]
[TRACE] [2017-04-08 13:26:01,623] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,44]
[TRACE] [2017-04-08 13:26:01,623] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,47]
[TRACE] [2017-04-08 13:26:01,623] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,1]
[TRACE] [2017-04-08 13:26:01,623] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,4]
[TRACE] [2017-04-08 13:26:01,624] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,7]
[TRACE] [2017-04-08 13:26:01,624] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,10]
[TRACE] [2017-04-08 13:26:01,624] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,13]
[TRACE] [2017-04-08 13:26:01,624] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,16]
[TRACE] [2017-04-08 13:26:01,624] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,19]
[TRACE] [2017-04-08 13:26:01,624] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,2]
[TRACE] [2017-04-08 13:26:01,624] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,5]
[TRACE] [2017-04-08 13:26:01,624] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,8]
[TRACE] [2017-04-08 13:26:01,624] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,11]
[TRACE] [2017-04-08 13:26:01,624] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,14]
[TRACE] [2017-04-08 13:26:01,624] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,17]
[TRACE] [2017-04-08 13:26:01,624] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,20]
[TRACE] [2017-04-08 13:26:01,624] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,23]
[TRACE] [2017-04-08 13:26:01,624] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,26]
[TRACE] [2017-04-08 13:26:01,625] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,29]
[TRACE] [2017-04-08 13:26:01,625] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,32]
[TRACE] [2017-04-08 13:26:01,625] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,35]
[TRACE] [2017-04-08 13:26:01,625] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,38]
[TRACE] [2017-04-08 13:26:01,625] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,0]
[TRACE] [2017-04-08 13:26:01,625] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,3]
[TRACE] [2017-04-08 13:26:01,625] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,6]
[TRACE] [2017-04-08 13:26:01,625] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,9]
[TRACE] [2017-04-08 13:26:01,625] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,12]
[TRACE] [2017-04-08 13:26:01,625] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,15]
[TRACE] [2017-04-08 13:26:01,625] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,18]
[TRACE] [2017-04-08 13:26:01,625] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,21]
[TRACE] [2017-04-08 13:26:01,625] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,24]
[TRACE] [2017-04-08 13:26:01,625] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,27]
[TRACE] [2017-04-08 13:26:01,625] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,30]
[TRACE] [2017-04-08 13:26:01,625] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,33]
[TRACE] [2017-04-08 13:26:01,625] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,36]
[TRACE] [2017-04-08 13:26:01,625] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,39]
[TRACE] [2017-04-08 13:26:01,625] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,42]
[TRACE] [2017-04-08 13:26:01,625] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,45]
[TRACE] [2017-04-08 13:26:01,625] [kafka-request-handler-0] [state.change.logger] - Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 3 for partition [__consumer_offsets,48]
[TRACE] [2017-04-08 13:26:01,625] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,0]
[TRACE] [2017-04-08 13:26:01,625] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,29]
[TRACE] [2017-04-08 13:26:01,626] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,48]
[TRACE] [2017-04-08 13:26:01,626] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,10]
[TRACE] [2017-04-08 13:26:01,626] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,45]
[TRACE] [2017-04-08 13:26:01,626] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,26]
[TRACE] [2017-04-08 13:26:01,628] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,7]
[TRACE] [2017-04-08 13:26:01,628] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,42]
[TRACE] [2017-04-08 13:26:01,628] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,4]
[TRACE] [2017-04-08 13:26:01,629] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,23]
[TRACE] [2017-04-08 13:26:01,629] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,1]
[TRACE] [2017-04-08 13:26:01,629] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,20]
[TRACE] [2017-04-08 13:26:01,629] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,39]
[TRACE] [2017-04-08 13:26:01,629] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,17]
[TRACE] [2017-04-08 13:26:01,629] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,36]
[TRACE] [2017-04-08 13:26:01,629] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,14]
[TRACE] [2017-04-08 13:26:01,629] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,33]
[TRACE] [2017-04-08 13:26:01,629] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,49]
[TRACE] [2017-04-08 13:26:01,629] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,11]
[TRACE] [2017-04-08 13:26:01,629] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,30]
[TRACE] [2017-04-08 13:26:01,629] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,46]
[TRACE] [2017-04-08 13:26:01,629] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,27]
[TRACE] [2017-04-08 13:26:01,629] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,8]
[TRACE] [2017-04-08 13:26:01,629] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,24]
[TRACE] [2017-04-08 13:26:01,629] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,43]
[TRACE] [2017-04-08 13:26:01,629] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,5]
[TRACE] [2017-04-08 13:26:01,629] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,21]
[TRACE] [2017-04-08 13:26:01,629] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,2]
[TRACE] [2017-04-08 13:26:01,629] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,40]
[TRACE] [2017-04-08 13:26:01,629] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,37]
[TRACE] [2017-04-08 13:26:01,629] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,18]
[TRACE] [2017-04-08 13:26:01,629] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,34]
[TRACE] [2017-04-08 13:26:01,630] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,15]
[TRACE] [2017-04-08 13:26:01,630] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,12]
[TRACE] [2017-04-08 13:26:01,630] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,31]
[TRACE] [2017-04-08 13:26:01,630] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,9]
[TRACE] [2017-04-08 13:26:01,630] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,47]
[TRACE] [2017-04-08 13:26:01,630] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,19]
[TRACE] [2017-04-08 13:26:01,630] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,28]
[TRACE] [2017-04-08 13:26:01,630] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,38]
[TRACE] [2017-04-08 13:26:01,630] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,35]
[TRACE] [2017-04-08 13:26:01,630] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,44]
[TRACE] [2017-04-08 13:26:01,630] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,6]
[TRACE] [2017-04-08 13:26:01,630] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,25]
[TRACE] [2017-04-08 13:26:01,630] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,16]
[TRACE] [2017-04-08 13:26:01,630] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,22]
[TRACE] [2017-04-08 13:26:01,630] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,41]
[TRACE] [2017-04-08 13:26:01,630] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,32]
[TRACE] [2017-04-08 13:26:01,630] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,3]
[TRACE] [2017-04-08 13:26:01,630] [kafka-request-handler-0] [state.change.logger] - Broker 0 completed LeaderAndIsr request correlationId 3 from controller 0 epoch 1 for the become-leader transition for partition [__consumer_offsets,13]
[TRACE] [2017-04-08 13:26:01,852] [Controller-0-to-broker-0-send-thread] [state.change.logger] - Controller 0 epoch 1 received response {error_code=0,partitions=[{topic=__consumer_offsets,partition=49,error_code=0},{topic=__consumer_offsets,partition=38,error_code=0},{topic=__consumer_offsets,partition=27,error_code=0},{topic=__consumer_offsets,partition=16,error_code=0},{topic=__consumer_offsets,partition=8,error_code=0},{topic=__consumer_offsets,partition=19,error_code=0},{topic=__consumer_offsets,partition=13,error_code=0},{topic=__consumer_offsets,partition=2,error_code=0},{topic=__consumer_offsets,partition=24,error_code=0},{topic=__consumer_offsets,partition=46,error_code=0},{topic=__consumer_offsets,partition=35,error_code=0},{topic=__consumer_offsets,partition=5,error_code=0},{topic=__consumer_offsets,partition=43,error_code=0},{topic=__consumer_offsets,partition=21,error_code=0},{topic=__consumer_offsets,partition=32,error_code=0},{topic=__consumer_offsets,partition=10,error_code=0},{topic=__consumer_offsets,partition=37,error_code=0},{topic=__consumer_offsets,partition=48,error_code=0},{topic=__consumer_offsets,partition=29,error_code=0},{topic=__consumer_offsets,partition=40,error_code=0},{topic=__consumer_offsets,partition=18,error_code=0},{topic=__consumer_offsets,partition=7,error_code=0},{topic=__consumer_offsets,partition=45,error_code=0},{topic=__consumer_offsets,partition=23,error_code=0},{topic=__consumer_offsets,partition=34,error_code=0},{topic=__consumer_offsets,partition=26,error_code=0},{topic=__consumer_offsets,partition=4,error_code=0},{topic=__consumer_offsets,partition=15,error_code=0},{topic=__consumer_offsets,partition=42,error_code=0},{topic=__consumer_offsets,partition=20,error_code=0},{topic=__consumer_offsets,partition=31,error_code=0},{topic=__consumer_offsets,partition=9,error_code=0},{topic=__consumer_offsets,partition=1,error_code=0},{topic=__consumer_offsets,partition=12,error_code=0},{topic=__consumer_offsets,partition=17,error_code=0},{topic=__consumer_offsets,partition=28,error_code=0},{topic=__consumer_offsets,partition=6,error_code=0},{topic=__consumer_offsets,partition=39,error_code=0},{topic=__consumer_offsets,partition=44,error_code=0},{topic=__consumer_offsets,partition=36,error_code=0},{topic=__consumer_offsets,partition=47,error_code=0},{topic=__consumer_offsets,partition=14,error_code=0},{topic=__consumer_offsets,partition=25,error_code=0},{topic=__consumer_offsets,partition=3,error_code=0},{topic=__consumer_offsets,partition=30,error_code=0},{topic=__consumer_offsets,partition=41,error_code=0},{topic=__consumer_offsets,partition=11,error_code=0},{topic=__consumer_offsets,partition=33,error_code=0},{topic=__consumer_offsets,partition=22,error_code=0},{topic=__consumer_offsets,partition=0,error_code=0}]} for a request sent to broker localhost:9092 (id: 0 rack: null)
[TRACE] [2017-04-08 13:26:01,855] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,855] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,856] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,857] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,857] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,857] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,858] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,858] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,859] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,859] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,859] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,859] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,860] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,860] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,860] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,860] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,860] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,860] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,860] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,860] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,860] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,860] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,860] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,861] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,861] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,861] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,861] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,861] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,861] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,861] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,861] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,862] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,862] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,862] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,862] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,862] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,862] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,862] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,864] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,865] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,865] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,866] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,866] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,867] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,891] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,891] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,891] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,892] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,892] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,892] [kafka-request-handler-2] [state.change.logger] - Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 4
[TRACE] [2017-04-08 13:26:01,893] [Controller-0-to-broker-0-send-thread] [state.change.logger] - Controller 0 epoch 1 received response {error_code=0} for a request sent to broker localhost:9092 (id: 0 rack: null)
